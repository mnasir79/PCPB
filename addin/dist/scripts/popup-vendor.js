!function(e){"use strict";function t(e){return function(){var t,n=arguments[0];for(t="["+(e?e+":":"")+n+"] http://errors.angularjs.org/1.5.5/"+(e?e+"/":"")+n,n=1;n<arguments.length;n++){t=t+(1==n?"?":"&")+"p"+(n-1)+"=";var r,i=encodeURIComponent;r=arguments[n],r="function"==typeof r?r.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof r?"undefined":"string"!=typeof r?JSON.stringify(r):r,t+=i(r)}return Error(t)}}function n(e){if(null==e||S(e))return!1;if(or(e)||b(e)||Vn&&e instanceof Vn)return!0;var t="length"in Object(e)&&e.length;return w(t)&&(t>=0&&(t-1 in e||e instanceof Array)||"function"==typeof e.item)}function r(e,t,i){var o,a;if(e)if(E(e))for(o in e)"prototype"==o||"length"==o||"name"==o||e.hasOwnProperty&&!e.hasOwnProperty(o)||t.call(i,e[o],o,e);else if(or(e)||n(e)){var s="object"!=typeof e;for(o=0,a=e.length;a>o;o++)(s||o in e)&&t.call(i,e[o],o,e)}else if(e.forEach&&e.forEach!==r)e.forEach(t,i,e);else if($(e))for(o in e)t.call(i,e[o],o,e);else if("function"==typeof e.hasOwnProperty)for(o in e)e.hasOwnProperty(o)&&t.call(i,e[o],o,e);else for(o in e)Kn.call(e,o)&&t.call(i,e[o],o,e);return e}function i(e,t,n){for(var r=Object.keys(e).sort(),i=0;i<r.length;i++)t.call(n,e[r[i]],r[i]);return r}function o(e){return function(t,n){e(n,t)}}function a(){return++ir}function s(e,t,n){for(var r=e.$$hashKey,i=0,o=t.length;o>i;++i){var a=t[i];if(y(a)||E(a))for(var l=Object.keys(a),u=0,c=l.length;c>u;u++){var p=l[u],h=a[p];n&&y(h)?x(h)?e[p]=new Date(h.valueOf()):C(h)?e[p]=new RegExp(h):h.nodeName?e[p]=h.cloneNode(!0):L(h)?e[p]=h.clone():(y(e[p])||(e[p]=or(h)?[]:{}),s(e[p],[h],!0)):e[p]=h}}return r?e.$$hashKey=r:delete e.$$hashKey,e}function l(e){return s(e,Qn.call(arguments,1),!1)}function u(e){return s(e,Qn.call(arguments,1),!0)}function c(e){return parseInt(e,10)}function p(e,t){return l(Object.create(e),t)}function h(){}function d(e){return e}function f(e){return function(){return e}}function g(e){return E(e.toString)&&e.toString!==er}function m(e){return"undefined"==typeof e}function v(e){return"undefined"!=typeof e}function y(e){return null!==e&&"object"==typeof e}function $(e){return null!==e&&"object"==typeof e&&!tr(e)}function b(e){return"string"==typeof e}function w(e){return"number"==typeof e}function x(e){return"[object Date]"===er.call(e)}function E(e){return"function"==typeof e}function C(e){return"[object RegExp]"===er.call(e)}function S(e){return e&&e.window===e}function T(e){return e&&e.$evalAsync&&e.$watch}function A(e){return"boolean"==typeof e}function N(e){return e&&w(e.length)&&ar.test(er.call(e))}function L(e){return!(!e||!(e.nodeName||e.prop&&e.attr&&e.find))}function O(e){var t={};e=e.split(",");var n;for(n=0;n<e.length;n++)t[e[n]]=!0;return t}function I(e){return Yn(e.nodeName||e[0]&&e[0].nodeName)}function k(e,t){var n=e.indexOf(t);return n>=0&&e.splice(n,1),n}function R(e,t){function n(e,t){var n,r=t.$$hashKey;if(or(e)){n=0;for(var o=e.length;o>n;n++)t.push(i(e[n]))}else if($(e))for(n in e)t[n]=i(e[n]);else if(e&&"function"==typeof e.hasOwnProperty)for(n in e)e.hasOwnProperty(n)&&(t[n]=i(e[n]));else for(n in e)Kn.call(e,n)&&(t[n]=i(e[n]));return r?t.$$hashKey=r:delete t.$$hashKey,t}function i(e){if(!y(e))return e;var t=a.indexOf(e);if(-1!==t)return s[t];if(S(e)||T(e))throw nr("cpws");var t=!1,r=o(e);return void 0===r&&(r=or(e)?[]:Object.create(tr(e)),t=!0),a.push(e),s.push(r),t?n(e,r):r}function o(e){switch(er.call(e)){case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Float32Array]":case"[object Float64Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return new e.constructor(i(e.buffer));case"[object ArrayBuffer]":if(!e.slice){var t=new ArrayBuffer(e.byteLength);return new Uint8Array(t).set(new Uint8Array(e)),t}return e.slice(0);case"[object Boolean]":case"[object Number]":case"[object String]":case"[object Date]":return new e.constructor(e.valueOf());case"[object RegExp]":return t=new RegExp(e.source,e.toString().match(/[^\/]*$/)[0]),t.lastIndex=e.lastIndex,t;case"[object Blob]":return new e.constructor([e],{type:e.type})}return E(e.cloneNode)?e.cloneNode(!0):void 0}var a=[],s=[];if(t){if(N(t)||"[object ArrayBuffer]"===er.call(t))throw nr("cpta");if(e===t)throw nr("cpi");return or(t)?t.length=0:r(t,function(e,n){"$$hashKey"!==n&&delete t[n]}),a.push(e),s.push(t),n(e,t)}return i(e)}function M(e,t){if(or(e)){t=t||[];for(var n=0,r=e.length;r>n;n++)t[n]=e[n]}else if(y(e))for(n in t=t||{},e)"$"===n.charAt(0)&&"$"===n.charAt(1)||(t[n]=e[n]);return t||e}function D(e,t){if(e===t)return!0;if(null===e||null===t)return!1;if(e!==e&&t!==t)return!0;var n,r=typeof e;if(r==typeof t&&"object"==r){if(!or(e)){if(x(e))return x(t)?D(e.getTime(),t.getTime()):!1;if(C(e))return C(t)?e.toString()==t.toString():!1;if(T(e)||T(t)||S(e)||S(t)||or(t)||x(t)||C(t))return!1;r=se();for(n in e)if("$"!==n.charAt(0)&&!E(e[n])){if(!D(e[n],t[n]))return!1;r[n]=!0}for(n in t)if(!(n in r)&&"$"!==n.charAt(0)&&v(t[n])&&!E(t[n]))return!1;return!0}if(!or(t))return!1;if((r=e.length)==t.length){for(n=0;r>n;n++)if(!D(e[n],t[n]))return!1;return!0}}return!1}function _(e,t,n){return e.concat(Qn.call(t,n))}function j(e,t){var n=2<arguments.length?Qn.call(arguments,2):[];return!E(t)||t instanceof RegExp?t:n.length?function(){return arguments.length?t.apply(e,_(n,arguments,0)):t.apply(e,n)}:function(){return arguments.length?t.apply(e,arguments):t.call(e)}}function P(t,n){var r=n;return"string"==typeof t&&"$"===t.charAt(0)&&"$"===t.charAt(1)?r=void 0:S(n)?r="$WINDOW":n&&e.document===n?r="$DOCUMENT":T(n)&&(r="$SCOPE"),r}function F(e,t){return m(e)?void 0:(w(t)||(t=t?2:null),JSON.stringify(e,P,t))}function q(e){return b(e)?JSON.parse(e):e}function U(e,t){e=e.replace(pr,"");var n=Date.parse("Jan 01, 1970 00:00:00 "+e)/6e4;return isNaN(n)?t:n}function B(e,t,n){n=n?-1:1;var r=e.getTimezoneOffset();return t=U(t,r),n*=t-r,e=new Date(e.getTime()),e.setMinutes(e.getMinutes()+n),e}function H(e){e=Vn(e).clone();try{e.empty()}catch(t){}var n=Vn("<div>").append(e).html();try{return e[0].nodeType===gr?Yn(n):n.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(e,t){return"<"+Yn(t)})}catch(r){return Yn(n)}}function V(e){try{return decodeURIComponent(e)}catch(t){}}function G(e){var t={};return r((e||"").split("&"),function(e){var n,r,i;e&&(r=e=e.replace(/\+/g,"%20"),n=e.indexOf("="),-1!==n&&(r=e.substring(0,n),i=e.substring(n+1)),r=V(r),v(r)&&(i=v(i)?V(i):!0,Kn.call(t,r)?or(t[r])?t[r].push(i):t[r]=[t[r],i]:t[r]=i))}),t}function W(e){var t=[];return r(e,function(e,n){or(e)?r(e,function(e){t.push(K(n,!0)+(!0===e?"":"="+K(e,!0)))}):t.push(K(n,!0)+(!0===e?"":"="+K(e,!0)))}),t.length?t.join("&"):""}function z(e){return K(e,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function K(e,t){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,t?"%20":"+")}function Y(e,t){var n,r,i=hr.length;for(r=0;i>r;++r)if(n=hr[r]+t,b(n=e.getAttribute(n)))return n;return null}function X(e,t){var n,i,o={};r(hr,function(t){t+="app",!n&&e.hasAttribute&&e.hasAttribute(t)&&(n=e,i=e.getAttribute(t))}),r(hr,function(t){t+="app";var r;!n&&(r=e.querySelector("["+t.replace(":","\\:")+"]"))&&(n=r,i=r.getAttribute(t))}),n&&(o.strictDi=null!==Y(n,"strict-di"),t(n,i?[i]:[],o))}function Q(t,n,i){y(i)||(i={}),i=l({strictDi:!1},i);var o=function(){if(t=Vn(t),t.injector()){var r=t[0]===e.document?"document":H(t);throw nr("btstrpd",r.replace(/</,"&lt;").replace(/>/,"&gt;"))}return n=n||[],n.unshift(["$provide",function(e){e.value("$rootElement",t)}]),i.debugInfoEnabled&&n.push(["$compileProvider",function(e){e.debugInfoEnabled(!0)}]),n.unshift("ng"),r=Fe(n,i.strictDi),r.invoke(["$rootScope","$rootElement","$compile","$injector",function(e,t,n,r){e.$apply(function(){t.data("$injector",r),n(t)(e)})}]),r},a=/^NG_ENABLE_DEBUG_INFO!/,s=/^NG_DEFER_BOOTSTRAP!/;return e&&a.test(e.name)&&(i.debugInfoEnabled=!0,e.name=e.name.replace(a,"")),e&&!s.test(e.name)?o():(e.name=e.name.replace(s,""),rr.resumeBootstrap=function(e){return r(e,function(e){n.push(e)}),o()},void(E(rr.resumeDeferredBootstrap)&&rr.resumeDeferredBootstrap()))}function J(){e.name="NG_ENABLE_DEBUG_INFO!"+e.name,e.location.reload()}function Z(e){if(e=rr.element(e).injector(),!e)throw nr("test");return e.get("$$testability")}function ee(e,t){return t=t||"_",e.replace(dr,function(e,n){return(n?t:"")+e.toLowerCase()})}function te(){var t;if(!fr){var n=cr();(Gn=m(n)?e.jQuery:n?e[n]:void 0)&&Gn.fn.on?(Vn=Gn,l(Gn.fn,{scope:Lr.scope,isolateScope:Lr.isolateScope,controller:Lr.controller,injector:Lr.injector,inheritedData:Lr.inheritedData}),t=Gn.cleanData,Gn.cleanData=function(e){for(var n,r,i=0;null!=(r=e[i]);i++)(n=Gn._data(r,"events"))&&n.$destroy&&Gn(r).triggerHandler("$destroy");t(e)}):Vn=fe,rr.element=Vn,fr=!0}}function ne(e,t,n){if(!e)throw nr("areq",t||"?",n||"required");return e}function re(e,t,n){return n&&or(e)&&(e=e[e.length-1]),ne(E(e),t,"not a function, got "+(e&&"object"==typeof e?e.constructor.name||"Object":typeof e)),e}function ie(e,t){if("hasOwnProperty"===e)throw nr("badname",t)}function oe(e,t,n){if(!t)return e;t=t.split(".");for(var r,i=e,o=t.length,a=0;o>a;a++)r=t[a],e&&(e=(i=e)[r]);return!n&&E(e)?j(i,e):e}function ae(e){for(var t,n=e[0],r=e[e.length-1],i=1;n!==r&&(n=n.nextSibling);i++)(t||e[i]!==n)&&(t||(t=Vn(Qn.call(e,0,i))),t.push(n));return t||e}function se(){return Object.create(null)}function le(e){function n(e,t,n){return e[t]||(e[t]=n())}var r=t("$injector"),i=t("ng");return e=n(e,"angular",Object),e.$$minErr=e.$$minErr||t,n(e,"module",function(){var e={};return function(t,o,a){if("hasOwnProperty"===t)throw i("badname","module");return o&&e.hasOwnProperty(t)&&(e[t]=null),n(e,t,function(){function e(e,t,n,r){return r||(r=i),function(){return r[n||"push"]([e,t,arguments]),c}}function n(e,n){return function(r,o){return o&&E(o)&&(o.$$moduleName=t),i.push([e,n,arguments]),c}}if(!o)throw r("nomod",t);var i=[],s=[],l=[],u=e("$injector","invoke","push",s),c={_invokeQueue:i,_configBlocks:s,_runBlocks:l,requires:o,name:t,provider:n("$provide","provider"),factory:n("$provide","factory"),service:n("$provide","service"),value:e("$provide","value"),constant:e("$provide","constant","unshift"),decorator:n("$provide","decorator"),animation:n("$animateProvider","register"),filter:n("$filterProvider","register"),controller:n("$controllerProvider","register"),directive:n("$compileProvider","directive"),component:n("$compileProvider","component"),config:u,run:function(e){return l.push(e),this}};return a&&u(a),c})}})}function ue(n){l(n,{bootstrap:Q,copy:R,extend:l,merge:u,equals:D,element:Vn,forEach:r,injector:Fe,noop:h,bind:j,toJson:F,fromJson:q,identity:d,isUndefined:m,isDefined:v,isString:b,isFunction:E,isObject:y,isNumber:w,isElement:L,isArray:or,version:mr,isDate:x,lowercase:Yn,uppercase:Xn,callbacks:{counter:0},getTestability:Z,$$minErr:t,$$csp:ur,reloadWithDebugInfo:J}),(Wn=le(e))("ng",["ngLocale"],["$provide",function(e){e.provider({$$sanitizeUri:Qt}),e.provider("$compile",Ke).directive({a:Mi,input:Qi,textarea:Qi,form:Pi,script:Uo,select:Vo,style:Wo,option:Go,ngBind:eo,ngBindHtml:no,ngBindTemplate:to,ngClass:io,ngClassEven:ao,ngClassOdd:oo,ngCloak:so,ngController:lo,ngForm:Fi,ngHide:Mo,ngIf:po,ngInclude:ho,ngInit:go,ngNonBindable:Ao,ngPluralize:Io,ngRepeat:ko,ngShow:Ro,ngStyle:Do,ngSwitch:_o,ngSwitchWhen:jo,ngSwitchDefault:Po,ngOptions:Oo,ngTransclude:qo,ngModel:Co,ngList:mo,ngChange:ro,pattern:Ko,ngPattern:Ko,required:zo,ngRequired:zo,minlength:Xo,ngMinlength:Xo,maxlength:Yo,ngMaxlength:Yo,ngValue:Zi,ngModelOptions:To}).directive({ngInclude:fo}).directive(Di).directive(uo),e.provider({$anchorScroll:qe,$animate:Hr,$animateCss:Wr,$$animateJs:Ur,$$animateQueue:Br,$$AnimateRunner:Gr,$$animateAsyncRun:Vr,$browser:Ge,$cacheFactory:We,$controller:et,$document:tt,$exceptionHandler:nt,$filter:hn,$$forceReflow:Jr,$interpolate:ft,$interval:gt,$http:ct,$httpParamSerializer:it,$httpParamSerializerJQLike:ot,$httpBackend:ht,$xhrFactory:pt,$location:At,$log:Nt,$parse:Gt,$rootScope:Xt,$q:Wt,$$q:zt,$sce:tn,$sceDelegate:en,$sniffer:nn,$templateCache:ze,$templateRequest:rn,$$testability:on,$timeout:an,$window:un,$$rAF:Yt,$$jqLite:Me,$$HashMap:Rr,$$cookieReader:pn})}])}function ce(e){return e.replace($r,function(e,t,n,r){return r?n.toUpperCase():n}).replace(br,"Moz$1")}function pe(e){return e=e.nodeType,1===e||!e||9===e}function he(e,t){var n,i,o=t.createDocumentFragment(),a=[];if(Cr.test(e)){for(n=n||o.appendChild(t.createElement("div")),i=(Sr.exec(e)||["",""])[1].toLowerCase(),i=Ar[i]||Ar._default,n.innerHTML=i[1]+e.replace(Tr,"<$1></$2>")+i[2],i=i[0];i--;)n=n.lastChild;a=_(a,n.childNodes),n=o.firstChild,n.textContent=""}else a.push(t.createTextNode(e));return o.textContent="",o.innerHTML="",r(a,function(e){o.appendChild(e)}),o}function de(e,t){var n=e.parentNode;n&&n.replaceChild(t,e),t.appendChild(e)}function fe(t){if(t instanceof fe)return t;var n;if(b(t)&&(t=sr(t),n=!0),!(this instanceof fe)){if(n&&"<"!=t.charAt(0))throw xr("nosel");return new fe(t)}if(n){n=e.document;var r;t=(r=Er.exec(t))?[n.createElement(r[1])]:(r=he(t,n))?r.childNodes:[]}Ce(this,t)}function ge(e){return e.cloneNode(!0)}function me(e,t){if(t||ye(e),e.querySelectorAll)for(var n=e.querySelectorAll("*"),r=0,i=n.length;i>r;r++)ye(n[r])}function ve(e,t,n,i){if(v(i))throw xr("offargs");var o=(i=$e(e))&&i.events,a=i&&i.handle;if(a)if(t){var s=function(t){var r=o[t];v(n)&&k(r||[],n),v(n)&&r&&0<r.length||(e.removeEventListener(t,a,!1),delete o[t])};r(t.split(" "),function(e){s(e),wr[e]&&s(wr[e])})}else for(t in o)"$destroy"!==t&&e.removeEventListener(t,a,!1),delete o[t]}function ye(e,t){var n=e.ng339,r=n&&vr[n];r&&(t?delete r.data[t]:(r.handle&&(r.events.$destroy&&r.handle({},"$destroy"),ve(e)),delete vr[n],e.ng339=void 0))}function $e(e,t){var n=e.ng339,n=n&&vr[n];return t&&!n&&(e.ng339=n=++yr,n=vr[n]={events:{},data:{},handle:void 0}),n}function be(e,t,n){if(pe(e)){var r=v(n),i=!r&&t&&!y(t),o=!t;if(e=(e=$e(e,!i))&&e.data,r)e[t]=n;else{if(o)return e;if(i)return e&&e[t];l(e,t)}}}function we(e,t){return e.getAttribute?-1<(" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+t+" "):!1}function xe(e,t){t&&e.setAttribute&&r(t.split(" "),function(t){e.setAttribute("class",sr((" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+sr(t)+" "," ")))})}function Ee(e,t){if(t&&e.setAttribute){var n=(" "+(e.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");r(t.split(" "),function(e){e=sr(e),-1===n.indexOf(" "+e+" ")&&(n+=e+" ")}),e.setAttribute("class",sr(n))}}function Ce(e,t){if(t)if(t.nodeType)e[e.length++]=t;else{var n=t.length;if("number"==typeof n&&t.window!==t){if(n)for(var r=0;n>r;r++)e[e.length++]=t[r]}else e[e.length++]=t}}function Se(e,t){return Te(e,"$"+(t||"ngController")+"Controller")}function Te(e,t,n){for(9==e.nodeType&&(e=e.documentElement),t=or(t)?t:[t];e;){for(var r=0,i=t.length;i>r;r++)if(v(n=Vn.data(e,t[r])))return n;e=e.parentNode||11===e.nodeType&&e.host}}function Ae(e){for(me(e,!0);e.firstChild;)e.removeChild(e.firstChild)}function Ne(e,t){t||me(e);var n=e.parentNode;n&&n.removeChild(e)}function Le(t,n){n=n||e,"complete"===n.document.readyState?n.setTimeout(t):Vn(n).on("load",t)}function Oe(e,t){var n=Or[t.toLowerCase()];return n&&Ir[I(e)]&&n}function Ie(e,t){var n=function(n,r){n.isDefaultPrevented=function(){return n.defaultPrevented};var i=t[r||n.type],o=i?i.length:0;if(o){if(m(n.immediatePropagationStopped)){var a=n.stopImmediatePropagation;n.stopImmediatePropagation=function(){n.immediatePropagationStopped=!0,n.stopPropagation&&n.stopPropagation(),a&&a.call(n)}}n.isImmediatePropagationStopped=function(){return!0===n.immediatePropagationStopped};var s=i.specialHandlerWrapper||ke;o>1&&(i=M(i));for(var l=0;o>l;l++)n.isImmediatePropagationStopped()||s(e,n,i[l])}};return n.elem=e,n}function ke(e,t,n){n.call(e,t)}function Re(e,t,n){var r=t.relatedTarget;r&&(r===e||Nr.call(e,r))||n.call(e,t)}function Me(){this.$get=function(){return l(fe,{hasClass:function(e,t){return e.attr&&(e=e[0]),we(e,t)},addClass:function(e,t){return e.attr&&(e=e[0]),Ee(e,t)},removeClass:function(e,t){return e.attr&&(e=e[0]),xe(e,t)}})}}function De(e,t){var n=e&&e.$$hashKey;return n?("function"==typeof n&&(n=e.$$hashKey()),n):(n=typeof e,n="function"==n||"object"==n&&null!==e?e.$$hashKey=n+":"+(t||a)():n+":"+e)}function _e(e,t){if(t){var n=0;this.nextUid=function(){return++n}}r(e,this.put,this)}function je(e){return e=Function.prototype.toString.call(e).replace(Pr,""),e.match(Mr)||e.match(Dr)}function Pe(e){return(e=je(e))?"function("+(e[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function Fe(e,t){function n(e){return function(t,n){return y(t)?void r(t,o(e)):e(t,n)}}function i(e,t){if(ie(e,"service"),(E(t)||or(t))&&(t=g.instantiate(t)),!t.$get)throw Fr("pget",e);return d[e+"Provider"]=t}function a(e,t){return function(){var n=w.invoke(t,this);if(m(n))throw Fr("undef",e);return n}}function s(e,t,n){return i(e,{$get:!1!==n?a(e,t):t})}function l(e){ne(m(e)||or(e),"modulesToLoad","not an array");var t,n=[];return r(e,function(e){function r(e){var t,n;for(t=0,n=e.length;n>t;t++){var r=e[t],i=g.get(r[0]);i[r[1]].apply(i,r[2])}}if(!h.get(e)){h.put(e,!0);try{b(e)?(t=Wn(e),n=n.concat(l(t.requires)).concat(t._runBlocks),r(t._invokeQueue),r(t._configBlocks)):E(e)?n.push(g.invoke(e)):or(e)?n.push(g.invoke(e)):re(e,"module")}catch(i){throw or(e)&&(e=e[e.length-1]),i.message&&i.stack&&-1==i.stack.indexOf(i.message)&&(i=i.message+"\n"+i.stack),Fr("modulerr",e,i.stack||i.message||i)}}}),n}function u(e,n){function r(t,r){if(e.hasOwnProperty(t)){if(e[t]===c)throw Fr("cdep",t+" <- "+p.join(" <- "));return e[t]}try{return p.unshift(t),e[t]=c,e[t]=n(t,r)}catch(i){throw e[t]===c&&delete e[t],i}finally{p.shift()}}function i(e,n,i){var o=[];e=Fe.$$annotate(e,t,i);for(var a=0,s=e.length;s>a;a++){var l=e[a];if("string"!=typeof l)throw Fr("itkn",l);o.push(n&&n.hasOwnProperty(l)?n[l]:r(l,i))}return o}return{invoke:function(e,t,n,r){return"string"==typeof n&&(r=n,n=null),n=i(e,n,r),or(e)&&(e=e[e.length-1]),r=11>=Hn?!1:"function"==typeof e&&/^(?:class\s|constructor\()/.test(Function.prototype.toString.call(e)),r?(n.unshift(null),new(Function.prototype.bind.apply(e,n))):e.apply(t,n)},instantiate:function(e,t,n){var r=or(e)?e[e.length-1]:e;return e=i(e,t,n),e.unshift(null),new(Function.prototype.bind.apply(r,e))},get:r,annotate:Fe.$$annotate,has:function(t){return d.hasOwnProperty(t+"Provider")||e.hasOwnProperty(t)}}}t=!0===t;var c={},p=[],h=new _e([],!0),d={$provide:{provider:n(i),factory:n(s),service:n(function(e,t){return s(e,["$injector",function(e){return e.instantiate(t)}])}),value:n(function(e,t){return s(e,f(t),!1)}),constant:n(function(e,t){ie(e,"constant"),d[e]=t,v[e]=t}),decorator:function(e,t){var n=g.get(e+"Provider"),r=n.$get;n.$get=function(){var e=w.invoke(r,n);return w.invoke(t,null,{$delegate:e})}}}},g=d.$injector=u(d,function(e,t){throw rr.isString(t)&&p.push(t),Fr("unpr",p.join(" <- "))}),v={},$=u(v,function(e,t){var n=g.get(e+"Provider",t);return w.invoke(n.$get,n,void 0,e)}),w=$;d.$injectorProvider={$get:f($)};var x=l(e),w=$.get("$injector");return w.strictDi=t,r(x,function(e){e&&w.invoke(e)}),w}function qe(){var e=!0;this.disableAutoScrolling=function(){e=!1},this.$get=["$window","$location","$rootScope",function(t,n,r){function i(e){var t=null;return Array.prototype.some.call(e,function(e){return"a"===I(e)?(t=e,!0):void 0}),t}function o(e){if(e){e.scrollIntoView();var n;n=a.yOffset,E(n)?n=n():L(n)?(n=n[0],n="fixed"!==t.getComputedStyle(n).position?0:n.getBoundingClientRect().bottom):w(n)||(n=0),n&&(e=e.getBoundingClientRect().top,t.scrollBy(0,e-n))}else t.scrollTo(0,0)}function a(e){e=b(e)?e:n.hash();var t;e?(t=s.getElementById(e))?o(t):(t=i(s.getElementsByName(e)))?o(t):"top"===e&&o(null):o(null)}var s=t.document;return e&&r.$watch(function(){return n.hash()},function(e,t){e===t&&""===e||Le(function(){r.$evalAsync(a)})}),a}]}function Ue(e,t){return e||t?e?t?(or(e)&&(e=e.join(" ")),or(t)&&(t=t.join(" ")),e+" "+t):e:t:""}function Be(e){b(e)&&(e=e.split(" "));var t=se();return r(e,function(e){e.length&&(t[e]=!0)}),t}function He(e){return y(e)?e:{}}function Ve(e,t,n,i){function o(e){try{e.apply(null,Qn.call(arguments,1))}finally{if(v--,0===v)for(;y.length;)try{y.pop()()}catch(t){n.error(t)}}}function a(){E=null,s(),l()}function s(){$=C(),$=m($)?null:$,D($,A)&&($=A),A=$}function l(){w===u.url()&&b===$||(w=u.url(),b=$,r(S,function(e){e(u.url(),$)}))}var u=this,c=e.location,p=e.history,d=e.setTimeout,f=e.clearTimeout,g={};u.isMock=!1;var v=0,y=[];u.$$completeOutstandingRequest=o,u.$$incOutstandingRequestCount=function(){v++},u.notifyWhenNoOutstandingRequests=function(e){0===v?e():y.push(e)};var $,b,w=c.href,x=t.find("base"),E=null,C=i.history?function(){try{return p.state}catch(e){}}:h;s(),b=$,u.url=function(t,n,r){if(m(r)&&(r=null),c!==e.location&&(c=e.location),p!==e.history&&(p=e.history),t){var o=b===r;if(w===t&&(!i.history||o))return u;var a=w&&bt(w)===bt(t);return w=t,b=r,!i.history||a&&o?(a&&!E||(E=t),n?c.replace(t):a?(n=c,r=t.indexOf("#"),r=-1===r?"":t.substr(r),n.hash=r):c.href=t,c.href!==t&&(E=t)):(p[n?"replaceState":"pushState"](r,"",t),s(),b=$),u}return E||c.href.replace(/%27/g,"'")},u.state=function(){return $};var S=[],T=!1,A=null;u.onUrlChange=function(t){return T||(i.history&&Vn(e).on("popstate",a),Vn(e).on("hashchange",a),T=!0),S.push(t),t},u.$$applicationDestroyed=function(){Vn(e).off("hashchange popstate",a)},u.$$checkUrlChange=l,u.baseHref=function(){var e=x.attr("href");return e?e.replace(/^(https?\:)?\/\/[^\/]*/,""):""},u.defer=function(e,t){var n;return v++,n=d(function(){delete g[n],o(e)},t||0),g[n]=!0,n},u.defer.cancel=function(e){return g[e]?(delete g[e],f(e),o(h),!0):!1}}function Ge(){this.$get=["$window","$log","$sniffer","$document",function(e,t,n,r){return new Ve(e,r,t,n)}]}function We(){this.$get=function(){function e(e,r){function i(e){e!=h&&(d?d==e&&(d=e.n):d=e,o(e.n,e.p),o(e,h),h=e,h.n=null)}function o(e,t){e!=t&&(e&&(e.p=t),t&&(t.n=e))}if(e in n)throw t("$cacheFactory")("iid",e);var a=0,s=l({},r,{id:e}),u=se(),c=r&&r.capacity||Number.MAX_VALUE,p=se(),h=null,d=null;return n[e]={put:function(e,t){if(!m(t)){if(c<Number.MAX_VALUE){var n=p[e]||(p[e]={key:e});i(n)}return e in u||a++,u[e]=t,a>c&&this.remove(d.key),t}},get:function(e){if(c<Number.MAX_VALUE){var t=p[e];if(!t)return;i(t)}return u[e]},remove:function(e){if(c<Number.MAX_VALUE){var t=p[e];if(!t)return;t==h&&(h=t.p),t==d&&(d=t.n),o(t.n,t.p),delete p[e]}e in u&&(delete u[e],a--)},removeAll:function(){u=se(),a=0,p=se(),h=d=null},destroy:function(){p=s=u=null,delete n[e]},info:function(){return l({},s,{size:a})}}}var n={};return e.info=function(){var e={};return r(n,function(t,n){e[n]=t.info()}),e},e.get=function(e){return n[e]},e}}function ze(){this.$get=["$cacheFactory",function(e){return e("templates")}]}function Ke(t,n){function i(e,t,n){var i=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,o=se();return r(e,function(e,r){if(e in x)o[r]=x[e];else{var a=e.match(i);if(!a)throw zr("iscp",t,r,e,n?"controller bindings definition":"isolate scope definition");o[r]={mode:a[1][0],collection:"*"===a[2],optional:"?"===a[3],attrName:a[4]||r},a[4]&&(x[e]=o[r])}}),o}function a(e){var t=e.charAt(0);if(!t||t!==Yn(t))throw zr("baddir",e);if(e!==e.trim())throw zr("baddir",e)}var s={},u=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,c=/(([\w\-]+)(?:\:([^;]+))?;?)/,g=O("ngSrc,ngSrcset,src,srcset"),$=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,w=/^(on[a-z]+|formaction)$/,x=se();this.directive=function N(e,n){return ie(e,"directive"),b(e)?(a(e),ne(n,"directiveFactory"),s.hasOwnProperty(e)||(s[e]=[],t.factory(e+"Directive",["$injector","$exceptionHandler",function(t,n){var i=[];return r(s[e],function(r,o){try{var a=t.invoke(r);E(a)?a={compile:f(a)}:!a.compile&&a.link&&(a.compile=f(a.link)),a.priority=a.priority||0,a.index=o,a.name=a.name||e,a.require=a.require||a.controller&&a.name,a.restrict=a.restrict||"EA",a.$$moduleName=r.$$moduleName,i.push(a)}catch(s){n(s)}}),i}])),s[e].push(n)):r(e,o(N)),this},this.component=function(e,t){function n(e){function n(t){return E(t)||or(t)?function(n,r){return e.invoke(t,this,{$element:n,$attrs:r})}:t}var o=t.template||t.templateUrl?t.template:"",a={controller:i,controllerAs:Ze(t.controller)||t.controllerAs||"$ctrl",template:n(o),templateUrl:n(t.templateUrl),transclude:t.transclude,scope:{},bindToController:t.bindings||{},restrict:"E",require:t.require};return r(t,function(e,t){"$"===t.charAt(0)&&(a[t]=e)}),a}var i=t.controller||function(){};return r(t,function(e,t){"$"===t.charAt(0)&&(n[t]=e,E(i)&&(i[t]=e))}),n.$inject=["$injector"],this.directive(e,n)},this.aHrefSanitizationWhitelist=function(e){return v(e)?(n.aHrefSanitizationWhitelist(e),this):n.aHrefSanitizationWhitelist()},this.imgSrcSanitizationWhitelist=function(e){return v(e)?(n.imgSrcSanitizationWhitelist(e),this):n.imgSrcSanitizationWhitelist()};var C=!0;this.debugInfoEnabled=function(e){return v(e)?(C=e,this):C};var S=10;this.onChangesTtl=function(e){return arguments.length?(S=e,this):S},this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(t,n,o,a,f,v,x,N,L,O){function R(){try{if(!--ye)throw fe=void 0,zr("infchng",S);x.$apply(function(){for(var e=0,t=fe.length;t>e;++e)fe[e]();fe=void 0})}finally{ye++}}function M(e,t){if(t){var n,r,i,o=Object.keys(t);for(n=0,r=o.length;r>n;n++)i=o[n],this[i]=t[i]}else this.$attr={};this.$$element=e}function _(e,t,n){ve.innerHTML="<span "+t+">",t=ve.firstChild.attributes;var r=t[0];t.removeNamedItem(r.name),r.value=n,e.attributes.setNamedItem(r)}function j(e,t){try{e.addClass(t)}catch(n){}}function P(t,n,r,i,o){t instanceof Vn||(t=Vn(t));for(var a=/\S+/,s=0,l=t.length;l>s;s++){var u=t[s];u.nodeType===gr&&u.nodeValue.match(a)&&de(u,t[s]=e.document.createElement("span"))}var c=F(t,n,t,r,i,o);P.$$addScopeClass(t);var p=null;return function(e,n,r){ne(e,"scope"),o&&o.needsNewScope&&(e=e.$parent.$new()),r=r||{};var i=r.parentBoundTranscludeFn,a=r.transcludeControllers;if(r=r.futureParentElement,i&&i.$$boundTransclude&&(i=i.$$boundTransclude),p||(p=(r=r&&r[0])&&"foreignobject"!==I(r)&&er.call(r).match(/SVG/)?"svg":"html"),r="html"!==p?Vn(oe(p,Vn("<div>").append(t).html())):n?Lr.clone.call(t):t,a)for(var s in a)r.data("$"+s+"Controller",a[s].instance);return P.$$addScopeInfo(r,e),n&&n(r,e),c&&c(e,r,r,i),r}}function F(e,t,n,r,i,o){function a(e,n,r,i){var o,a,s,l,u,c,d;if(p)for(d=Array(n.length),l=0;l<h.length;l+=3)o=h[l],d[o]=n[o];else d=n;for(l=0,u=h.length;u>l;)a=d[h[l++]],n=h[l++],o=h[l++],n?(n.scope?(s=e.$new(),P.$$addScopeInfo(Vn(a),s)):s=e,c=n.transcludeOnThisElement?q(e,n.transclude,i):!n.templateOnThisElement&&i?i:!i&&t?q(e,t):null,n(o,s,a,r,c)):o&&o(e,a.childNodes,void 0,i)}for(var s,l,u,c,p,h=[],d=0;d<e.length;d++)s=new M,l=U(e[d],[],s,0===d?r:void 0,i),(o=l.length?W(l,e[d],s,t,n,null,[],[],o):null)&&o.scope&&P.$$addScopeClass(s.$$element),s=o&&o.terminal||!(u=e[d].childNodes)||!u.length?null:F(u,o?(o.transcludeOnThisElement||!o.templateOnThisElement)&&o.transclude:t),(o||s)&&(h.push(d,o,s),c=!0,p=p||o),o=null;return c?a:null}function q(e,t,n){function r(r,i,o,a,s){return r||(r=e.$new(!1,s),r.$$transcluded=!0),t(r,i,{parentBoundTranscludeFn:n,transcludeControllers:o,futureParentElement:a})}var i,o=r.$$slots=se();for(i in t.$$slots)o[i]=t.$$slots[i]?q(e,t.$$slots[i],n):null;return r}function U(e,t,n,r,i){var o,a=n.$attr;switch(e.nodeType){case 1:X(t,Xe(I(e)),"E",r,i);for(var s,l,p,h=e.attributes,d=0,f=h&&h.length;f>d;d++){var g=!1,m=!1;s=h[d],o=s.name,l=sr(s.value),s=Xe(o),(p=xe.test(s))&&(o=o.replace(Yr,"").substr(8).replace(/_(.)/g,function(e,t){return t.toUpperCase()})),(s=s.match(Ee))&&Q(s[1])&&(g=o,m=o.substr(0,o.length-5)+"end",o=o.substr(0,o.length-6)),s=Xe(o.toLowerCase()),a[s]=o,!p&&n.hasOwnProperty(s)||(n[s]=l,Oe(e,s)&&(n[s]=!0)),le(e,t,l,s,p),X(t,s,"A",r,i,g,m)}if(e=e.className,y(e)&&(e=e.animVal),b(e)&&""!==e)for(;o=c.exec(e);)s=Xe(o[2]),X(t,s,"C",r,i)&&(n[s]=sr(o[3])),e=e.substr(o.index+o[0].length);break;case gr:if(11===Hn)for(;e.parentNode&&e.nextSibling&&e.nextSibling.nodeType===gr;)e.nodeValue+=e.nextSibling.nodeValue,e.parentNode.removeChild(e.nextSibling);ie(t,e.nodeValue);break;case 8:try{(o=u.exec(e.nodeValue))&&(s=Xe(o[1]),X(t,s,"M",r,i)&&(n[s]=sr(o[2])))}catch(v){}}return t.sort(te),t}function B(e,t,n){var r=[],i=0;if(t&&e.hasAttribute&&e.hasAttribute(t)){do{if(!e)throw zr("uterdir",t,n);1==e.nodeType&&(e.hasAttribute(t)&&i++,e.hasAttribute(n)&&i--),r.push(e),e=e.nextSibling}while(i>0)}else r.push(e);return Vn(r)}function V(e,t,n){return function(r,i,o,a,s){return i=B(i[0],t,n),e(r,i,o,a,s)}}function G(e,t,n,r,i,o){var a;return e?P(t,n,r,i,o):function(){return a||(a=P(t,n,r,i,o),t=n=o=null),a.apply(this,arguments)}}function W(e,t,n,i,a,s,u,c,p){function h(e,t,n,r){e&&(n&&(e=V(e,n,r)),e.require=f.require,e.directiveName=g,(S===f||f.$$isolateScope)&&(e=ce(e,{isolateScope:!0})),u.push(e)),t&&(n&&(t=V(t,n,r)),t.require=f.require,t.directiveName=g,(S===f||f.$$isolateScope)&&(t=ce(t,{isolateScope:!0})),c.push(t))}function d(e,i,o,a,s){function p(e,t,n,r){var i;if(T(e)||(r=n,n=t,t=e,e=void 0),k&&(i=$),n||(n=k?w.parent():w),!r)return s(e,t,i,n,O);var o=s.$$slots[r];if(o)return o(e,t,i,n,O);if(m(o))throw zr("noslot",r,H(w))}var h,d,f,g,v,$,b,w;t===o?(a=n,w=n.$$element):(w=Vn(o),a=new M(w,n)),v=i,S?g=i.$new(!0):x&&(v=i.$parent),s&&(b=p,b.$$boundTransclude=s,b.isSlotFilled=function(e){return!!s.$$slots[e]}),C&&($=K(w,a,b,C,g,i,S)),S&&(P.$$addScopeInfo(w,g,!0,!(A&&(A===S||A===S.$$originalDirective))),P.$$addScopeClass(w,!0),g.$$isolateBindings=S.$$isolateBindings,d=he(i,a,g,g.$$isolateBindings,S),d.removeWatches&&g.$on("$destroy",d.removeWatches));for(h in $){d=C[h],f=$[h];var N=d.$$bindings.bindToController;f.bindingInfo=f.identifier&&N?he(v,a,f.instance,N,d):{};var L=f();L!==f.instance&&(f.instance=L,w.data("$"+d.name+"Controller",L),f.bindingInfo.removeWatches&&f.bindingInfo.removeWatches(),f.bindingInfo=he(v,a,f.instance,N,d))}for(r(C,function(e,t){var n=e.require;e.bindToController&&!or(n)&&y(n)&&l($[t].instance,z(t,n,w,$))}),r($,function(e){var t=e.instance;E(t.$onChanges)&&t.$onChanges(e.bindingInfo.initialChanges),E(t.$onInit)&&t.$onInit(),E(t.$onDestroy)&&v.$on("$destroy",function(){t.$onDestroy()})}),h=0,d=u.length;d>h;h++)f=u[h],pe(f,f.isolateScope?g:i,w,a,f.require&&z(f.directiveName,f.require,w,$),b);var O=i;for(S&&(S.template||null===S.templateUrl)&&(O=g),e&&e(O,o.childNodes,void 0,s),h=c.length-1;h>=0;h--)f=c[h],pe(f,f.isolateScope?g:i,w,a,f.require&&z(f.directiveName,f.require,w,$),b);r($,function(e){e=e.instance,E(e.$postLink)&&e.$postLink()})}p=p||{};for(var f,g,v,$,b,w=-Number.MAX_VALUE,x=p.newScopeDirective,C=p.controllerDirectives,S=p.newIsolateScopeDirective,A=p.templateDirective,N=p.nonTlbTranscludeDirective,L=!1,O=!1,k=p.hasElementTranscludeDirective,R=n.$$element=Vn(t),D=i,_=!1,j=!1,F=0,q=e.length;q>F;F++){f=e[F];var W=f.$$start,X=f.$$end;if(W&&(R=B(t,W,X)),v=void 0,w>f.priority)break;if((b=f.scope)&&(f.templateUrl||(y(b)?(re("new/isolated scope",S||x,f,R),S=f):re("new/isolated scope",S,f,R)),x=x||f),g=f.name,!_&&(f.replace&&(f.templateUrl||f.template)||f.transclude&&!f.$$tlb)){for(b=F+1;_=e[b++];)if(_.transclude&&!_.$$tlb||_.replace&&(_.templateUrl||_.template)){j=!0;break}_=!0}if(!f.templateUrl&&f.controller&&(b=f.controller,C=C||se(),re("'"+g+"' controller",C[g],f,R),C[g]=f),b=f.transclude)if(L=!0,f.$$tlb||(re("transclusion",N,f,R),N=f),"element"==b)k=!0,w=f.priority,v=R,R=n.$$element=Vn(P.$$createComment(g,n[g])),t=R[0],ue(a,Qn.call(v,0),t),v[0].$$parentNode=v[0].parentNode,D=G(j,v,i,w,s&&s.name,{nonTlbTranscludeDirective:N});else{var Q=se();if(v=Vn(ge(t)).contents(),y(b)){v=[];var ee=se(),te=se();r(b,function(e,t){var n="?"===e.charAt(0);e=n?e.substring(1):e,ee[e]=t,Q[t]=null,te[t]=n}),r(R.contents(),function(e){var t=ee[Xe(I(e))];t?(te[t]=!0,Q[t]=Q[t]||[],Q[t].push(e)):v.push(e)}),r(te,function(e,t){if(!e)throw zr("reqslot",t);
});for(var ne in Q)Q[ne]&&(Q[ne]=G(j,Q[ne],i))}R.empty(),D=G(j,v,i,void 0,void 0,{needsNewScope:f.$$isolateScope||f.$$newScope}),D.$$slots=Q}if(f.template)if(O=!0,re("template",A,f,R),A=f,b=E(f.template)?f.template(R,n):f.template,b=we(b),f.replace){if(s=f,v=Cr.test(b)?Je(oe(f.templateNamespace,sr(b))):[],t=v[0],1!=v.length||1!==t.nodeType)throw zr("tplrt",g,"");ue(a,R,t),q={$attr:{}},b=U(t,[],q);var ie=e.splice(F+1,e.length-(F+1));(S||x)&&Y(b,S,x),e=e.concat(b).concat(ie),J(n,q),q=e.length}else R.html(b);if(f.templateUrl)O=!0,re("template",A,f,R),A=f,f.replace&&(s=f),d=Z(e.splice(F,e.length-F),R,n,a,L&&D,u,c,{controllerDirectives:C,newScopeDirective:x!==f&&x,newIsolateScopeDirective:S,templateDirective:A,nonTlbTranscludeDirective:N}),q=e.length;else if(f.compile)try{$=f.compile(R,n,D),E($)?h(null,$,W,X):$&&h($.pre,$.post,W,X)}catch(ae){o(ae,H(R))}f.terminal&&(d.terminal=!0,w=Math.max(w,f.priority))}return d.scope=x&&!0===x.scope,d.transcludeOnThisElement=L,d.templateOnThisElement=O,d.transclude=D,p.hasElementTranscludeDirective=k,d}function z(e,t,n,i){var o;if(b(t)){var a=t.match($);t=t.substring(a[0].length);var s=a[1]||a[3],a="?"===a[2];if("^^"===s?n=n.parent():o=(o=i&&i[t])&&o.instance,!o){var l="$"+t+"Controller";o=s?n.inheritedData(l):n.data(l)}if(!o&&!a)throw zr("ctreq",t,e)}else if(or(t))for(o=[],s=0,a=t.length;a>s;s++)o[s]=z(e,t[s],n,i);else y(t)&&(o={},r(t,function(t,r){o[r]=z(e,t,n,i)}));return o||null}function K(e,t,n,r,i,o,a){var s,l=se();for(s in r){var u=r[s],c={$scope:u===a||u.$$isolateScope?i:o,$element:e,$attrs:t,$transclude:n},p=u.controller;"@"==p&&(p=t[u.name]),c=v(p,c,!0,u.controllerAs),l[u.name]=c,e.data("$"+u.name+"Controller",c.instance)}return l}function Y(e,t,n){for(var r=0,i=e.length;i>r;r++)e[r]=p(e[r],{$$isolateScope:t,$$newScope:n})}function X(e,n,r,a,l,u,c){if(n===l)return null;if(l=null,s.hasOwnProperty(n)){var h;n=t.get(n+"Directive");for(var d=0,f=n.length;f>d;d++)try{if(h=n[d],(m(a)||a>h.priority)&&-1!=h.restrict.indexOf(r)){if(u&&(h=p(h,{$$start:u,$$end:c})),!h.$$bindings){var g=h,v=h,$=h.name,b={isolateScope:null,bindToController:null};if(y(v.scope)&&(!0===v.bindToController?(b.bindToController=i(v.scope,$,!0),b.isolateScope={}):b.isolateScope=i(v.scope,$,!1)),y(v.bindToController)&&(b.bindToController=i(v.bindToController,$,!0)),y(b.bindToController)){var w=v.controller,x=v.controllerAs;if(!w)throw zr("noctrl",$);if(!Ze(w,x))throw zr("noident",$)}var E=g.$$bindings=b;y(E.isolateScope)&&(h.$$isolateBindings=E.isolateScope)}e.push(h),l=h}}catch(C){o(C)}}return l}function Q(e){if(s.hasOwnProperty(e))for(var n=t.get(e+"Directive"),r=0,i=n.length;i>r;r++)if(e=n[r],e.multiElement)return!0;return!1}function J(e,t){var n=t.$attr,i=e.$attr,o=e.$$element;r(e,function(r,i){"$"!=i.charAt(0)&&(t[i]&&t[i]!==r&&(r+=("style"===i?";":" ")+t[i]),e.$set(i,r,!0,n[i]))}),r(t,function(t,r){"class"==r?(j(o,t),e["class"]=(e["class"]?e["class"]+" ":"")+t):"style"==r?(o.attr("style",o.attr("style")+";"+t),e.style=(e.style?e.style+";":"")+t):"$"==r.charAt(0)||e.hasOwnProperty(r)||(e[r]=t,i[r]=n[r])})}function Z(e,t,n,i,o,s,l,u){var c,h,d=[],f=t[0],g=e.shift(),m=p(g,{templateUrl:null,transclude:null,replace:null,$$originalDirective:g}),v=E(g.templateUrl)?g.templateUrl(t,n):g.templateUrl,$=g.templateNamespace;return t.empty(),a(v).then(function(a){var p,b;if(a=we(a),g.replace){if(a=Cr.test(a)?Je(oe($,sr(a))):[],p=a[0],1!=a.length||1!==p.nodeType)throw zr("tplrt",g.name,v);a={$attr:{}},ue(i,t,p);var w=U(p,[],a);y(g.scope)&&Y(w,!0),e=w.concat(e),J(n,a)}else p=f,t.html(a);for(e.unshift(m),c=W(e,p,n,o,t,g,s,l,u),r(i,function(e,n){e==p&&(i[n]=t[0])}),h=F(t[0].childNodes,o);d.length;){a=d.shift(),b=d.shift();var x=d.shift(),E=d.shift(),w=t[0];if(!a.$$destroyed){if(b!==f){var C=b.className;u.hasElementTranscludeDirective&&g.replace||(w=ge(p)),ue(x,Vn(b),w),j(Vn(w),C)}b=c.transcludeOnThisElement?q(a,c.transclude,E):E,c(h,a,w,i,b)}}d=null}),function(e,t,n,r,i){e=i,t.$$destroyed||(d?d.push(t,n,r,e):(c.transcludeOnThisElement&&(e=q(t,c.transclude,i)),c(h,t,n,r,e)))}}function te(e,t){var n=t.priority-e.priority;return 0!==n?n:e.name!==t.name?e.name<t.name?-1:1:e.index-t.index}function re(e,t,n,r){function i(e){return e?" (module: "+e+")":""}if(t)throw zr("multidir",t.name,i(t.$$moduleName),n.name,i(n.$$moduleName),e,H(r))}function ie(e,t){var r=n(t,!0);r&&e.push({priority:0,compile:function(e){e=e.parent();var t=!!e.length;return t&&P.$$addBindingClass(e),function(e,n){var i=n.parent();t||P.$$addBindingClass(i),P.$$addBindingInfo(i,r.expressions),e.$watch(r,function(e){n[0].nodeValue=e})}}})}function oe(t,n){switch(t=Yn(t||"html")){case"svg":case"math":var r=e.document.createElement("div");return r.innerHTML="<"+t+">"+n+"</"+t+">",r.childNodes[0].childNodes;default:return n}}function ae(e,t){if("srcdoc"==t)return N.HTML;var n=I(e);return"xlinkHref"==t||"form"==n&&"action"==t||"img"!=n&&("src"==t||"ngSrc"==t)?N.RESOURCE_URL:void 0}function le(e,t,r,i,o){var a=ae(e,i);o=g[i]||o;var s=n(r,!0,a,o);if(s){if("multiple"===i&&"select"===I(e))throw zr("selmulti",H(e));t.push({priority:100,compile:function(){return{pre:function(e,t,l){if(t=l.$$observers||(l.$$observers=se()),w.test(i))throw zr("nodomevents");var u=l[i];u!==r&&(s=u&&n(u,!0,a,o),r=u),s&&(l[i]=s(e),(t[i]||(t[i]=[])).$$inter=!0,(l.$$observers&&l.$$observers[i].$$scope||e).$watch(s,function(e,t){"class"===i&&e!=t?l.$updateClass(e,t):l.$set(i,e)}))}}}})}}function ue(t,n,r){var i,o,a=n[0],s=n.length,l=a.parentNode;if(t)for(i=0,o=t.length;o>i;i++)if(t[i]==a){t[i++]=r,o=i+s-1;for(var u=t.length;u>i;i++,o++)u>o?t[i]=t[o]:delete t[i];t.length-=s-1,t.context===a&&(t.context=r);break}for(l&&l.replaceChild(r,a),t=e.document.createDocumentFragment(),i=0;s>i;i++)t.appendChild(n[i]);for(Vn.hasData(a)&&(Vn.data(r,Vn.data(a)),Vn(a).off("$destroy")),Vn.cleanData(t.querySelectorAll("*")),i=1;s>i;i++)delete n[i];n[0]=r,n.length=1}function ce(e,t){return l(function(){return e.apply(null,arguments)},e,t)}function pe(e,t,n,r,i,a){try{e(t,n,r,i,a)}catch(s){o(s,H(n))}}function he(e,t,i,o,a){function s(t,n,r){E(i.$onChanges)&&n!==r&&(fe||(e.$$postDigest(R),fe=[]),u||(u={},fe.push(l)),u[t]&&(r=u[t].previousValue),u[t]=new Ye(r,n))}function l(){i.$onChanges(u),u=void 0}var u,c=[],p={};return r(o,function(r,o){var l,u,d,g,m=r.attrName,v=r.optional;switch(r.mode){case"@":v||Kn.call(t,m)||(i[o]=t[m]=void 0),t.$observe(m,function(e){(b(e)||A(e))&&(s(o,e,i[o]),i[o]=e)}),t.$$observers[m].$$scope=e,l=t[m],b(l)?i[o]=n(l)(e):A(l)&&(i[o]=l),p[o]=new Ye(Kr,i[o]);break;case"=":if(!Kn.call(t,m)){if(v)break;t[m]=void 0}if(v&&!t[m])break;u=f(t[m]),g=u.literal?D:function(e,t){return e===t||e!==e&&t!==t},d=u.assign||function(){throw l=i[o]=u(e),zr("nonassign",t[m],m,a.name)},l=i[o]=u(e),v=function(t){return g(t,i[o])||(g(t,l)?d(e,t=i[o]):i[o]=t),l=t},v.$stateful=!0,v=r.collection?e.$watchCollection(t[m],v):e.$watch(f(t[m],v),null,u.literal),c.push(v);break;case"<":if(!Kn.call(t,m)){if(v)break;t[m]=void 0}if(v&&!t[m])break;u=f(t[m]),i[o]=u(e),p[o]=new Ye(Kr,i[o]),v=e.$watch(u,function(e,t){e===t&&(t=i[o]),s(o,e,t),i[o]=e},u.literal),c.push(v);break;case"&":if(u=t.hasOwnProperty(m)?f(t[m]):h,u===h&&v)break;i[o]=function(t){return u(e,t)}}}),{initialChanges:p,removeWatches:c.length&&function(){for(var e=0,t=c.length;t>e;++e)c[e]()}}}var fe,me=/^\w/,ve=e.document.createElement("div"),ye=S;M.prototype={$normalize:Xe,$addClass:function(e){e&&0<e.length&&L.addClass(this.$$element,e)},$removeClass:function(e){e&&0<e.length&&L.removeClass(this.$$element,e)},$updateClass:function(e,t){var n=Qe(e,t);n&&n.length&&L.addClass(this.$$element,n),(n=Qe(t,e))&&n.length&&L.removeClass(this.$$element,n)},$set:function(e,t,n,i){var a=Oe(this.$$element[0],e),s=kr[e],l=e;if(a?(this.$$element.prop(e,t),i=a):s&&(this[s]=t,l=s),this[e]=t,i?this.$attr[e]=i:(i=this.$attr[e])||(this.$attr[e]=i=ee(e,"-")),a=I(this.$$element),"a"===a&&("href"===e||"xlinkHref"===e)||"img"===a&&"src"===e)this[e]=t=O(t,"src"===e);else if("img"===a&&"srcset"===e){for(var a="",s=sr(t),u=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,u=/\s/.test(s)?u:/(,)/,s=s.split(u),u=Math.floor(s.length/2),c=0;u>c;c++)var p=2*c,a=a+O(sr(s[p]),!0),a=a+(" "+sr(s[p+1]));s=sr(s[2*c]).split(/\s/),a+=O(sr(s[0]),!0),2===s.length&&(a+=" "+sr(s[1])),this[e]=t=a}!1!==n&&(null===t||m(t)?this.$$element.removeAttr(i):me.test(i)?this.$$element.attr(i,t):_(this.$$element[0],i,t)),(e=this.$$observers)&&r(e[l],function(e){try{e(t)}catch(n){o(n)}})},$observe:function(e,t){var n=this,r=n.$$observers||(n.$$observers=se()),i=r[e]||(r[e]=[]);return i.push(t),x.$evalAsync(function(){i.$$inter||!n.hasOwnProperty(e)||m(n[e])||t(n[e])}),function(){k(i,t)}}};var $e=n.startSymbol(),be=n.endSymbol(),we="{{"==$e&&"}}"==be?d:function(e){return e.replace(/\{\{/g,$e).replace(/}}/g,be)},xe=/^ngAttr[A-Z]/,Ee=/^(.+)Start$/;return P.$$addBindingInfo=C?function(e,t){var n=e.data("$binding")||[];or(t)?n=n.concat(t):n.push(t),e.data("$binding",n)}:h,P.$$addBindingClass=C?function(e){j(e,"ng-binding")}:h,P.$$addScopeInfo=C?function(e,t,n,r){e.data(n?r?"$isolateScopeNoTemplate":"$isolateScope":"$scope",t)}:h,P.$$addScopeClass=C?function(e,t){j(e,t?"ng-isolate-scope":"ng-scope")}:h,P.$$createComment=function(t,n){var r="";return C&&(r=" "+(t||"")+": "+(n||"")+" "),e.document.createComment(r)},P}]}function Ye(e,t){this.previousValue=e,this.currentValue=t}function Xe(e){return ce(e.replace(Yr,""))}function Qe(e,t){var n="",r=e.split(/\s+/),i=t.split(/\s+/),o=0;e:for(;o<r.length;o++){for(var a=r[o],s=0;s<i.length;s++)if(a==i[s])continue e;n+=(0<n.length?" ":"")+a}return n}function Je(e){e=Vn(e);var t=e.length;if(1>=t)return e;for(;t--;)8===e[t].nodeType&&Jn.call(e,t,1);return e}function Ze(e,t){if(t&&b(t))return t;if(b(e)){var n=Qr.exec(e);if(n)return n[3]}}function et(){var e={},n=!1;this.has=function(t){return e.hasOwnProperty(t)},this.register=function(t,n){ie(t,"controller"),y(t)?l(e,t):e[t]=n},this.allowGlobals=function(){n=!0},this.$get=["$injector","$window",function(r,i){function o(e,n,r,i){if(!e||!y(e.$scope))throw t("$controller")("noscp",i,n);e.$scope[n]=r}return function(t,a,s,u){var c,p,h;if(s=!0===s,u&&b(u)&&(h=u),b(t)){if(u=t.match(Qr),!u)throw Xr("ctrlfmt",t);p=u[1],h=h||u[3],t=e.hasOwnProperty(p)?e[p]:oe(a.$scope,p,!0)||(n?oe(i,p,!0):void 0),re(t,p,!0)}return s?(s=(or(t)?t[t.length-1]:t).prototype,c=Object.create(s||null),h&&o(a,h,c,p||t.name),l(function(){var e=r.invoke(t,c,a,p);return e!==c&&(y(e)||E(e))&&(c=e,h&&o(a,h,c,p||t.name)),c},{instance:c,identifier:h})):(c=r.instantiate(t,a,p),h&&o(a,h,c,p||t.name),c)}}]}function tt(){this.$get=["$window",function(e){return Vn(e.document)}]}function nt(){this.$get=["$log",function(e){return function(t,n){e.error.apply(e,arguments)}}]}function rt(e){return y(e)?x(e)?e.toISOString():F(e):e}function it(){this.$get=function(){return function(e){if(!e)return"";var t=[];return i(e,function(e,n){null===e||m(e)||(or(e)?r(e,function(e){t.push(K(n)+"="+K(rt(e)))}):t.push(K(n)+"="+K(rt(e))))}),t.join("&")}}}function ot(){this.$get=function(){return function(e){function t(e,o,a){null===e||m(e)||(or(e)?r(e,function(e,n){t(e,o+"["+(y(e)?n:"")+"]")}):y(e)&&!x(e)?i(e,function(e,n){t(e,o+(a?"":"[")+n+(a?"":"]"))}):n.push(K(o)+"="+K(rt(e))))}if(!e)return"";var n=[];return t(e,"",!0),n.join("&")}}}function at(e,t){if(b(e)){var n=e.replace(ri,"").trim();if(n){var r=t("Content-Type");(r=r&&0===r.indexOf(Zr))||(r=(r=n.match(ti))&&ni[r[0]].test(n)),r&&(e=q(n))}}return e}function st(e){var t,n=se();return b(e)?r(e.split("\n"),function(e){t=e.indexOf(":");var r=Yn(sr(e.substr(0,t)));e=sr(e.substr(t+1)),r&&(n[r]=n[r]?n[r]+", "+e:e)}):y(e)&&r(e,function(e,t){var r=Yn(t),i=sr(e);r&&(n[r]=n[r]?n[r]+", "+i:i)}),n}function lt(e){var t;return function(n){return t||(t=st(e)),n?(n=t[Yn(n)],void 0===n&&(n=null),n):t}}function ut(e,t,n,i){return E(i)?i(e,t,n):(r(i,function(r){e=r(e,t,n)}),e)}function ct(){var e=this.defaults={transformResponse:[at],transformRequest:[function(e){return y(e)&&"[object File]"!==er.call(e)&&"[object Blob]"!==er.call(e)&&"[object FormData]"!==er.call(e)?F(e):e}],headers:{common:{Accept:"application/json, text/plain, */*"},post:M(ei),put:M(ei),patch:M(ei)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},n=!1;this.useApplyAsync=function(e){return v(e)?(n=!!e,this):n};var i=!0;this.useLegacyPromiseExtensions=function(e){return v(e)?(i=!!e,this):i};var o=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory","$rootScope","$q","$injector",function(a,s,u,c,p,h){function d(n){function o(e){var t=l({},e);return t.data=ut(e.data,e.headers,e.status,s.transformResponse),e=e.status,e>=200&&300>e?t:p.reject(t)}function a(e,t){var n,i={};return r(e,function(e,r){E(e)?(n=e(t),null!=n&&(i[r]=n)):i[r]=e}),i}if(!y(n))throw t("$http")("badreq",n);if(!b(n.url))throw t("$http")("badreq",n.url);var s=l({method:"get",transformRequest:e.transformRequest,transformResponse:e.transformResponse,paramSerializer:e.paramSerializer},n);s.headers=function(t){var n,r,i,o=e.headers,s=l({},t.headers),o=l({},o.common,o[Yn(t.method)]);e:for(n in o){r=Yn(n);for(i in s)if(Yn(i)===r)continue e;s[n]=o[n]}return a(s,M(t))}(n),s.method=Xn(s.method),s.paramSerializer=b(s.paramSerializer)?h.get(s.paramSerializer):s.paramSerializer;var u=[function(t){var n=t.headers,i=ut(t.data,lt(n),void 0,t.transformRequest);return m(i)&&r(n,function(e,t){"content-type"===Yn(t)&&delete n[t]}),m(t.withCredentials)&&!m(e.withCredentials)&&(t.withCredentials=e.withCredentials),f(t,i).then(o,o)},void 0],c=p.when(s);for(r(w,function(e){(e.request||e.requestError)&&u.unshift(e.request,e.requestError),(e.response||e.responseError)&&u.push(e.response,e.responseError)});u.length;){n=u.shift();var d=u.shift(),c=c.then(n,d)}return i?(c.success=function(e){return re(e,"fn"),c.then(function(t){e(t.data,t.status,t.headers,s)}),c},c.error=function(e){return re(e,"fn"),c.then(null,function(t){e(t.data,t.status,t.headers,s)}),c}):(c.success=oi("success"),c.error=oi("error")),c}function f(t,i){function o(e){if(e){var t={};return r(e,function(e,r){t[r]=function(t){function r(){e(t)}n?c.$applyAsync(r):c.$$phase?r():c.$apply(r)}}),t}}function l(e,t,r,i){function o(){u(t,e,r,i)}b&&(e>=200&&300>e?b.put(T,[e,t,st(r),i]):b.remove(T)),n?c.$applyAsync(o):(o(),c.$$phase||c.$apply())}function u(e,n,r,i){n=n>=-1?n:0,(n>=200&&300>n?x.resolve:x.reject)({data:e,status:n,headers:lt(r),config:t,statusText:i})}function h(e){u(e.data,e.status,M(e.headers()),e.statusText)}function f(){var e=d.pendingRequests.indexOf(t);-1!==e&&d.pendingRequests.splice(e,1)}var b,w,x=p.defer(),C=x.promise,S=t.headers,T=g(t.url,t.paramSerializer(t.params));return d.pendingRequests.push(t),C.then(f,f),!t.cache&&!e.cache||!1===t.cache||"GET"!==t.method&&"JSONP"!==t.method||(b=y(t.cache)?t.cache:y(e.cache)?e.cache:$),b&&(w=b.get(T),v(w)?w&&E(w.then)?w.then(h,h):or(w)?u(w[1],w[0],M(w[2]),w[3]):u(w,200,{},"OK"):b.put(T,C)),m(w)&&((w=ln(t.url)?s()[t.xsrfCookieName||e.xsrfCookieName]:void 0)&&(S[t.xsrfHeaderName||e.xsrfHeaderName]=w),a(t.method,T,i,l,S,t.timeout,t.withCredentials,t.responseType,o(t.eventHandlers),o(t.uploadEventHandlers))),C}function g(e,t){return 0<t.length&&(e+=(-1==e.indexOf("?")?"?":"&")+t),e}var $=u("$http");e.paramSerializer=b(e.paramSerializer)?h.get(e.paramSerializer):e.paramSerializer;var w=[];return r(o,function(e){w.unshift(b(e)?h.get(e):h.invoke(e))}),d.pendingRequests=[],function(e){r(arguments,function(e){d[e]=function(t,n){return d(l({},n||{},{method:e,url:t}))}})}("get","delete","head","jsonp"),function(e){r(arguments,function(e){d[e]=function(t,n,r){return d(l({},r||{},{method:e,url:t,data:n}))}})}("post","put","patch"),d.defaults=e,d}]}function pt(){this.$get=function(){return function(){return new e.XMLHttpRequest}}}function ht(){this.$get=["$browser","$window","$document","$xhrFactory",function(e,t,n,r){return dt(e,r,e.defer,t.angular.callbacks,n[0])}]}function dt(e,t,n,i,o){function a(e,t,n){var r=o.createElement("script"),a=null;return r.type="text/javascript",r.src=e,r.async=!0,a=function(e){r.removeEventListener("load",a,!1),r.removeEventListener("error",a,!1),o.body.removeChild(r),r=null;var s=-1,l="unknown";e&&("load"!==e.type||i[t].called||(e={type:"error"}),l=e.type,s="error"===e.type?404:200),n&&n(s,l)},r.addEventListener("load",a,!1),r.addEventListener("error",a,!1),o.body.appendChild(r),a}return function(o,s,l,u,c,p,d,f,g,y){function $(){x&&x(),C&&C.abort()}function b(t,r,i,o,a){v(T)&&n.cancel(T),x=C=null,t(r,i,o,a),e.$$completeOutstandingRequest(h)}if(e.$$incOutstandingRequestCount(),s=s||e.url(),"jsonp"==Yn(o)){var w="_"+(i.counter++).toString(36);i[w]=function(e){i[w].data=e,i[w].called=!0};var x=a(s.replace("JSON_CALLBACK","angular.callbacks."+w),w,function(e,t){b(u,e,i[w].data,"",t),i[w]=h})}else{var C=t(o,s);if(C.open(o,s,!0),r(c,function(e,t){v(e)&&C.setRequestHeader(t,e)}),C.onload=function(){var e=C.statusText||"",t="response"in C?C.response:C.responseText,n=1223===C.status?204:C.status;0===n&&(n=t?200:"file"==sn(s).protocol?404:0),b(u,n,t,C.getAllResponseHeaders(),e)},o=function(){b(u,-1,null,null,"")},C.onerror=o,C.onabort=o,r(g,function(e,t){C.addEventListener(t,e)}),r(y,function(e,t){C.upload.addEventListener(t,e)}),d&&(C.withCredentials=!0),f)try{C.responseType=f}catch(S){if("json"!==f)throw S}C.send(m(l)?null:l)}if(p>0)var T=n($,p);else p&&E(p.then)&&p.then($)}}function ft(){var e="{{",t="}}";this.startSymbol=function(t){return t?(e=t,this):e},this.endSymbol=function(e){return e?(t=e,this):t},this.$get=["$parse","$exceptionHandler","$sce",function(n,r,i){function o(e){return"\\\\\\"+e}function a(n){return n.replace(h,e).replace(d,t)}function s(e,t,n,r){var i;return i=e.$watch(function(e){return i(),r(e)},t,n)}function u(o,u,h,d){function g(e){try{var t=e;e=h?i.getTrusted(h,t):i.valueOf(t);var n;if(d&&!v(e))n=e;else if(null==e)n="";else{switch(typeof e){case"string":break;case"number":e=""+e;break;default:e=F(e)}n=e}return n}catch(a){r(ai.interr(o,a))}}if(!o.length||-1===o.indexOf(e)){var y;return u||(u=a(o),y=f(u),y.exp=o,y.expressions=[],y.$$watchDelegate=s),y}d=!!d;var $,b,w=0,x=[],C=[];y=o.length;for(var S=[],T=[];y>w;){if(-1==($=o.indexOf(e,w))||-1==(b=o.indexOf(t,$+c))){w!==y&&S.push(a(o.substring(w)));break}w!==$&&S.push(a(o.substring(w,$))),w=o.substring($+c,b),x.push(w),C.push(n(w,g)),w=b+p,T.push(S.length),S.push("")}if(h&&1<S.length&&ai.throwNoconcat(o),!u||x.length){var A=function(e){for(var t=0,n=x.length;n>t;t++){if(d&&m(e[t]))return;S[T[t]]=e[t]}return S.join("")};return l(function(e){var t=0,n=x.length,i=Array(n);try{for(;n>t;t++)i[t]=C[t](e);return A(i)}catch(a){r(ai.interr(o,a))}},{exp:o,expressions:x,$$watchDelegate:function(e,t){var n;return e.$watchGroup(C,function(r,i){var o=A(r);E(t)&&t.call(this,o,r!==i?n:o,e),n=o})}})}}var c=e.length,p=t.length,h=new RegExp(e.replace(/./g,o),"g"),d=new RegExp(t.replace(/./g,o),"g");return u.startSymbol=function(){return e},u.endSymbol=function(){return t},u}]}function gt(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(e,t,n,r,i){function o(o,s,l,u){function c(){p?o.apply(null,h):o(g)}var p=4<arguments.length,h=p?Qn.call(arguments,4):[],d=t.setInterval,f=t.clearInterval,g=0,m=v(u)&&!u,y=(m?r:n).defer(),$=y.promise;return l=v(l)?l:0,$.$$intervalId=d(function(){m?i.defer(c):e.$evalAsync(c),y.notify(g++),l>0&&g>=l&&(y.resolve(g),f($.$$intervalId),delete a[$.$$intervalId]),m||e.$apply()},s),a[$.$$intervalId]=y,$}var a={};return o.cancel=function(e){return e&&e.$$intervalId in a?(a[e.$$intervalId].reject("canceled"),t.clearInterval(e.$$intervalId),delete a[e.$$intervalId],!0):!1},o}]}function mt(e){e=e.split("/");for(var t=e.length;t--;)e[t]=z(e[t]);return e.join("/")}function vt(e,t){var n=sn(e);t.$$protocol=n.protocol,t.$$host=n.hostname,t.$$port=c(n.port)||li[n.protocol]||null}function yt(e,t){var n="/"!==e.charAt(0);n&&(e="/"+e);var r=sn(e);t.$$path=decodeURIComponent(n&&"/"===r.pathname.charAt(0)?r.pathname.substring(1):r.pathname),t.$$search=G(r.search),t.$$hash=decodeURIComponent(r.hash),t.$$path&&"/"!=t.$$path.charAt(0)&&(t.$$path="/"+t.$$path)}function $t(e,t){return 0===t.indexOf(e)?t.substr(e.length):void 0}function bt(e){var t=e.indexOf("#");return-1==t?e:e.substr(0,t)}function wt(e){return e.replace(/(#.+)|#$/,"$1")}function xt(e,t,n){this.$$html5=!0,n=n||"",vt(e,this),this.$$parse=function(e){var n=$t(t,e);if(!b(n))throw ui("ipthprfx",e,t);yt(n,this),this.$$path||(this.$$path="/"),this.$$compose()},this.$$compose=function(){var e=W(this.$$search),n=this.$$hash?"#"+z(this.$$hash):"";this.$$url=mt(this.$$path)+(e?"?"+e:"")+n,this.$$absUrl=t+this.$$url.substr(1)},this.$$parseLinkUrl=function(r,i){if(i&&"#"===i[0])return this.hash(i.slice(1)),!0;var o,a;return v(o=$t(e,r))?(a=o,a=v(o=$t(n,o))?t+($t("/",o)||o):e+a):v(o=$t(t,r))?a=t+o:t==r+"/"&&(a=t),a&&this.$$parse(a),!!a}}function Et(e,t,n){vt(e,this),this.$$parse=function(r){var i,o=$t(e,r)||$t(t,r);m(o)||"#"!==o.charAt(0)?this.$$html5?i=o:(i="",m(o)&&(e=r,this.replace())):(i=$t(n,o),m(i)&&(i=o)),yt(i,this),r=this.$$path;var o=e,a=/^\/[A-Z]:(\/.*)/;0===i.indexOf(o)&&(i=i.replace(o,"")),a.exec(i)||(r=(i=a.exec(r))?i[1]:r),this.$$path=r,this.$$compose()},this.$$compose=function(){var t=W(this.$$search),r=this.$$hash?"#"+z(this.$$hash):"";this.$$url=mt(this.$$path)+(t?"?"+t:"")+r,this.$$absUrl=e+(this.$$url?n+this.$$url:"")},this.$$parseLinkUrl=function(t,n){return bt(e)==bt(t)?(this.$$parse(t),!0):!1}}function Ct(e,t,n){this.$$html5=!0,Et.apply(this,arguments),this.$$parseLinkUrl=function(r,i){if(i&&"#"===i[0])return this.hash(i.slice(1)),!0;var o,a;return e==bt(r)?o=r:(a=$t(t,r))?o=e+n+a:t===r+"/"&&(o=t),o&&this.$$parse(o),!!o},this.$$compose=function(){var t=W(this.$$search),r=this.$$hash?"#"+z(this.$$hash):"";this.$$url=mt(this.$$path)+(t?"?"+t:"")+r,this.$$absUrl=e+n+this.$$url}}function St(e){return function(){return this[e]}}function Tt(e,t){return function(n){return m(n)?this[e]:(this[e]=t(n),this.$$compose(),this)}}function At(){var e="",t={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(t){return v(t)?(e=t,this):e},this.html5Mode=function(e){return A(e)?(t.enabled=e,this):y(e)?(A(e.enabled)&&(t.enabled=e.enabled),A(e.requireBase)&&(t.requireBase=e.requireBase),A(e.rewriteLinks)&&(t.rewriteLinks=e.rewriteLinks),this):t},this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(n,r,i,o,a){function s(e,t,n){var i=u.url(),o=u.$$state;try{r.url(e,t,n),u.$$state=r.state()}catch(a){throw u.url(i),u.$$state=o,a}}function l(e,t){n.$broadcast("$locationChangeSuccess",u.absUrl(),e,u.$$state,t)}var u,c;c=r.baseHref();var p,h=r.url();if(t.enabled){if(!c&&t.requireBase)throw ui("nobase");p=h.substring(0,h.indexOf("/",h.indexOf("//")+2))+(c||"/"),c=i.history?xt:Ct}else p=bt(h),c=Et;var d=p.substr(0,bt(p).lastIndexOf("/")+1);u=new c(p,d,"#"+e),u.$$parseLinkUrl(h,h),u.$$state=r.state();var f=/^\s*(javascript|mailto):/i;o.on("click",function(e){if(t.rewriteLinks&&!e.ctrlKey&&!e.metaKey&&!e.shiftKey&&2!=e.which&&2!=e.button){for(var i=Vn(e.target);"a"!==I(i[0]);)if(i[0]===o[0]||!(i=i.parent())[0])return;var s=i.prop("href"),l=i.attr("href")||i.attr("xlink:href");y(s)&&"[object SVGAnimatedString]"===s.toString()&&(s=sn(s.animVal).href),f.test(s)||!s||i.attr("target")||e.isDefaultPrevented()||!u.$$parseLinkUrl(s,l)||(e.preventDefault(),u.absUrl()!=r.url()&&(n.$apply(),a.angular["ff-684208-preventDefault"]=!0))}}),wt(u.absUrl())!=wt(h)&&r.url(u.absUrl(),!0);var g=!0;return r.onUrlChange(function(e,t){m($t(d,e))?a.location.href=e:(n.$evalAsync(function(){var r,i=u.absUrl(),o=u.$$state;e=wt(e),u.$$parse(e),u.$$state=t,r=n.$broadcast("$locationChangeStart",e,i,t,o).defaultPrevented,u.absUrl()===e&&(r?(u.$$parse(i),u.$$state=o,s(i,!1,o)):(g=!1,l(i,o)))}),n.$$phase||n.$digest())}),n.$watch(function(){var e=wt(r.url()),t=wt(u.absUrl()),o=r.state(),a=u.$$replace,c=e!==t||u.$$html5&&i.history&&o!==u.$$state;(g||c)&&(g=!1,n.$evalAsync(function(){var t=u.absUrl(),r=n.$broadcast("$locationChangeStart",t,e,u.$$state,o).defaultPrevented;u.absUrl()===t&&(r?(u.$$parse(e),u.$$state=o):(c&&s(t,a,o===u.$$state?null:u.$$state),l(e,o)))})),u.$$replace=!1}),u}]}function Nt(){var e=!0,t=this;this.debugEnabled=function(t){return v(t)?(e=t,this):e},this.$get=["$window",function(n){function i(e){return e instanceof Error&&(e.stack?e=e.message&&-1===e.stack.indexOf(e.message)?"Error: "+e.message+"\n"+e.stack:e.stack:e.sourceURL&&(e=e.message+"\n"+e.sourceURL+":"+e.line)),e}function o(e){var t=n.console||{},o=t[e]||t.log||h;e=!1;try{e=!!o.apply}catch(a){}return e?function(){var e=[];return r(arguments,function(t){e.push(i(t))}),o.apply(t,e)}:function(e,t){o(e,null==t?"":t)}}return{log:o("log"),info:o("info"),warn:o("warn"),error:o("error"),debug:function(){var n=o("debug");return function(){e&&n.apply(t,arguments)}}()}}]}function Lt(e,t){if("__defineGetter__"===e||"__defineSetter__"===e||"__lookupGetter__"===e||"__lookupSetter__"===e||"__proto__"===e)throw pi("isecfld",t);return e}function Ot(e){return e+""}function It(e,t){if(e){if(e.constructor===e)throw pi("isecfn",t);if(e.window===e)throw pi("isecwindow",t);if(e.children&&(e.nodeName||e.prop&&e.attr&&e.find))throw pi("isecdom",t);if(e===Object)throw pi("isecobj",t)}return e}function kt(e,t){if(e){if(e.constructor===e)throw pi("isecfn",t);if(e===hi||e===di||e===fi)throw pi("isecff",t)}}function Rt(e,t){if(e&&(e===0..constructor||e===(!1).constructor||e==="".constructor||e==={}.constructor||e===[].constructor||e===Function.constructor))throw pi("isecaf",t)}function Mt(e,t){return"undefined"!=typeof e?e:t}function Dt(e,t){return"undefined"==typeof e?t:"undefined"==typeof t?e:e+t}function _t(e,t){var n,i;switch(e.type){case yi.Program:n=!0,r(e.body,function(e){_t(e.expression,t),n=n&&e.expression.constant}),e.constant=n;break;case yi.Literal:e.constant=!0,e.toWatch=[];break;case yi.UnaryExpression:_t(e.argument,t),e.constant=e.argument.constant,e.toWatch=e.argument.toWatch;break;case yi.BinaryExpression:_t(e.left,t),_t(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=e.left.toWatch.concat(e.right.toWatch);break;case yi.LogicalExpression:_t(e.left,t),_t(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=e.constant?[]:[e];break;case yi.ConditionalExpression:_t(e.test,t),_t(e.alternate,t),_t(e.consequent,t),e.constant=e.test.constant&&e.alternate.constant&&e.consequent.constant,e.toWatch=e.constant?[]:[e];break;case yi.Identifier:e.constant=!1,e.toWatch=[e];break;case yi.MemberExpression:_t(e.object,t),e.computed&&_t(e.property,t),e.constant=e.object.constant&&(!e.computed||e.property.constant),e.toWatch=[e];break;case yi.CallExpression:n=e.filter?!t(e.callee.name).$stateful:!1,i=[],r(e.arguments,function(e){_t(e,t),n=n&&e.constant,e.constant||i.push.apply(i,e.toWatch)}),e.constant=n,e.toWatch=e.filter&&!t(e.callee.name).$stateful?i:[e];break;case yi.AssignmentExpression:_t(e.left,t),_t(e.right,t),e.constant=e.left.constant&&e.right.constant,e.toWatch=[e];break;case yi.ArrayExpression:n=!0,i=[],r(e.elements,function(e){_t(e,t),n=n&&e.constant,e.constant||i.push.apply(i,e.toWatch)}),e.constant=n,e.toWatch=i;break;case yi.ObjectExpression:n=!0,i=[],r(e.properties,function(e){_t(e.value,t),n=n&&e.value.constant,e.value.constant||i.push.apply(i,e.value.toWatch)}),e.constant=n,e.toWatch=i;break;case yi.ThisExpression:e.constant=!1,e.toWatch=[];break;case yi.LocalsExpression:e.constant=!1,e.toWatch=[]}}function jt(e){if(1==e.length){e=e[0].expression;var t=e.toWatch;return 1!==t.length?t:t[0]!==e?t:void 0}}function Pt(e){return e.type===yi.Identifier||e.type===yi.MemberExpression}function Ft(e){return 1===e.body.length&&Pt(e.body[0].expression)?{type:yi.AssignmentExpression,left:e.body[0].expression,right:{type:yi.NGValueParameter},operator:"="}:void 0}function qt(e){return 0===e.body.length||1===e.body.length&&(e.body[0].expression.type===yi.Literal||e.body[0].expression.type===yi.ArrayExpression||e.body[0].expression.type===yi.ObjectExpression)}function Ut(e,t){this.astBuilder=e,this.$filter=t}function Bt(e,t){this.astBuilder=e,this.$filter=t}function Ht(e){return"constructor"==e}function Vt(e){return E(e.valueOf)?e.valueOf():bi.call(e)}function Gt(){var e,t,n=se(),i=se(),o={"true":!0,"false":!1,"null":null,undefined:void 0};this.addLiteral=function(e,t){o[e]=t},this.setIdentifierFns=function(n,r){return e=n,t=r,this},this.$get=["$filter",function(a){function s(e,t,r){var o,s,u;switch(r=r||b,typeof e){case"string":u=e=e.trim();var m=r?i:n;if(o=m[u],!o){":"===e.charAt(0)&&":"===e.charAt(1)&&(s=!0,e=e.substring(2)),o=r?$:y;var v=new vi(o);o=new $i(v,a,o).parse(e),o.constant?o.$$watchDelegate=f:s?o.$$watchDelegate=o.literal?d:p:o.inputs&&(o.$$watchDelegate=c),r&&(o=l(o)),m[u]=o}return g(o,t);case"function":return g(e,t);default:return g(h,t)}}function l(e){function t(t,n,r,i){var o=b;b=!0;try{return e(t,n,r,i)}finally{b=o}}if(!e)return e;t.$$watchDelegate=e.$$watchDelegate,t.assign=l(e.assign),t.constant=e.constant,t.literal=e.literal;for(var n=0;e.inputs&&n<e.inputs.length;++n)e.inputs[n]=l(e.inputs[n]);return t.inputs=e.inputs,t}function u(e,t){return null==e||null==t?e===t:"object"==typeof e&&(e=Vt(e),"object"==typeof e)?!1:e===t||e!==e&&t!==t}function c(e,t,n,r,i){var o,a=r.inputs;if(1===a.length){var s=u,a=a[0];return e.$watch(function(e){var t=a(e);return u(t,s)||(o=r(e,void 0,void 0,[t]),s=t&&Vt(t)),o},t,n,i)}for(var l=[],c=[],p=0,h=a.length;h>p;p++)l[p]=u,c[p]=null;return e.$watch(function(e){for(var t=!1,n=0,i=a.length;i>n;n++){var s=a[n](e);(t||(t=!u(s,l[n])))&&(c[n]=s,l[n]=s&&Vt(s))}return t&&(o=r(e,void 0,void 0,c)),o},t,n,i)}function p(e,t,n,r){var i,o;return i=e.$watch(function(e){return r(e)},function(e,n,r){o=e,E(t)&&t.apply(this,arguments),v(e)&&r.$$postDigest(function(){v(o)&&i()})},n)}function d(e,t,n,i){function o(e){var t=!0;return r(e,function(e){v(e)||(t=!1)}),t}var a,s;return a=e.$watch(function(e){return i(e)},function(e,n,r){s=e,E(t)&&t.call(this,e,n,r),o(e)&&r.$$postDigest(function(){o(s)&&a()})},n)}function f(e,t,n,r){var i;return i=e.$watch(function(e){return i(),r(e)},t,n)}function g(e,t){if(!t)return e;var n=e.$$watchDelegate,r=!1,n=n!==d&&n!==p?function(n,i,o,a){return o=r&&a?a[0]:e(n,i,o,a),t(o,n,i)}:function(n,r,i,o){return i=e(n,r,i,o),n=t(i,n,r),v(i)?n:i};return e.$$watchDelegate&&e.$$watchDelegate!==c?n.$$watchDelegate=e.$$watchDelegate:t.$stateful||(n.$$watchDelegate=c,r=!e.inputs,n.inputs=e.inputs?e.inputs:[e]),n}var m=ur().noUnsafeEval,y={csp:m,expensiveChecks:!1,literals:R(o),isIdentifierStart:E(e)&&e,isIdentifierContinue:E(t)&&t},$={csp:m,expensiveChecks:!0,literals:R(o),isIdentifierStart:E(e)&&e,isIdentifierContinue:E(t)&&t},b=!1;return s.$$runningExpensiveChecks=function(){return b},s}]}function Wt(){this.$get=["$rootScope","$exceptionHandler",function(e,t){return Kt(function(t){e.$evalAsync(t)},t)}]}function zt(){this.$get=["$browser","$exceptionHandler",function(e,t){return Kt(function(t){e.defer(t)},t)}]}function Kt(e,n){function i(){this.$$state={status:0}}function o(e,t){return function(n){t.call(e,n)}}function a(t){!t.processScheduled&&t.pending&&(t.processScheduled=!0,e(function(){var e,r,i;i=t.pending,t.processScheduled=!1,t.pending=void 0;for(var o=0,a=i.length;a>o;++o){r=i[o][0],e=i[o][t.status];try{E(e)?r.resolve(e(t.value)):1===t.status?r.resolve(t.value):r.reject(t.value)}catch(s){r.reject(s),n(s)}}}))}function s(){this.promise=new i}var u=t("$q",TypeError);l(i.prototype,{then:function(e,t,n){if(m(e)&&m(t)&&m(n))return this;var r=new s;return this.$$state.pending=this.$$state.pending||[],this.$$state.pending.push([r,e,t,n]),0<this.$$state.status&&a(this.$$state),r.promise},"catch":function(e){return this.then(null,e)},"finally":function(e,t){return this.then(function(t){return p(t,!0,e)},function(t){return p(t,!1,e)},t)}}),l(s.prototype,{resolve:function(e){this.promise.$$state.status||(e===this.promise?this.$$reject(u("qcycle",e)):this.$$resolve(e))},$$resolve:function(e){function t(e){l||(l=!0,s.$$resolve(e))}function r(e){l||(l=!0,s.$$reject(e))}var i,s=this,l=!1;
try{(y(e)||E(e))&&(i=e&&e.then),E(i)?(this.promise.$$state.status=-1,i.call(e,t,r,o(this,this.notify))):(this.promise.$$state.value=e,this.promise.$$state.status=1,a(this.promise.$$state))}catch(u){r(u),n(u)}},reject:function(e){this.promise.$$state.status||this.$$reject(e)},$$reject:function(e){this.promise.$$state.value=e,this.promise.$$state.status=2,a(this.promise.$$state)},notify:function(t){var r=this.promise.$$state.pending;0>=this.promise.$$state.status&&r&&r.length&&e(function(){for(var e,i,o=0,a=r.length;a>o;o++){i=r[o][0],e=r[o][3];try{i.notify(E(e)?e(t):t)}catch(s){n(s)}}})}});var c=function(e,t){var n=new s;return t?n.resolve(e):n.reject(e),n.promise},p=function(e,t,n){var r=null;try{E(n)&&(r=n())}catch(i){return c(i,!1)}return r&&E(r.then)?r.then(function(){return c(e,t)},function(e){return c(e,!1)}):c(e,t)},h=function(e,t,n,r){var i=new s;return i.resolve(e),i.promise.then(t,n,r)},d=function(e){if(!E(e))throw u("norslvr",e);var t=new s;return e(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise};return d.prototype=i.prototype,d.defer=function(){var e=new s;return e.resolve=o(e,e.resolve),e.reject=o(e,e.reject),e.notify=o(e,e.notify),e},d.reject=function(e){var t=new s;return t.reject(e),t.promise},d.when=h,d.resolve=h,d.all=function(e){var t=new s,n=0,i=or(e)?[]:{};return r(e,function(e,r){n++,h(e).then(function(e){i.hasOwnProperty(r)||(i[r]=e,--n||t.resolve(i))},function(e){i.hasOwnProperty(r)||t.reject(e)})}),0===n&&t.resolve(i),t.promise},d}function Yt(){this.$get=["$window","$timeout",function(e,t){var n=e.requestAnimationFrame||e.webkitRequestAnimationFrame,r=e.cancelAnimationFrame||e.webkitCancelAnimationFrame||e.webkitCancelRequestAnimationFrame,i=!!n,o=i?function(e){var t=n(e);return function(){r(t)}}:function(e){var n=t(e,16.66,!1);return function(){t.cancel(n)}};return o.supported=i,o}]}function Xt(){function e(e){function t(){this.$$watchers=this.$$nextSibling=this.$$childHead=this.$$childTail=null,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$id=++ir,this.$$ChildScope=null}return t.prototype=e,t}var i=10,o=t("$rootScope"),a=null,s=null;this.digestTtl=function(e){return arguments.length&&(i=e),i},this.$get=["$exceptionHandler","$parse","$browser",function(t,l,u){function c(e){e.currentScope.$$destroyed=!0}function p(e){9===Hn&&(e.$$childHead&&p(e.$$childHead),e.$$nextSibling&&p(e.$$nextSibling)),e.$parent=e.$$nextSibling=e.$$prevSibling=e.$$childHead=e.$$childTail=e.$root=e.$$watchers=null}function d(){this.$id=++ir,this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null,this.$root=this,this.$$destroyed=!1,this.$$listeners={},this.$$listenerCount={},this.$$watchersCount=0,this.$$isolateBindings=null}function f(e){if(x.$$phase)throw o("inprog",x.$$phase);x.$$phase=e}function g(e,t){do e.$$watchersCount+=t;while(e=e.$parent)}function v(e,t,n){do e.$$listenerCount[n]-=t,0===e.$$listenerCount[n]&&delete e.$$listenerCount[n];while(e=e.$parent)}function $(){}function b(){for(;T.length;)try{T.shift()()}catch(e){t(e)}s=null}function w(){null===s&&(s=u.defer(function(){x.$apply(b)}))}d.prototype={constructor:d,$new:function(t,n){var r;return n=n||this,t?(r=new d,r.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=e(this)),r=new this.$$ChildScope),r.$parent=n,r.$$prevSibling=n.$$childTail,n.$$childHead?(n.$$childTail.$$nextSibling=r,n.$$childTail=r):n.$$childHead=n.$$childTail=r,(t||n!=this)&&r.$on("$destroy",c),r},$watch:function(e,t,n,r){var i=l(e);if(i.$$watchDelegate)return i.$$watchDelegate(this,t,n,i,e);var o=this,s=o.$$watchers,u={fn:t,last:$,get:i,exp:r||e,eq:!!n};return a=null,E(t)||(u.fn=h),s||(s=o.$$watchers=[]),s.unshift(u),g(this,1),function(){0<=k(s,u)&&g(o,-1),a=null}},$watchGroup:function(e,t){function n(){l=!1,u?(u=!1,t(o,o,s)):t(o,i,s)}var i=Array(e.length),o=Array(e.length),a=[],s=this,l=!1,u=!0;if(!e.length){var c=!0;return s.$evalAsync(function(){c&&t(o,o,s)}),function(){c=!1}}return 1===e.length?this.$watch(e[0],function(e,n,r){o[0]=e,i[0]=n,t(o,e===n?o:i,r)}):(r(e,function(e,t){var r=s.$watch(e,function(e,r){o[t]=e,i[t]=r,l||(l=!0,s.$evalAsync(n))});a.push(r)}),function(){for(;a.length;)a.shift()()})},$watchCollection:function(e,t){function r(e){i=e;var t,r,a,s;if(!m(i)){if(y(i))if(n(i))for(o!==h&&(o=h,g=o.length=0,c++),e=i.length,g!==e&&(c++,o.length=g=e),t=0;e>t;t++)s=o[t],a=i[t],r=s!==s&&a!==a,r||s===a||(c++,o[t]=a);else{o!==d&&(o=d={},g=0,c++),e=0;for(t in i)Kn.call(i,t)&&(e++,a=i[t],s=o[t],t in o?(r=s!==s&&a!==a,r||s===a||(c++,o[t]=a)):(g++,o[t]=a,c++));if(g>e)for(t in c++,o)Kn.call(i,t)||(g--,delete o[t])}else o!==i&&(o=i,c++);return c}}r.$stateful=!0;var i,o,a,s=this,u=1<t.length,c=0,p=l(e,r),h=[],d={},f=!0,g=0;return this.$watch(p,function(){if(f?(f=!1,t(i,i,s)):t(i,a,s),u)if(y(i))if(n(i)){a=Array(i.length);for(var e=0;e<i.length;e++)a[e]=i[e]}else for(e in a={},i)Kn.call(i,e)&&(a[e]=i[e]);else a=i})},$digest:function(){var e,n,r,l,c,p,h,d,g,m,v,y=i,w=[];f("$digest"),u.$$checkUrlChange(),this===x&&null!==s&&(u.defer.cancel(s),b()),a=null;do{for(d=!1,g=this;C.length;){try{v=C.shift(),v.scope.$eval(v.expression,v.locals)}catch(T){t(T)}a=null}e:do{if(p=g.$$watchers)for(h=p.length;h--;)try{if(e=p[h])if(c=e.get,(n=c(g))===(r=e.last)||(e.eq?D(n,r):"number"==typeof n&&"number"==typeof r&&isNaN(n)&&isNaN(r))){if(e===a){d=!1;break e}}else d=!0,a=e,e.last=e.eq?R(n,null):n,l=e.fn,l(n,r===$?n:r,g),5>y&&(m=4-y,w[m]||(w[m]=[]),w[m].push({msg:E(e.exp)?"fn: "+(e.exp.name||e.exp.toString()):e.exp,newVal:n,oldVal:r}))}catch(A){t(A)}if(!(p=g.$$watchersCount&&g.$$childHead||g!==this&&g.$$nextSibling))for(;g!==this&&!(p=g.$$nextSibling);)g=g.$parent}while(g=p);if((d||C.length)&&!y--)throw x.$$phase=null,o("infdig",i,w)}while(d||C.length);for(x.$$phase=null;S.length;)try{S.shift()()}catch(N){t(N)}},$destroy:function(){if(!this.$$destroyed){var e=this.$parent;this.$broadcast("$destroy"),this.$$destroyed=!0,this===x&&u.$$applicationDestroyed(),g(this,-this.$$watchersCount);for(var t in this.$$listenerCount)v(this,this.$$listenerCount[t],t);e&&e.$$childHead==this&&(e.$$childHead=this.$$nextSibling),e&&e.$$childTail==this&&(e.$$childTail=this.$$prevSibling),this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling),this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling),this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=h,this.$on=this.$watch=this.$watchGroup=function(){return h},this.$$listeners={},this.$$nextSibling=null,p(this)}},$eval:function(e,t){return l(e)(this,t)},$evalAsync:function(e,t){x.$$phase||C.length||u.defer(function(){C.length&&x.$digest()}),C.push({scope:this,expression:l(e),locals:t})},$$postDigest:function(e){S.push(e)},$apply:function(e){try{f("$apply");try{return this.$eval(e)}finally{x.$$phase=null}}catch(n){t(n)}finally{try{x.$digest()}catch(r){throw t(r),r}}},$applyAsync:function(e){function t(){n.$eval(e)}var n=this;e&&T.push(t),e=l(e),w()},$on:function(e,t){var n=this.$$listeners[e];n||(this.$$listeners[e]=n=[]),n.push(t);var r=this;do r.$$listenerCount[e]||(r.$$listenerCount[e]=0),r.$$listenerCount[e]++;while(r=r.$parent);var i=this;return function(){var r=n.indexOf(t);-1!==r&&(n[r]=null,v(i,1,e))}},$emit:function(e,n){var r,i,o,a=[],s=this,l=!1,u={name:e,targetScope:s,stopPropagation:function(){l=!0},preventDefault:function(){u.defaultPrevented=!0},defaultPrevented:!1},c=_([u],arguments,1);do{for(r=s.$$listeners[e]||a,u.currentScope=s,i=0,o=r.length;o>i;i++)if(r[i])try{r[i].apply(null,c)}catch(p){t(p)}else r.splice(i,1),i--,o--;if(l)return u.currentScope=null,u;s=s.$parent}while(s);return u.currentScope=null,u},$broadcast:function(e,n){var r=this,i=this,o={name:e,targetScope:this,preventDefault:function(){o.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[e])return o;for(var a,s,l=_([o],arguments,1);r=i;){for(o.currentScope=r,i=r.$$listeners[e]||[],a=0,s=i.length;s>a;a++)if(i[a])try{i[a].apply(null,l)}catch(u){t(u)}else i.splice(a,1),a--,s--;if(!(i=r.$$listenerCount[e]&&r.$$childHead||r!==this&&r.$$nextSibling))for(;r!==this&&!(i=r.$$nextSibling);)r=r.$parent}return o.currentScope=null,o}};var x=new d,C=x.$$asyncQueue=[],S=x.$$postDigestQueue=[],T=x.$$applyAsyncQueue=[];return x}]}function Qt(){var e=/^\s*(https?|ftp|mailto|tel|file):/,t=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(t){return v(t)?(e=t,this):e},this.imgSrcSanitizationWhitelist=function(e){return v(e)?(t=e,this):t},this.$get=function(){return function(n,r){var i,o=r?t:e;return i=sn(n).href,""===i||i.match(o)?n:"unsafe:"+i}}}function Jt(e){if("self"===e)return e;if(b(e)){if(-1<e.indexOf("***"))throw wi("iwcard",e);return e=lr(e).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*"),new RegExp("^"+e+"$")}if(C(e))return new RegExp("^"+e.source+"$");throw wi("imatcher")}function Zt(e){var t=[];return v(e)&&r(e,function(e){t.push(Jt(e))}),t}function en(){this.SCE_CONTEXTS=xi;var e=["self"],t=[];this.resourceUrlWhitelist=function(t){return arguments.length&&(e=Zt(t)),e},this.resourceUrlBlacklist=function(e){return arguments.length&&(t=Zt(e)),t},this.$get=["$injector",function(n){function r(e,t){return"self"===e?ln(t):!!e.exec(t.href)}function i(e){var t=function(e){this.$$unwrapTrustedValue=function(){return e}};return e&&(t.prototype=new e),t.prototype.valueOf=function(){return this.$$unwrapTrustedValue()},t.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()},t}var o=function(e){throw wi("unsafe")};n.has("$sanitize")&&(o=n.get("$sanitize"));var a=i(),s={};return s[xi.HTML]=i(a),s[xi.CSS]=i(a),s[xi.URL]=i(a),s[xi.JS]=i(a),s[xi.RESOURCE_URL]=i(s[xi.URL]),{trustAs:function(e,t){var n=s.hasOwnProperty(e)?s[e]:null;if(!n)throw wi("icontext",e,t);if(null===t||m(t)||""===t)return t;if("string"!=typeof t)throw wi("itype",e);return new n(t)},getTrusted:function(n,i){if(null===i||m(i)||""===i)return i;var a=s.hasOwnProperty(n)?s[n]:null;if(a&&i instanceof a)return i.$$unwrapTrustedValue();if(n===xi.RESOURCE_URL){var l,u,a=sn(i.toString()),c=!1;for(l=0,u=e.length;u>l;l++)if(r(e[l],a)){c=!0;break}if(c)for(l=0,u=t.length;u>l;l++)if(r(t[l],a)){c=!1;break}if(c)return i;throw wi("insecurl",i.toString())}if(n===xi.HTML)return o(i);throw wi("unsafe")},valueOf:function(e){return e instanceof a?e.$$unwrapTrustedValue():e}}}]}function tn(){var e=!0;this.enabled=function(t){return arguments.length&&(e=!!t),e},this.$get=["$parse","$sceDelegate",function(t,n){if(e&&8>Hn)throw wi("iequirks");var i=M(xi);i.isEnabled=function(){return e},i.trustAs=n.trustAs,i.getTrusted=n.getTrusted,i.valueOf=n.valueOf,e||(i.trustAs=i.getTrusted=function(e,t){return t},i.valueOf=d),i.parseAs=function(e,n){var r=t(n);return r.literal&&r.constant?r:t(n,function(t){return i.getTrusted(e,t)})};var o=i.parseAs,a=i.getTrusted,s=i.trustAs;return r(xi,function(e,t){var n=Yn(t);i[ce("parse_as_"+n)]=function(t){return o(e,t)},i[ce("get_trusted_"+n)]=function(t){return a(e,t)},i[ce("trust_as_"+n)]=function(t){return s(e,t)}}),i}]}function nn(){this.$get=["$window","$document",function(e,t){var n,r={},i=!(e.chrome&&e.chrome.app&&e.chrome.app.runtime)&&e.history&&e.history.pushState,o=c((/android (\d+)/.exec(Yn((e.navigator||{}).userAgent))||[])[1]),a=/Boxee/i.test((e.navigator||{}).userAgent),s=t[0]||{},l=/^(Moz|webkit|ms)(?=[A-Z])/,u=s.body&&s.body.style,p=!1,h=!1;if(u){for(var d in u)if(p=l.exec(d)){n=p[0],n=n.substr(0,1).toUpperCase()+n.substr(1);break}n||(n="WebkitOpacity"in u&&"webkit"),p=!!("transition"in u||n+"Transition"in u),h=!!("animation"in u||n+"Animation"in u),!o||p&&h||(p=b(u.webkitTransition),h=b(u.webkitAnimation))}return{history:!(!i||4>o||a),hasEvent:function(e){if("input"===e&&11>=Hn)return!1;if(m(r[e])){var t=s.createElement("div");r[e]="on"+e in t}return r[e]},csp:ur(),vendorPrefix:n,transitions:p,animations:h,android:o}}]}function rn(){var e;this.httpOptions=function(t){return t?(e=t,this):e},this.$get=["$templateCache","$http","$q","$sce",function(t,n,r,i){function o(a,s){o.totalPendingRequests++,b(a)&&t.get(a)||(a=i.getTrustedResourceUrl(a));var u=n.defaults&&n.defaults.transformResponse;return or(u)?u=u.filter(function(e){return e!==at}):u===at&&(u=null),n.get(a,l({cache:t,transformResponse:u},e))["finally"](function(){o.totalPendingRequests--}).then(function(e){return t.put(a,e.data),e.data},function(e){if(!s)throw Ei("tpload",a,e.status,e.statusText);return r.reject(e)})}return o.totalPendingRequests=0,o}]}function on(){this.$get=["$rootScope","$browser","$location",function(e,t,n){return{findBindings:function(e,t,n){e=e.getElementsByClassName("ng-binding");var i=[];return r(e,function(e){var o=rr.element(e).data("$binding");o&&r(o,function(r){n?new RegExp("(^|\\s)"+lr(t)+"(\\s|\\||$)").test(r)&&i.push(e):-1!=r.indexOf(t)&&i.push(e)})}),i},findModels:function(e,t,n){for(var r=["ng-","data-ng-","ng\\:"],i=0;i<r.length;++i){var o=e.querySelectorAll("["+r[i]+"model"+(n?"=":"*=")+'"'+t+'"]');if(o.length)return o}},getLocation:function(){return n.url()},setLocation:function(t){t!==n.url()&&(n.url(t),e.$digest())},whenStable:function(e){t.notifyWhenNoOutstandingRequests(e)}}}]}function an(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(e,t,n,r,i){function o(o,s,l){E(o)||(l=s,s=o,o=h);var u,c=Qn.call(arguments,3),p=v(l)&&!l,d=(p?r:n).defer(),f=d.promise;return u=t.defer(function(){try{d.resolve(o.apply(null,c))}catch(t){d.reject(t),i(t)}finally{delete a[f.$$timeoutId]}p||e.$apply()},s),f.$$timeoutId=u,a[u]=d,f}var a={};return o.cancel=function(e){return e&&e.$$timeoutId in a?(a[e.$$timeoutId].reject("canceled"),delete a[e.$$timeoutId],t.defer.cancel(e.$$timeoutId)):!1},o}]}function sn(e){return Hn&&(Ci.setAttribute("href",e),e=Ci.href),Ci.setAttribute("href",e),{href:Ci.href,protocol:Ci.protocol?Ci.protocol.replace(/:$/,""):"",host:Ci.host,search:Ci.search?Ci.search.replace(/^\?/,""):"",hash:Ci.hash?Ci.hash.replace(/^#/,""):"",hostname:Ci.hostname,port:Ci.port,pathname:"/"===Ci.pathname.charAt(0)?Ci.pathname:"/"+Ci.pathname}}function ln(e){return e=b(e)?sn(e):e,e.protocol===Si.protocol&&e.host===Si.host}function un(){this.$get=f(e)}function cn(e){function t(e){try{return decodeURIComponent(e)}catch(t){return e}}var n=e[0]||{},r={},i="";return function(){var e,o,a,s,l;if(e=n.cookie||"",e!==i)for(i=e,e=i.split("; "),r={},a=0;a<e.length;a++)o=e[a],s=o.indexOf("="),s>0&&(l=t(o.substring(0,s)),m(r[l])&&(r[l]=t(o.substring(s+1))));return r}}function pn(){this.$get=cn}function hn(e){function t(n,i){if(y(n)){var o={};return r(n,function(e,n){o[n]=t(n,e)}),o}return e.factory(n+"Filter",i)}this.register=t,this.$get=["$injector",function(e){return function(t){return e.get(t+"Filter")}}],t("currency",vn),t("date",Nn),t("filter",dn),t("json",Ln),t("limitTo",On),t("lowercase",ki),t("number",yn),t("orderBy",In),t("uppercase",Ri)}function dn(){return function(e,r,i){if(!n(e)){if(null==e)return e;throw t("filter")("notarray",e)}var o;switch(mn(r)){case"function":break;case"boolean":case"null":case"number":case"string":o=!0;case"object":r=fn(r,i,o);break;default:return e}return Array.prototype.filter.call(e,r)}}function fn(e,t,n){var r=y(e)&&"$"in e;return!0===t?t=D:E(t)||(t=function(e,t){return m(e)?!1:null===e||null===t?e===t:y(t)||y(e)&&!g(e)?!1:(e=Yn(""+e),t=Yn(""+t),-1!==e.indexOf(t))}),function(i){return r&&!y(i)?gn(i,e.$,t,!1):gn(i,e,t,n)}}function gn(e,t,n,r,i){var o=mn(e),a=mn(t);if("string"===a&&"!"===t.charAt(0))return!gn(e,t.substring(1),n,r);if(or(e))return e.some(function(e){return gn(e,t,n,r)});switch(o){case"object":var s;if(r){for(s in e)if("$"!==s.charAt(0)&&gn(e[s],t,n,!0))return!0;return i?!1:gn(e,t,n,!1)}if("object"===a){for(s in t)if(i=t[s],!E(i)&&!m(i)&&(o="$"===s,!gn(o?e:e[s],i,n,o,o)))return!1;return!0}return n(e,t);case"function":return!1;default:return n(e,t)}}function mn(e){return null===e?"null":typeof e}function vn(e){var t=e.NUMBER_FORMATS;return function(e,n,r){return m(n)&&(n=t.CURRENCY_SYM),m(r)&&(r=t.PATTERNS[1].maxFrac),null==e?e:wn(e,t.PATTERNS[1],t.GROUP_SEP,t.DECIMAL_SEP,r).replace(/\u00A4/g,n)}}function yn(e){var t=e.NUMBER_FORMATS;return function(e,n){return null==e?e:wn(e,t.PATTERNS[0],t.GROUP_SEP,t.DECIMAL_SEP,n)}}function $n(e){var t,n,r,i,o,a=0;for(-1<(n=e.indexOf(Ai))&&(e=e.replace(Ai,"")),0<(r=e.search(/e/i))?(0>n&&(n=r),n+=+e.slice(r+1),e=e.substring(0,r)):0>n&&(n=e.length),r=0;e.charAt(r)==Ni;r++);if(r==(o=e.length))t=[0],n=1;else{for(o--;e.charAt(o)==Ni;)o--;for(n-=r,t=[],i=0;o>=r;r++,i++)t[i]=+e.charAt(r)}return n>Ti&&(t=t.splice(0,Ti-1),a=n-1,n=1),{d:t,e:a,i:n}}function bn(e,t,n,r){var i=e.d,o=i.length-e.i;if(t=m(t)?Math.min(Math.max(n,o),r):+t,n=t+e.i,r=i[n],n>0){i.splice(Math.max(e.i,n));for(var a=n;a<i.length;a++)i[a]=0}else for(o=Math.max(0,o),e.i=1,i.length=Math.max(1,n=t+1),i[0]=0,a=1;n>a;a++)i[a]=0;if(r>=5)if(0>n-1){for(r=0;r>n;r--)i.unshift(0),e.i++;i.unshift(1),e.i++}else i[n-1]++;for(;o<Math.max(0,t);o++)i.push(0);(t=i.reduceRight(function(e,t,n,r){return t+=e,r[n]=t%10,Math.floor(t/10)},0))&&(i.unshift(t),e.i++)}function wn(e,t,n,r,i){if(!b(e)&&!w(e)||isNaN(e))return"";var o=!isFinite(e),a=!1,s=Math.abs(e)+"",l="";if(o)l="∞";else{for(a=$n(s),bn(a,i,t.minFrac,t.maxFrac),l=a.d,s=a.i,i=a.e,o=[],a=l.reduce(function(e,t){return e&&!t},!0);0>s;)l.unshift(0),s++;for(s>0?o=l.splice(s):(o=l,l=[0]),s=[],l.length>=t.lgSize&&s.unshift(l.splice(-t.lgSize).join(""));l.length>t.gSize;)s.unshift(l.splice(-t.gSize).join(""));l.length&&s.unshift(l.join("")),l=s.join(n),o.length&&(l+=r+o.join("")),i&&(l+="e+"+i)}return 0>e&&!a?t.negPre+l+t.negSuf:t.posPre+l+t.posSuf}function xn(e,t,n,r){var i="";for((0>e||r&&0>=e)&&(r?e=-e+1:(e=-e,i="-")),e=""+e;e.length<t;)e=Ni+e;return n&&(e=e.substr(e.length-t)),i+e}function En(e,t,n,r,i){return n=n||0,function(o){return o=o["get"+e](),(n>0||o>-n)&&(o+=n),0===o&&-12==n&&(o=12),xn(o,t,r,i)}}function Cn(e,t,n){return function(r,i){var o=r["get"+e](),a=Xn((n?"STANDALONE":"")+(t?"SHORT":"")+e);return i[a][o]}}function Sn(e){var t=new Date(e,0,1).getDay();return new Date(e,0,(4>=t?5:12)-t)}function Tn(e){return function(t){var n=Sn(t.getFullYear());return t=+new Date(t.getFullYear(),t.getMonth(),t.getDate()+(4-t.getDay()))-+n,t=1+Math.round(t/6048e5),xn(t,e)}}function An(e,t){return 0>=e.getFullYear()?t.ERAS[0]:t.ERAS[1]}function Nn(e){function t(e){var t;if(t=e.match(n)){e=new Date(0);var r=0,i=0,o=t[8]?e.setUTCFullYear:e.setFullYear,a=t[8]?e.setUTCHours:e.setHours;t[9]&&(r=c(t[9]+t[10]),i=c(t[9]+t[11])),o.call(e,c(t[1]),c(t[2])-1,c(t[3])),r=c(t[4]||0)-r,i=c(t[5]||0)-i,o=c(t[6]||0),t=Math.round(1e3*parseFloat("0."+(t[7]||0))),a.call(e,r,i,o,t)}return e}var n=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(n,i,o){var a,s,l="",u=[];if(i=i||"mediumDate",i=e.DATETIME_FORMATS[i]||i,b(n)&&(n=Ii.test(n)?c(n):t(n)),w(n)&&(n=new Date(n)),!x(n)||!isFinite(n.getTime()))return n;for(;i;)(s=Oi.exec(i))?(u=_(u,s,1),i=u.pop()):(u.push(i),i=null);var p=n.getTimezoneOffset();return o&&(p=U(o,p),n=B(n,o,!0)),r(u,function(t){a=Li[t],l+=a?a(n,e.DATETIME_FORMATS,p):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}}function Ln(){return function(e,t){return m(t)&&(t=2),F(e,t)}}function On(){return function(e,t,n){return t=1/0===Math.abs(Number(t))?Number(t):c(t),isNaN(t)?e:(w(e)&&(e=e.toString()),or(e)||b(e)?(n=!n||isNaN(n)?0:c(n),n=0>n?Math.max(0,e.length+n):n,t>=0?e.slice(n,n+t):0===n?e.slice(t,e.length):e.slice(Math.max(0,n+t),n)):e)}}function In(e){function r(t,n){return n=n?-1:1,t.map(function(t){var r=1,i=d;if(E(t))i=t;else if(b(t)&&("+"!=t.charAt(0)&&"-"!=t.charAt(0)||(r="-"==t.charAt(0)?-1:1,t=t.substring(1)),""!==t&&(i=e(t),i.constant)))var o=i(),i=function(e){return e[o]};return{get:i,descending:r*n}})}function i(e){switch(typeof e){case"number":case"boolean":case"string":return!0;default:return!1}}return function(e,o,a){if(null==e)return e;if(!n(e))throw t("orderBy")("notarray",e);or(o)||(o=[o]),0===o.length&&(o=["+"]);var s=r(o,a);return s.push({get:function(){return{}},descending:a?-1:1}),e=Array.prototype.map.call(e,function(e,t){return{value:e,predicateValues:s.map(function(n){var r=n.get(e);return n=typeof r,null===r?(n="string",r="null"):"string"===n?r=r.toLowerCase():"object"===n&&("function"==typeof r.valueOf&&(r=r.valueOf(),i(r))||g(r)&&(r=r.toString(),i(r))||(r=t)),{value:r,type:n}})}}),e.sort(function(e,t){for(var n=0,r=0,i=s.length;i>r;++r){var n=e.predicateValues[r],o=t.predicateValues[r],a=0;if(n.type===o.type?n.value!==o.value&&(a=n.value<o.value?-1:1):a=n.type<o.type?-1:1,n=a*s[r].descending)break}return n}),e=e.map(function(e){return e.value})}}function kn(e){return E(e)&&(e={link:e}),e.restrict=e.restrict||"AC",f(e)}function Rn(e,t,n,i,o){var a=this,s=[];a.$error={},a.$$success={},a.$pending=void 0,a.$name=o(t.name||t.ngForm||"")(n),a.$dirty=!1,a.$pristine=!0,a.$valid=!0,a.$invalid=!1,a.$submitted=!1,a.$$parentForm=_i,a.$rollbackViewValue=function(){r(s,function(e){e.$rollbackViewValue()})},a.$commitViewValue=function(){r(s,function(e){e.$commitViewValue()})},a.$addControl=function(e){ie(e.$name,"input"),s.push(e),e.$name&&(a[e.$name]=e),e.$$parentForm=a},a.$$renameControl=function(e,t){var n=e.$name;a[n]===e&&delete a[n],a[t]=e,e.$name=t},a.$removeControl=function(e){e.$name&&a[e.$name]===e&&delete a[e.$name],r(a.$pending,function(t,n){a.$setValidity(n,null,e)}),r(a.$error,function(t,n){a.$setValidity(n,null,e)}),r(a.$$success,function(t,n){a.$setValidity(n,null,e)}),k(s,e),e.$$parentForm=_i},Un({ctrl:this,$element:e,set:function(e,t,n){var r=e[t];r?-1===r.indexOf(n)&&r.push(n):e[t]=[n]},unset:function(e,t,n){var r=e[t];r&&(k(r,n),0===r.length&&delete e[t])},$animate:i}),a.$setDirty=function(){i.removeClass(e,$o),i.addClass(e,bo),a.$dirty=!0,a.$pristine=!1,a.$$parentForm.$setDirty()},a.$setPristine=function(){i.setClass(e,$o,bo+" ng-submitted"),a.$dirty=!1,a.$pristine=!0,a.$submitted=!1,r(s,function(e){e.$setPristine()})},a.$setUntouched=function(){r(s,function(e){e.$setUntouched()})},a.$setSubmitted=function(){i.addClass(e,"ng-submitted"),a.$submitted=!0,a.$$parentForm.$setSubmitted()}}function Mn(e){e.$formatters.push(function(t){return e.$isEmpty(t)?t:t.toString()})}function Dn(e,t,n,r,i,o){var a=Yn(t[0].type);if(!i.android){var s=!1;t.on("compositionstart",function(){s=!0}),t.on("compositionend",function(){s=!1,u()})}var l,u=function(e){if(l&&(o.defer.cancel(l),l=null),!s){var i=t.val();e=e&&e.type,"password"===a||n.ngTrim&&"false"===n.ngTrim||(i=sr(i)),(r.$viewValue!==i||""===i&&r.$$hasNativeValidators)&&r.$setViewValue(i,e)}};if(i.hasEvent("input"))t.on("input",u);else{var c=function(e,t,n){l||(l=o.defer(function(){l=null,t&&t.value===n||u(e)}))};t.on("keydown",function(e){var t=e.keyCode;91===t||t>15&&19>t||t>=37&&40>=t||c(e,this,this.value)}),i.hasEvent("paste")&&t.on("paste cut",c)}t.on("change",u),Yi[a]&&r.$$hasNativeValidators&&a===n.type&&t.on("keydown wheel mousedown",function(e){if(!l){var t=this.validity,n=t.badInput,r=t.typeMismatch;l=o.defer(function(){l=null,t.badInput===n&&t.typeMismatch===r||u(e)})}}),r.$render=function(){var e=r.$isEmpty(r.$viewValue)?"":r.$viewValue;t.val()!==e&&t.val(e)}}function _n(e,t){return function(n,i){var o,a;if(x(n))return n;if(b(n)){if('"'==n.charAt(0)&&'"'==n.charAt(n.length-1)&&(n=n.substring(1,n.length-1)),qi.test(n))return new Date(n);if(e.lastIndex=0,o=e.exec(n))return o.shift(),a=i?{yyyy:i.getFullYear(),MM:i.getMonth()+1,dd:i.getDate(),HH:i.getHours(),mm:i.getMinutes(),ss:i.getSeconds(),sss:i.getMilliseconds()/1e3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},r(o,function(e,n){n<t.length&&(a[t[n]]=+e)}),new Date(a.yyyy,a.MM-1,a.dd,a.HH,a.mm,a.ss||0,1e3*a.sss||0)}return NaN}}function jn(e,t,n,r){return function(i,o,a,s,l,u,c){function p(e){return e&&!(e.getTime&&e.getTime()!==e.getTime())}function h(e){return v(e)&&!x(e)?n(e)||void 0:e}Pn(i,o,a,s),Dn(i,o,a,s,l,u);var d,f=s&&s.$options&&s.$options.timezone;if(s.$$parserName=e,s.$parsers.push(function(e){return s.$isEmpty(e)?null:t.test(e)?(e=n(e,d),f&&(e=B(e,f)),e):void 0}),s.$formatters.push(function(e){if(e&&!x(e))throw xo("datefmt",e);return p(e)?((d=e)&&f&&(d=B(d,f,!0)),c("date")(e,r,f)):(d=null,"")}),v(a.min)||a.ngMin){var g;s.$validators.min=function(e){return!p(e)||m(g)||n(e)>=g},a.$observe("min",function(e){g=h(e),s.$validate()})}if(v(a.max)||a.ngMax){var y;s.$validators.max=function(e){return!p(e)||m(y)||n(e)<=y},a.$observe("max",function(e){y=h(e),s.$validate()})}}}function Pn(e,t,n,r){(r.$$hasNativeValidators=y(t[0].validity))&&r.$parsers.push(function(e){var n=t.prop("validity")||{};return n.badInput||n.typeMismatch?void 0:e})}function Fn(e,t,n,r,i){if(v(r)){if(e=e(r),!e.constant)throw xo("constexpr",n,r);return e(t)}return i}function qn(e,t){return e="ngClass"+e,["$animate",function(n){function i(e,t){var n=[],r=0;e:for(;r<e.length;r++){for(var i=e[r],o=0;o<t.length;o++)if(i==t[o])continue e;n.push(i)}return n}function o(e){var t=[];return or(e)?(r(e,function(e){t=t.concat(o(e))}),t):b(e)?e.split(" "):y(e)?(r(e,function(e,n){e&&(t=t.concat(n.split(" ")))}),t):e}return{restrict:"AC",link:function(a,s,l){function u(e){e=c(e,1),l.$addClass(e)}function c(e,t){var n=s.data("$classCounts")||se(),i=[];return r(e,function(e){(t>0||n[e])&&(n[e]=(n[e]||0)+t,n[e]===+(t>0)&&i.push(e))}),s.data("$classCounts",n),i.join(" ")}function p(e,t){var r=i(t,e),o=i(e,t),r=c(r,1),o=c(o,-1);r&&r.length&&n.addClass(s,r),o&&o.length&&n.removeClass(s,o)}function h(e){if(!0===t||a.$index%2===t){var n=o(e||[]);if(d){if(!D(e,d)){var r=o(d);p(r,n)}}else u(n)}d=or(e)?e.map(function(e){return M(e)}):M(e)}var d;a.$watch(l[e],h,!0),l.$observe("class",function(t){h(a.$eval(l[e]))}),"ngClass"!==e&&a.$watch("$index",function(n,r){var i=1&n;if(i!==(1&r)){var s=o(a.$eval(l[e]));i===t?u(s):(i=c(s,-1),l.$removeClass(i))}})}}}]}function Un(e){function t(e,t){t&&!o[e]?(l.addClass(i,e),o[e]=!0):!t&&o[e]&&(l.removeClass(i,e),o[e]=!1)}function n(e,n){e=e?"-"+ee(e,"-"):"",t(vo+e,!0===n),t(yo+e,!1===n)}var r=e.ctrl,i=e.$element,o={},a=e.set,s=e.unset,l=e.$animate;o[yo]=!(o[vo]=i.hasClass(vo)),r.$setValidity=function(e,i,o){m(i)?(r.$pending||(r.$pending={}),a(r.$pending,e,o)):(r.$pending&&s(r.$pending,e,o),Bn(r.$pending)&&(r.$pending=void 0)),A(i)?i?(s(r.$error,e,o),a(r.$$success,e,o)):(a(r.$error,e,o),s(r.$$success,e,o)):(s(r.$error,e,o),s(r.$$success,e,o)),r.$pending?(t(wo,!0),r.$valid=r.$invalid=void 0,n("",null)):(t(wo,!1),r.$valid=Bn(r.$error),r.$invalid=!r.$valid,n("",r.$valid)),i=r.$pending&&r.$pending[e]?void 0:r.$error[e]?!1:r.$$success[e]?!0:null,n(e,i),r.$$parentForm.$setValidity(e,i,r)}}function Bn(e){if(e)for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}var Hn,Vn,Gn,Wn,zn=/^\/(.+)\/([a-z]*)$/,Kn=Object.prototype.hasOwnProperty,Yn=function(e){return b(e)?e.toLowerCase():e},Xn=function(e){return b(e)?e.toUpperCase():e},Qn=[].slice,Jn=[].splice,Zn=[].push,er=Object.prototype.toString,tr=Object.getPrototypeOf,nr=t("ng"),rr=e.angular||(e.angular={}),ir=0;Hn=e.document.documentMode,h.$inject=[],d.$inject=[];var or=Array.isArray,ar=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,sr=function(e){return b(e)?e.trim():e},lr=function(e){return e.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},ur=function(){if(!v(ur.rules)){var t=e.document.querySelector("[ng-csp]")||e.document.querySelector("[data-ng-csp]");if(t){var n=t.getAttribute("ng-csp")||t.getAttribute("data-ng-csp");ur.rules={noUnsafeEval:!n||-1!==n.indexOf("no-unsafe-eval"),noInlineStyle:!n||-1!==n.indexOf("no-inline-style")}}else{t=ur;try{new Function(""),n=!1}catch(r){n=!0}t.rules={noUnsafeEval:n,noInlineStyle:!1}}}return ur.rules},cr=function(){if(v(cr.name_))return cr.name_;var t,n,r,i,o=hr.length;for(n=0;o>n;++n)if(r=hr[n],t=e.document.querySelector("["+r.replace(":","\\:")+"jq]")){i=t.getAttribute(r+"jq");break}return cr.name_=i},pr=/:/g,hr=["ng-","data-ng-","ng:","x-ng-"],dr=/[A-Z]/g,fr=!1,gr=3,mr={full:"1.5.5",major:1,minor:5,dot:5,codeName:"material-conspiration"};fe.expando="ng339";var vr=fe.cache={},yr=1;fe._data=function(e){return this.cache[e[this.expando]]||{}};var $r=/([\:\-\_]+(.))/g,br=/^moz([A-Z])/,wr={mouseleave:"mouseout",mouseenter:"mouseover"},xr=t("jqLite"),Er=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Cr=/<|&#?\w+;/,Sr=/<([\w:-]+)/,Tr=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,Ar={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Ar.optgroup=Ar.option,Ar.tbody=Ar.tfoot=Ar.colgroup=Ar.caption=Ar.thead,Ar.th=Ar.td;var Nr=e.Node.prototype.contains||function(e){return!!(16&this.compareDocumentPosition(e))},Lr=fe.prototype={ready:function(t){function n(){r||(r=!0,t())}var r=!1;"complete"===e.document.readyState?e.setTimeout(n):(this.on("DOMContentLoaded",n),fe(e).on("load",n))},toString:function(){var e=[];return r(this,function(t){e.push(""+t)}),"["+e.join(", ")+"]"},eq:function(e){return Vn(e>=0?this[e]:this[this.length+e])},length:0,push:Zn,sort:[].sort,splice:[].splice},Or={};r("multiple selected checked disabled readOnly required open".split(" "),function(e){Or[Yn(e)]=e});var Ir={};r("input select option textarea button form details".split(" "),function(e){Ir[e]=!0});var kr={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",ngPattern:"pattern"};r({data:be,removeData:ye,hasData:function(e){for(var t in vr[e.ng339])return!0;return!1},cleanData:function(e){for(var t=0,n=e.length;n>t;t++)ye(e[t])}},function(e,t){fe[t]=e}),r({data:be,inheritedData:Te,scope:function(e){return Vn.data(e,"$scope")||Te(e.parentNode||e,["$isolateScope","$scope"])},isolateScope:function(e){return Vn.data(e,"$isolateScope")||Vn.data(e,"$isolateScopeNoTemplate")},controller:Se,injector:function(e){return Te(e,"$injector")},removeAttr:function(e,t){e.removeAttribute(t)},hasClass:we,css:function(e,t,n){return t=ce(t),v(n)?void(e.style[t]=n):e.style[t]},attr:function(e,t,n){var r=e.nodeType;if(r!==gr&&2!==r&&8!==r)if(r=Yn(t),Or[r]){if(!v(n))return e[t]||(e.attributes.getNamedItem(t)||h).specified?r:void 0;n?(e[t]=!0,e.setAttribute(t,r)):(e[t]=!1,e.removeAttribute(r))}else if(v(n))e.setAttribute(t,n);else if(e.getAttribute)return e=e.getAttribute(t,2),null===e?void 0:e},prop:function(e,t,n){return v(n)?void(e[t]=n):e[t]},text:function(){function e(e,t){if(m(t)){var n=e.nodeType;return 1===n||n===gr?e.textContent:""}e.textContent=t}return e.$dv="",e}(),val:function(e,t){if(m(t)){if(e.multiple&&"select"===I(e)){var n=[];return r(e.options,function(e){e.selected&&n.push(e.value||e.text)}),0===n.length?null:n}return e.value}e.value=t},html:function(e,t){return m(t)?e.innerHTML:(me(e,!0),void(e.innerHTML=t))},empty:Ae},function(e,t){fe.prototype[t]=function(t,n){var r,i,o=this.length;if(e!==Ae&&m(2==e.length&&e!==we&&e!==Se?t:n)){if(y(t)){for(r=0;o>r;r++)if(e===be)e(this[r],t);else for(i in t)e(this[r],i,t[i]);return this}for(r=e.$dv,o=m(r)?Math.min(o,1):o,i=0;o>i;i++){var a=e(this[i],t,n);r=r?r+a:a}return r}for(r=0;o>r;r++)e(this[r],t,n);return this}}),r({removeData:ye,on:function(e,t,n,r){if(v(r))throw xr("onargs");if(pe(e)){r=$e(e,!0);var i=r.events,o=r.handle;o||(o=r.handle=Ie(e,i)),r=0<=t.indexOf(" ")?t.split(" "):[t];for(var a=r.length,s=function(t,r,a){var s=i[t];s||(s=i[t]=[],s.specialHandlerWrapper=r,"$destroy"===t||a||e.addEventListener(t,o,!1)),s.push(n)};a--;)t=r[a],wr[t]?(s(wr[t],Re),s(t,void 0,!0)):s(t)}},off:ve,one:function(e,t,n){e=Vn(e),e.on(t,function r(){e.off(t,n),e.off(t,r)}),e.on(t,n)},replaceWith:function(e,t){var n,i=e.parentNode;me(e),r(new fe(t),function(t){n?i.insertBefore(t,n.nextSibling):i.replaceChild(t,e),n=t})},children:function(e){var t=[];return r(e.childNodes,function(e){1===e.nodeType&&t.push(e)}),t},contents:function(e){return e.contentDocument||e.childNodes||[]},append:function(e,t){var n=e.nodeType;if(1===n||11===n){t=new fe(t);for(var n=0,r=t.length;r>n;n++)e.appendChild(t[n]);
}},prepend:function(e,t){if(1===e.nodeType){var n=e.firstChild;r(new fe(t),function(t){e.insertBefore(t,n)})}},wrap:function(e,t){de(e,Vn(t).eq(0).clone()[0])},remove:Ne,detach:function(e){Ne(e,!0)},after:function(e,t){var n=e,r=e.parentNode;t=new fe(t);for(var i=0,o=t.length;o>i;i++){var a=t[i];r.insertBefore(a,n.nextSibling),n=a}},addClass:Ee,removeClass:xe,toggleClass:function(e,t,n){t&&r(t.split(" "),function(t){var r=n;m(r)&&(r=!we(e,t)),(r?Ee:xe)(e,t)})},parent:function(e){return(e=e.parentNode)&&11!==e.nodeType?e:null},next:function(e){return e.nextElementSibling},find:function(e,t){return e.getElementsByTagName?e.getElementsByTagName(t):[]},clone:ge,triggerHandler:function(e,t,n){var i,o,a=t.type||t,s=$e(e);(s=(s=s&&s.events)&&s[a])&&(i={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},stopPropagation:h,type:a,target:e},t.type&&(i=l(i,t)),t=M(s),o=n?[i].concat(n):[i],r(t,function(t){i.isImmediatePropagationStopped()||t.apply(e,o)}))}},function(e,t){fe.prototype[t]=function(t,n,r){for(var i,o=0,a=this.length;a>o;o++)m(i)?(i=e(this[o],t,n,r),v(i)&&(i=Vn(i))):Ce(i,e(this[o],t,n,r));return v(i)?i:this},fe.prototype.bind=fe.prototype.on,fe.prototype.unbind=fe.prototype.off}),_e.prototype={put:function(e,t){this[De(e,this.nextUid)]=t},get:function(e){return this[De(e,this.nextUid)]},remove:function(e){var t=this[e=De(e,this.nextUid)];return delete this[e],t}};var Rr=[function(){this.$get=[function(){return _e}]}],Mr=/^([^\(]+?)=>/,Dr=/^[^\(]*\(\s*([^\)]*)\)/m,_r=/,/,jr=/^\s*(_?)(\S+?)\1\s*$/,Pr=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,Fr=t("$injector");Fe.$$annotate=function(e,t,n){var i;if("function"==typeof e){if(!(i=e.$inject)){if(i=[],e.length){if(t)throw b(n)&&n||(n=e.name||Pe(e)),Fr("strictdi",n);t=je(e),r(t[1].split(_r),function(e){e.replace(jr,function(e,t,n){i.push(n)})})}e.$inject=i}}else or(e)?(t=e.length-1,re(e[t],"fn"),i=e.slice(0,t)):re(e,"fn",!0);return i};var qr=t("$animate"),Ur=function(){this.$get=h},Br=function(){var e=new _e,t=[];this.$get=["$$AnimateRunner","$rootScope",function(n,i){function o(e,t,n){var i=!1;return t&&(t=b(t)?t.split(" "):or(t)?t:[],r(t,function(t){t&&(i=!0,e[t]=n)})),i}function a(){r(t,function(t){var n=e.get(t);if(n){var i=Be(t.attr("class")),o="",a="";r(n,function(e,t){e!==!!i[t]&&(e?o+=(o.length?" ":"")+t:a+=(a.length?" ":"")+t)}),r(t,function(e){o&&Ee(e,o),a&&xe(e,a)}),e.remove(t)}}),t.length=0}return{enabled:h,on:h,off:h,pin:h,push:function(r,s,l,u){return u&&u(),l=l||{},l.from&&r.css(l.from),l.to&&r.css(l.to),(l.addClass||l.removeClass)&&(s=l.addClass,u=l.removeClass,l=e.get(r)||{},s=o(l,s,!0),u=o(l,u,!1),(s||u)&&(e.put(r,l),t.push(r),1===t.length&&i.$$postDigest(a))),r=new n,r.complete(),r}}}]},Hr=["$provide",function(e){var t=this;this.$$registeredAnimations=Object.create(null),this.register=function(n,r){if(n&&"."!==n.charAt(0))throw qr("notcsel",n);var i=n+"-animation";t.$$registeredAnimations[n.substr(1)]=i,e.factory(i,r)},this.classNameFilter=function(e){if(1===arguments.length&&(this.$$classNameFilter=e instanceof RegExp?e:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw qr("nongcls","ng-animate");return this.$$classNameFilter},this.$get=["$$animateQueue",function(e){function t(e,t,n){if(n){var r;e:{for(r=0;r<n.length;r++){var i=n[r];if(1===i.nodeType){r=i;break e}}r=void 0}!r||r.parentNode||r.previousElementSibling||(n=null)}n?n.after(e):t.prepend(e)}return{on:e.on,off:e.off,pin:e.pin,enabled:e.enabled,cancel:function(e){e.end&&e.end()},enter:function(n,r,i,o){return r=r&&Vn(r),i=i&&Vn(i),r=r||i.parent(),t(n,r,i),e.push(n,"enter",He(o))},move:function(n,r,i,o){return r=r&&Vn(r),i=i&&Vn(i),r=r||i.parent(),t(n,r,i),e.push(n,"move",He(o))},leave:function(t,n){return e.push(t,"leave",He(n),function(){t.remove()})},addClass:function(t,n,r){return r=He(r),r.addClass=Ue(r.addclass,n),e.push(t,"addClass",r)},removeClass:function(t,n,r){return r=He(r),r.removeClass=Ue(r.removeClass,n),e.push(t,"removeClass",r)},setClass:function(t,n,r,i){return i=He(i),i.addClass=Ue(i.addClass,n),i.removeClass=Ue(i.removeClass,r),e.push(t,"setClass",i)},animate:function(t,n,r,i,o){return o=He(o),o.from=o.from?l(o.from,n):n,o.to=o.to?l(o.to,r):r,o.tempClasses=Ue(o.tempClasses,i||"ng-inline-animate"),e.push(t,"animate",o)}}}]}],Vr=function(){this.$get=["$$rAF",function(e){function t(t){n.push(t),1<n.length||e(function(){for(var e=0;e<n.length;e++)n[e]();n=[]})}var n=[];return function(){var e=!1;return t(function(){e=!0}),function(n){e?n():t(n)}}}]},Gr=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(e,t,n,i,o){function a(e){this.setHost(e);var t=n();this._doneCallbacks=[],this._tick=function(e){var n=i[0];n&&n.hidden?o(e,0,!1):t(e)},this._state=0}return a.chain=function(e,t){function n(){r===e.length?t(!0):e[r](function(e){!1===e?t(!1):(r++,n())})}var r=0;n()},a.all=function(e,t){function n(n){o=o&&n,++i===e.length&&t(o)}var i=0,o=!0;r(e,function(e){e.done(n)})},a.prototype={setHost:function(e){this.host=e||{}},done:function(e){2===this._state?e():this._doneCallbacks.push(e)},progress:h,getPromise:function(){if(!this.promise){var t=this;this.promise=e(function(e,n){t.done(function(t){!1===t?n():e()})})}return this.promise},then:function(e,t){return this.getPromise().then(e,t)},"catch":function(e){return this.getPromise()["catch"](e)},"finally":function(e){return this.getPromise()["finally"](e)},pause:function(){this.host.pause&&this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end(),this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel(),this._resolve(!1)},complete:function(e){var t=this;0===t._state&&(t._state=1,t._tick(function(){t._resolve(e)}))},_resolve:function(e){2!==this._state&&(r(this._doneCallbacks,function(t){t(e)}),this._doneCallbacks.length=0,this._state=2)}},a}]},Wr=function(){this.$get=["$$rAF","$q","$$AnimateRunner",function(e,t,n){return function(t,r){function i(){return e(function(){o.addClass&&(t.addClass(o.addClass),o.addClass=null),o.removeClass&&(t.removeClass(o.removeClass),o.removeClass=null),o.to&&(t.css(o.to),o.to=null),a||s.complete(),a=!0}),s}var o=r||{};o.$$prepared||(o=R(o)),o.cleanupStyles&&(o.from=o.to=null),o.from&&(t.css(o.from),o.from=null);var a,s=new n;return{start:i,end:i}}}]},zr=t("$compile"),Kr=new function(){};Ke.$inject=["$provide","$$sanitizeUriProvider"],Ye.prototype.isFirstChange=function(){return this.previousValue===Kr};var Yr=/^((?:x|data)[\:\-_])/i,Xr=t("$controller"),Qr=/^(\S+)(\s+as\s+([\w$]+))?$/,Jr=function(){this.$get=["$document",function(e){return function(t){return t?!t.nodeType&&t instanceof Vn&&(t=t[0]):t=e[0].body,t.offsetWidth+1}}]},Zr="application/json",ei={"Content-Type":Zr+";charset=utf-8"},ti=/^\[|^\{(?!\{)/,ni={"[":/]$/,"{":/}$/},ri=/^\)\]\}',?\n/,ii=t("$http"),oi=function(e){return function(){throw ii("legacy",e)}},ai=rr.$interpolateMinErr=t("$interpolate");ai.throwNoconcat=function(e){throw ai("noconcat",e)},ai.interr=function(e,t){return ai("interr",e,t.toString())};var si=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,li={http:80,https:443,ftp:21},ui=t("$location"),ci={$$html5:!1,$$replace:!1,absUrl:St("$$absUrl"),url:function(e){if(m(e))return this.$$url;var t=si.exec(e);return(t[1]||""===e)&&this.path(decodeURIComponent(t[1])),(t[2]||t[1]||""===e)&&this.search(t[3]||""),this.hash(t[5]||""),this},protocol:St("$$protocol"),host:St("$$host"),port:St("$$port"),path:Tt("$$path",function(e){return e=null!==e?e.toString():"","/"==e.charAt(0)?e:"/"+e}),search:function(e,t){switch(arguments.length){case 0:return this.$$search;case 1:if(b(e)||w(e))e=e.toString(),this.$$search=G(e);else{if(!y(e))throw ui("isrcharg");e=R(e,{}),r(e,function(t,n){null==t&&delete e[n]}),this.$$search=e}break;default:m(t)||null===t?delete this.$$search[e]:this.$$search[e]=t}return this.$$compose(),this},hash:Tt("$$hash",function(e){return null!==e?e.toString():""}),replace:function(){return this.$$replace=!0,this}};r([Ct,Et,xt],function(e){e.prototype=Object.create(ci),e.prototype.state=function(t){if(!arguments.length)return this.$$state;if(e!==xt||!this.$$html5)throw ui("nostate");return this.$$state=m(t)?null:t,this}});var pi=t("$parse"),hi=Function.prototype.call,di=Function.prototype.apply,fi=Function.prototype.bind,gi=se();r("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(e){gi[e]=!0});var mi={n:"\n",f:"\f",r:"\r",t:"	",v:"\x0B","'":"'",'"':'"'},vi=function(e){this.options=e};vi.prototype={constructor:vi,lex:function(e){for(this.text=e,this.index=0,this.tokens=[];this.index<this.text.length;)if(e=this.text.charAt(this.index),'"'===e||"'"===e)this.readString(e);else if(this.isNumber(e)||"."===e&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdentifierStart(this.peekMultichar()))this.readIdent();else if(this.is(e,"(){}[].,;:?"))this.tokens.push({index:this.index,text:e}),this.index++;else if(this.isWhitespace(e))this.index++;else{var t=e+this.peek(),n=t+this.peek(2),r=gi[t],i=gi[n];gi[e]||r||i?(e=i?n:r?t:e,this.tokens.push({index:this.index,text:e,operator:!0}),this.index+=e.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(e,t){return-1!==t.indexOf(e)},peek:function(e){return e=e||1,this.index+e<this.text.length?this.text.charAt(this.index+e):!1},isNumber:function(e){return e>="0"&&"9">=e&&"string"==typeof e},isWhitespace:function(e){return" "===e||"\r"===e||"	"===e||"\n"===e||"\x0B"===e||" "===e},isIdentifierStart:function(e){return this.options.isIdentifierStart?this.options.isIdentifierStart(e,this.codePointAt(e)):this.isValidIdentifierStart(e)},isValidIdentifierStart:function(e){return e>="a"&&"z">=e||e>="A"&&"Z">=e||"_"===e||"$"===e},isIdentifierContinue:function(e){return this.options.isIdentifierContinue?this.options.isIdentifierContinue(e,this.codePointAt(e)):this.isValidIdentifierContinue(e)},isValidIdentifierContinue:function(e,t){return this.isValidIdentifierStart(e,t)||this.isNumber(e)},codePointAt:function(e){return 1===e.length?e.charCodeAt(0):(e.charCodeAt(0)<<10)+e.charCodeAt(1)-56613888},peekMultichar:function(){var e=this.text.charAt(this.index),t=this.peek();if(!t)return e;var n=e.charCodeAt(0),r=t.charCodeAt(0);return n>=55296&&56319>=n&&r>=56320&&57343>=r?e+t:e},isExpOperator:function(e){return"-"===e||"+"===e||this.isNumber(e)},throwError:function(e,t,n){throw n=n||this.index,t=v(t)?"s "+t+"-"+this.index+" ["+this.text.substring(t,n)+"]":" "+n,pi("lexerr",e,t,this.text)},readNumber:function(){for(var e="",t=this.index;this.index<this.text.length;){var n=Yn(this.text.charAt(this.index));if("."==n||this.isNumber(n))e+=n;else{var r=this.peek();if("e"==n&&this.isExpOperator(r))e+=n;else if(this.isExpOperator(n)&&r&&this.isNumber(r)&&"e"==e.charAt(e.length-1))e+=n;else{if(!this.isExpOperator(n)||r&&this.isNumber(r)||"e"!=e.charAt(e.length-1))break;this.throwError("Invalid exponent")}}this.index++}this.tokens.push({index:t,text:e,constant:!0,value:Number(e)})},readIdent:function(){var e=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var t=this.peekMultichar();if(!this.isIdentifierContinue(t))break;this.index+=t.length}this.tokens.push({index:e,text:this.text.slice(e,this.index),identifier:!0})},readString:function(e){var t=this.index;this.index++;for(var n="",r=e,i=!1;this.index<this.text.length;){var o=this.text.charAt(this.index),r=r+o;if(i)"u"===o?(i=this.text.substring(this.index+1,this.index+5),i.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+i+"]"),this.index+=4,n+=String.fromCharCode(parseInt(i,16))):n+=mi[o]||o,i=!1;else if("\\"===o)i=!0;else{if(o===e)return this.index++,void this.tokens.push({index:t,text:r,constant:!0,value:n});n+=o}this.index++}this.throwError("Unterminated quote",t)}};var yi=function(e,t){this.lexer=e,this.options=t};yi.Program="Program",yi.ExpressionStatement="ExpressionStatement",yi.AssignmentExpression="AssignmentExpression",yi.ConditionalExpression="ConditionalExpression",yi.LogicalExpression="LogicalExpression",yi.BinaryExpression="BinaryExpression",yi.UnaryExpression="UnaryExpression",yi.CallExpression="CallExpression",yi.MemberExpression="MemberExpression",yi.Identifier="Identifier",yi.Literal="Literal",yi.ArrayExpression="ArrayExpression",yi.Property="Property",yi.ObjectExpression="ObjectExpression",yi.ThisExpression="ThisExpression",yi.LocalsExpression="LocalsExpression",yi.NGValueParameter="NGValueParameter",yi.prototype={ast:function(e){return this.text=e,this.tokens=this.lexer.lex(e),e=this.program(),0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]),e},program:function(){for(var e=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&e.push(this.expressionStatement()),!this.expect(";"))return{type:yi.Program,body:e}},expressionStatement:function(){return{type:yi.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var e=this.expression();this.expect("|");)e=this.filter(e);return e},expression:function(){return this.assignment()},assignment:function(){var e=this.ternary();return this.expect("=")&&(e={type:yi.AssignmentExpression,left:e,right:this.assignment(),operator:"="}),e},ternary:function(){var e,t,n=this.logicalOR();return this.expect("?")&&(e=this.expression(),this.consume(":"))?(t=this.expression(),{type:yi.ConditionalExpression,test:n,alternate:e,consequent:t}):n},logicalOR:function(){for(var e=this.logicalAND();this.expect("||");)e={type:yi.LogicalExpression,operator:"||",left:e,right:this.logicalAND()};return e},logicalAND:function(){for(var e=this.equality();this.expect("&&");)e={type:yi.LogicalExpression,operator:"&&",left:e,right:this.equality()};return e},equality:function(){for(var e,t=this.relational();e=this.expect("==","!=","===","!==");)t={type:yi.BinaryExpression,operator:e.text,left:t,right:this.relational()};return t},relational:function(){for(var e,t=this.additive();e=this.expect("<",">","<=",">=");)t={type:yi.BinaryExpression,operator:e.text,left:t,right:this.additive()};return t},additive:function(){for(var e,t=this.multiplicative();e=this.expect("+","-");)t={type:yi.BinaryExpression,operator:e.text,left:t,right:this.multiplicative()};return t},multiplicative:function(){for(var e,t=this.unary();e=this.expect("*","/","%");)t={type:yi.BinaryExpression,operator:e.text,left:t,right:this.unary()};return t},unary:function(){var e;return(e=this.expect("+","-","!"))?{type:yi.UnaryExpression,operator:e.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var e;this.expect("(")?(e=this.filterChain(),this.consume(")")):this.expect("[")?e=this.arrayDeclaration():this.expect("{")?e=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?e=R(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?e={type:yi.Literal,value:this.options.literals[this.consume().text]}:this.peek().identifier?e=this.identifier():this.peek().constant?e=this.constant():this.throwError("not a primary expression",this.peek());for(var t;t=this.expect("(","[",".");)"("===t.text?(e={type:yi.CallExpression,callee:e,arguments:this.parseArguments()},this.consume(")")):"["===t.text?(e={type:yi.MemberExpression,object:e,property:this.expression(),computed:!0},this.consume("]")):"."===t.text?e={type:yi.MemberExpression,object:e,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return e},filter:function(e){e=[e];for(var t={type:yi.CallExpression,callee:this.identifier(),arguments:e,filter:!0};this.expect(":");)e.push(this.expression());return t},parseArguments:function(){var e=[];if(")"!==this.peekToken().text)do e.push(this.expression());while(this.expect(","));return e},identifier:function(){var e=this.consume();return e.identifier||this.throwError("is not a valid identifier",e),{type:yi.Identifier,name:e.text}},constant:function(){return{type:yi.Literal,value:this.consume().value}},arrayDeclaration:function(){var e=[];if("]"!==this.peekToken().text)do{if(this.peek("]"))break;e.push(this.expression())}while(this.expect(","));return this.consume("]"),{type:yi.ArrayExpression,elements:e}},object:function(){var e,t=[];if("}"!==this.peekToken().text)do{if(this.peek("}"))break;e={type:yi.Property,kind:"init"},this.peek().constant?e.key=this.constant():this.peek().identifier?e.key=this.identifier():this.throwError("invalid key",this.peek()),this.consume(":"),e.value=this.expression(),t.push(e)}while(this.expect(","));return this.consume("}"),{type:yi.ObjectExpression,properties:t}},throwError:function(e,t){throw pi("syntax",t.text,e,t.index+1,this.text,this.text.substring(t.index))},consume:function(e){if(0===this.tokens.length)throw pi("ueoe",this.text);var t=this.expect(e);return t||this.throwError("is unexpected, expecting ["+e+"]",this.peek()),t},peekToken:function(){if(0===this.tokens.length)throw pi("ueoe",this.text);return this.tokens[0]},peek:function(e,t,n,r){return this.peekAhead(0,e,t,n,r)},peekAhead:function(e,t,n,r,i){if(this.tokens.length>e){e=this.tokens[e];var o=e.text;if(o===t||o===n||o===r||o===i||!(t||n||r||i))return e}return!1},expect:function(e,t,n,r){return(e=this.peek(e,t,n,r))?(this.tokens.shift(),e):!1},selfReferential:{"this":{type:yi.ThisExpression},$locals:{type:yi.LocalsExpression}}},Ut.prototype={compile:function(e,t){var n=this,i=this.astBuilder.ast(e);this.state={nextId:0,filters:{},expensiveChecks:t,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]},_t(i,n.$filter);var o,a="";return this.stage="assign",(o=Ft(i))&&(this.state.computing="assign",a=this.nextId(),this.recurse(o,a),this.return_(a),a="fn.assign="+this.generateFunction("assign","s,v,l")),o=jt(i.body),n.stage="inputs",r(o,function(e,t){var r="fn"+t;n.state[r]={vars:[],body:[],own:{}},n.state.computing=r;var i=n.nextId();n.recurse(e,i),n.return_(i),n.state.inputs.push(r),e.watchId=t}),this.state.computing="fn",this.stage="main",this.recurse(i),a='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+a+this.watchFns()+"return fn;",a=new Function("$filter","ensureSafeMemberName","ensureSafeObject","ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",a)(this.$filter,Lt,It,kt,Ot,Rt,Mt,Dt,e),this.state=this.stage=void 0,a.literal=qt(i),a.constant=i.constant,a},USE:"use",STRICT:"strict",watchFns:function(){var e=[],t=this.state.inputs,n=this;return r(t,function(t){e.push("var "+t+"="+n.generateFunction(t,"s"))}),t.length&&e.push("fn.inputs=["+t.join(",")+"];"),e.join("")},generateFunction:function(e,t){return"function("+t+"){"+this.varsPrefix(e)+this.body(e)+"};"},filterPrefix:function(){var e=[],t=this;return r(this.state.filters,function(n,r){e.push(n+"=$filter("+t.escape(r)+")")}),e.length?"var "+e.join(",")+";":""},varsPrefix:function(e){return this.state[e].vars.length?"var "+this.state[e].vars.join(",")+";":""},body:function(e){return this.state[e].body.join("")},recurse:function(e,t,n,i,o,a){var s,l,u,c,p=this;if(i=i||h,!a&&v(e.watchId))t=t||this.nextId(),this.if_("i",this.lazyAssign(t,this.computedMember("i",e.watchId)),this.lazyRecurse(e,t,n,i,o,!0));else switch(e.type){case yi.Program:r(e.body,function(t,n){p.recurse(t.expression,void 0,void 0,function(e){l=e}),n!==e.body.length-1?p.current().body.push(l,";"):p.return_(l)});break;case yi.Literal:c=this.escape(e.value),this.assign(t,c),i(c);break;case yi.UnaryExpression:this.recurse(e.argument,void 0,void 0,function(e){l=e}),c=e.operator+"("+this.ifDefined(l,0)+")",this.assign(t,c),i(c);break;case yi.BinaryExpression:this.recurse(e.left,void 0,void 0,function(e){s=e}),this.recurse(e.right,void 0,void 0,function(e){l=e}),c="+"===e.operator?this.plus(s,l):"-"===e.operator?this.ifDefined(s,0)+e.operator+this.ifDefined(l,0):"("+s+")"+e.operator+"("+l+")",this.assign(t,c),i(c);break;case yi.LogicalExpression:t=t||this.nextId(),p.recurse(e.left,t),p.if_("&&"===e.operator?t:p.not(t),p.lazyRecurse(e.right,t)),i(t);break;case yi.ConditionalExpression:t=t||this.nextId(),p.recurse(e.test,t),p.if_(t,p.lazyRecurse(e.alternate,t),p.lazyRecurse(e.consequent,t)),i(t);break;case yi.Identifier:t=t||this.nextId(),n&&(n.context="inputs"===p.stage?"s":this.assign(this.nextId(),this.getHasOwnProperty("l",e.name)+"?l:s"),n.computed=!1,n.name=e.name),Lt(e.name),p.if_("inputs"===p.stage||p.not(p.getHasOwnProperty("l",e.name)),function(){p.if_("inputs"===p.stage||"s",function(){o&&1!==o&&p.if_(p.not(p.nonComputedMember("s",e.name)),p.lazyAssign(p.nonComputedMember("s",e.name),"{}")),p.assign(t,p.nonComputedMember("s",e.name))})},t&&p.lazyAssign(t,p.nonComputedMember("l",e.name))),(p.state.expensiveChecks||Ht(e.name))&&p.addEnsureSafeObject(t),i(t);break;case yi.MemberExpression:s=n&&(n.context=this.nextId())||this.nextId(),t=t||this.nextId(),p.recurse(e.object,s,void 0,function(){p.if_(p.notNull(s),function(){o&&1!==o&&p.addEnsureSafeAssignContext(s),e.computed?(l=p.nextId(),p.recurse(e.property,l),p.getStringValue(l),p.addEnsureSafeMemberName(l),o&&1!==o&&p.if_(p.not(p.computedMember(s,l)),p.lazyAssign(p.computedMember(s,l),"{}")),c=p.ensureSafeObject(p.computedMember(s,l)),p.assign(t,c),n&&(n.computed=!0,n.name=l)):(Lt(e.property.name),o&&1!==o&&p.if_(p.not(p.nonComputedMember(s,e.property.name)),p.lazyAssign(p.nonComputedMember(s,e.property.name),"{}")),c=p.nonComputedMember(s,e.property.name),(p.state.expensiveChecks||Ht(e.property.name))&&(c=p.ensureSafeObject(c)),p.assign(t,c),n&&(n.computed=!1,n.name=e.property.name))},function(){p.assign(t,"undefined")}),i(t)},!!o);break;case yi.CallExpression:t=t||this.nextId(),e.filter?(l=p.filter(e.callee.name),u=[],r(e.arguments,function(e){var t=p.nextId();p.recurse(e,t),u.push(t)}),c=l+"("+u.join(",")+")",p.assign(t,c),i(t)):(l=p.nextId(),s={},u=[],p.recurse(e.callee,l,s,function(){p.if_(p.notNull(l),function(){p.addEnsureSafeFunction(l),r(e.arguments,function(e){p.recurse(e,p.nextId(),void 0,function(e){u.push(p.ensureSafeObject(e))})}),s.name?(p.state.expensiveChecks||p.addEnsureSafeObject(s.context),c=p.member(s.context,s.name,s.computed)+"("+u.join(",")+")"):c=l+"("+u.join(",")+")",c=p.ensureSafeObject(c),p.assign(t,c)},function(){p.assign(t,"undefined")}),i(t)}));break;case yi.AssignmentExpression:if(l=this.nextId(),s={},!Pt(e.left))throw pi("lval");this.recurse(e.left,void 0,s,function(){p.if_(p.notNull(s.context),function(){p.recurse(e.right,l),p.addEnsureSafeObject(p.member(s.context,s.name,s.computed)),p.addEnsureSafeAssignContext(s.context),c=p.member(s.context,s.name,s.computed)+e.operator+l,p.assign(t,c),i(t||c)})},1);break;case yi.ArrayExpression:u=[],r(e.elements,function(e){p.recurse(e,p.nextId(),void 0,function(e){u.push(e)})}),c="["+u.join(",")+"]",this.assign(t,c),i(c);break;case yi.ObjectExpression:u=[],r(e.properties,function(e){p.recurse(e.value,p.nextId(),void 0,function(t){u.push(p.escape(e.key.type===yi.Identifier?e.key.name:""+e.key.value)+":"+t)})}),c="{"+u.join(",")+"}",this.assign(t,c),i(c);break;case yi.ThisExpression:this.assign(t,"s"),i("s");break;case yi.LocalsExpression:this.assign(t,"l"),i("l");break;case yi.NGValueParameter:this.assign(t,"v"),i("v")}},getHasOwnProperty:function(e,t){var n=e+"."+t,r=this.current().own;return r.hasOwnProperty(n)||(r[n]=this.nextId(!1,e+"&&("+this.escape(t)+" in "+e+")")),r[n]},assign:function(e,t){return e?(this.current().body.push(e,"=",t,";"),e):void 0},filter:function(e){return this.state.filters.hasOwnProperty(e)||(this.state.filters[e]=this.nextId(!0)),this.state.filters[e]},ifDefined:function(e,t){return"ifDefined("+e+","+this.escape(t)+")"},plus:function(e,t){return"plus("+e+","+t+")"},return_:function(e){this.current().body.push("return ",e,";")},if_:function(e,t,n){if(!0===e)t();else{var r=this.current().body;r.push("if(",e,"){"),t(),r.push("}"),n&&(r.push("else{"),n(),r.push("}"))}},not:function(e){return"!("+e+")"},notNull:function(e){return e+"!=null"},nonComputedMember:function(e,t){var n=/[^$_a-zA-Z0-9]/g;return/[$_a-zA-Z][$_a-zA-Z0-9]*/.test(t)?e+"."+t:e+'["'+t.replace(n,this.stringEscapeFn)+'"]'},computedMember:function(e,t){return e+"["+t+"]"},member:function(e,t,n){return n?this.computedMember(e,t):this.nonComputedMember(e,t)},addEnsureSafeObject:function(e){this.current().body.push(this.ensureSafeObject(e),";")},addEnsureSafeMemberName:function(e){this.current().body.push(this.ensureSafeMemberName(e),";")},addEnsureSafeFunction:function(e){this.current().body.push(this.ensureSafeFunction(e),";")},addEnsureSafeAssignContext:function(e){this.current().body.push(this.ensureSafeAssignContext(e),";")},ensureSafeObject:function(e){return"ensureSafeObject("+e+",text)"},ensureSafeMemberName:function(e){return"ensureSafeMemberName("+e+",text)"},ensureSafeFunction:function(e){return"ensureSafeFunction("+e+",text)"},getStringValue:function(e){this.assign(e,"getStringValue("+e+")")},ensureSafeAssignContext:function(e){return"ensureSafeAssignContext("+e+",text)"},lazyRecurse:function(e,t,n,r,i,o){var a=this;return function(){a.recurse(e,t,n,r,i,o)}},lazyAssign:function(e,t){var n=this;return function(){n.assign(e,t)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)},escape:function(e){if(b(e))return"'"+e.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(w(e))return e.toString();if(!0===e)return"true";if(!1===e)return"false";if(null===e)return"null";if("undefined"==typeof e)return"undefined";throw pi("esc")},nextId:function(e,t){var n="v"+this.state.nextId++;return e||this.current().vars.push(n+(t?"="+t:"")),n},current:function(){return this.state[this.state.computing]}},Bt.prototype={compile:function(e,t){var n=this,i=this.astBuilder.ast(e);this.expression=e,this.expensiveChecks=t,_t(i,n.$filter);var o,a;(o=Ft(i))&&(a=this.recurse(o)),o=jt(i.body);var s;o&&(s=[],r(o,function(e,t){var r=n.recurse(e);e.input=r,s.push(r),e.watchId=t}));var l=[];return r(i.body,function(e){l.push(n.recurse(e.expression))}),o=0===i.body.length?h:1===i.body.length?l[0]:function(e,t){var n;return r(l,function(r){n=r(e,t)}),n},a&&(o.assign=function(e,t,n){return a(e,n,t)}),s&&(o.inputs=s),o.literal=qt(i),o.constant=i.constant,o},recurse:function(e,t,n){var i,o,a,s=this;if(e.input)return this.inputs(e.input,e.watchId);switch(e.type){case yi.Literal:return this.value(e.value,t);case yi.UnaryExpression:return o=this.recurse(e.argument),this["unary"+e.operator](o,t);case yi.BinaryExpression:return i=this.recurse(e.left),o=this.recurse(e.right),this["binary"+e.operator](i,o,t);case yi.LogicalExpression:return i=this.recurse(e.left),o=this.recurse(e.right),this["binary"+e.operator](i,o,t);case yi.ConditionalExpression:return this["ternary?:"](this.recurse(e.test),this.recurse(e.alternate),this.recurse(e.consequent),t);case yi.Identifier:return Lt(e.name,s.expression),s.identifier(e.name,s.expensiveChecks||Ht(e.name),t,n,s.expression);case yi.MemberExpression:return i=this.recurse(e.object,!1,!!n),e.computed||(Lt(e.property.name,s.expression),o=e.property.name),e.computed&&(o=this.recurse(e.property)),e.computed?this.computedMember(i,o,t,n,s.expression):this.nonComputedMember(i,o,s.expensiveChecks,t,n,s.expression);case yi.CallExpression:return a=[],r(e.arguments,function(e){a.push(s.recurse(e))}),e.filter&&(o=this.$filter(e.callee.name)),e.filter||(o=this.recurse(e.callee,!0)),e.filter?function(e,n,r,i){for(var s=[],l=0;l<a.length;++l)s.push(a[l](e,n,r,i));return e=o.apply(void 0,s,i),t?{context:void 0,name:void 0,value:e}:e}:function(e,n,r,i){var l,u=o(e,n,r,i);if(null!=u.value){It(u.context,s.expression),kt(u.value,s.expression),l=[];for(var c=0;c<a.length;++c)l.push(It(a[c](e,n,r,i),s.expression));l=It(u.value.apply(u.context,l),s.expression)}return t?{value:l}:l};case yi.AssignmentExpression:return i=this.recurse(e.left,!0,1),o=this.recurse(e.right),function(e,n,r,a){var l=i(e,n,r,a);return e=o(e,n,r,a),It(l.value,s.expression),Rt(l.context),l.context[l.name]=e,t?{value:e}:e};case yi.ArrayExpression:return a=[],r(e.elements,function(e){a.push(s.recurse(e))}),function(e,n,r,i){for(var o=[],s=0;s<a.length;++s)o.push(a[s](e,n,r,i));return t?{value:o}:o};case yi.ObjectExpression:return a=[],r(e.properties,function(e){a.push({key:e.key.type===yi.Identifier?e.key.name:""+e.key.value,value:s.recurse(e.value)})}),function(e,n,r,i){for(var o={},s=0;s<a.length;++s)o[a[s].key]=a[s].value(e,n,r,i);return t?{value:o}:o};case yi.ThisExpression:return function(e){return t?{value:e}:e};case yi.LocalsExpression:return function(e,n){return t?{value:n}:n};case yi.NGValueParameter:return function(e,n,r){return t?{value:r}:r}}},"unary+":function(e,t){return function(n,r,i,o){return n=e(n,r,i,o),n=v(n)?+n:0,t?{value:n}:n}},"unary-":function(e,t){return function(n,r,i,o){return n=e(n,r,i,o),n=v(n)?-n:0,t?{value:n}:n}},"unary!":function(e,t){return function(n,r,i,o){return n=!e(n,r,i,o),t?{value:n}:n}},"binary+":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a);return r=t(r,i,o,a),s=Dt(s,r),n?{value:s}:s}},"binary-":function(e,t,n){return function(r,i,o,a){var s=e(r,i,o,a);return r=t(r,i,o,a),s=(v(s)?s:0)-(v(r)?r:0),n?{value:s}:s}},"binary*":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)*t(r,i,o,a),n?{value:r}:r}},"binary/":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)/t(r,i,o,a),n?{value:r}:r}},"binary%":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)%t(r,i,o,a),n?{value:r}:r}},"binary===":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)===t(r,i,o,a),n?{value:r}:r}},"binary!==":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)!==t(r,i,o,a),n?{value:r}:r}},"binary==":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)==t(r,i,o,a),n?{value:r}:r}},"binary!=":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)!=t(r,i,o,a),n?{value:r}:r}},"binary<":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)<t(r,i,o,a),n?{value:r}:r}},"binary>":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)>t(r,i,o,a),n?{value:r}:r}},"binary<=":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)<=t(r,i,o,a),n?{value:r}:r}},"binary>=":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)>=t(r,i,o,a),n?{value:r}:r}},"binary&&":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)&&t(r,i,o,a),n?{value:r}:r}},"binary||":function(e,t,n){return function(r,i,o,a){return r=e(r,i,o,a)||t(r,i,o,a),n?{value:r}:r}},"ternary?:":function(e,t,n,r){return function(i,o,a,s){return i=e(i,o,a,s)?t(i,o,a,s):n(i,o,a,s),r?{value:i}:i}},value:function(e,t){return function(){return t?{context:void 0,name:void 0,value:e}:e}},identifier:function(e,t,n,r,i){return function(o,a,s,l){return o=a&&e in a?a:o,r&&1!==r&&o&&!o[e]&&(o[e]={}),a=o?o[e]:void 0,t&&It(a,i),n?{context:o,name:e,value:a}:a}},computedMember:function(e,t,n,r,i){return function(o,a,s,l){var u,c,p=e(o,a,s,l);return null!=p&&(u=t(o,a,s,l),u+="",Lt(u,i),r&&1!==r&&(Rt(p),p&&!p[u]&&(p[u]={})),c=p[u],It(c,i)),n?{context:p,name:u,value:c}:c}},nonComputedMember:function(e,t,n,r,i,o){return function(a,s,l,u){return a=e(a,s,l,u),i&&1!==i&&(Rt(a),a&&!a[t]&&(a[t]={})),s=null!=a?a[t]:void 0,(n||Ht(t))&&It(s,o),r?{context:a,name:t,value:s}:s}},inputs:function(e,t){return function(n,r,i,o){return o?o[t]:e(n,r,i)}}};var $i=function(e,t,n){this.lexer=e,this.$filter=t,this.options=n,this.ast=new yi(e,n),this.astCompiler=n.csp?new Bt(this.ast,t):new Ut(this.ast,t)};$i.prototype={constructor:$i,parse:function(e){return this.astCompiler.compile(e,this.options.expensiveChecks)}};var bi=Object.prototype.valueOf,wi=t("$sce"),xi={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Ei=t("$compile"),Ci=e.document.createElement("a"),Si=sn(e.location.href);cn.$inject=["$document"],hn.$inject=["$provide"];var Ti=22,Ai=".",Ni="0";
vn.$inject=["$locale"],yn.$inject=["$locale"];var Li={yyyy:En("FullYear",4,0,!1,!0),yy:En("FullYear",2,0,!0,!0),y:En("FullYear",1,0,!1,!0),MMMM:Cn("Month"),MMM:Cn("Month",!0),MM:En("Month",2,1),M:En("Month",1,1),LLLL:Cn("Month",!1,!0),dd:En("Date",2),d:En("Date",1),HH:En("Hours",2),H:En("Hours",1),hh:En("Hours",2,-12),h:En("Hours",1,-12),mm:En("Minutes",2),m:En("Minutes",1),ss:En("Seconds",2),s:En("Seconds",1),sss:En("Milliseconds",3),EEEE:Cn("Day"),EEE:Cn("Day",!0),a:function(e,t){return 12>e.getHours()?t.AMPMS[0]:t.AMPMS[1]},Z:function(e,t,n){return e=-1*n,e=(e>=0?"+":"")+(xn(Math[e>0?"floor":"ceil"](e/60),2)+xn(Math.abs(e%60),2))},ww:Tn(2),w:Tn(1),G:An,GG:An,GGG:An,GGGG:function(e,t){return 0>=e.getFullYear()?t.ERANAMES[0]:t.ERANAMES[1]}},Oi=/((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,Ii=/^\-?\d+$/;Nn.$inject=["$locale"];var ki=f(Yn),Ri=f(Xn);In.$inject=["$parse"];var Mi=f({restrict:"E",compile:function(e,t){return t.href||t.xlinkHref?void 0:function(e,t){if("a"===t[0].nodeName.toLowerCase()){var n="[object SVGAnimatedString]"===er.call(t.prop("href"))?"xlink:href":"href";t.on("click",function(e){t.attr(n)||e.preventDefault()})}}}}),Di={};r(Or,function(e,t){function n(e,n,i){e.$watch(i[r],function(e){i.$set(t,!!e)})}if("multiple"!=e){var r=Xe("ng-"+t),i=n;"checked"===e&&(i=function(e,t,i){i.ngModel!==i[r]&&n(e,t,i)}),Di[r]=function(){return{restrict:"A",priority:100,link:i}}}}),r(kr,function(e,t){Di[t]=function(){return{priority:100,link:function(e,n,r){return"ngPattern"===t&&"/"==r.ngPattern.charAt(0)&&(n=r.ngPattern.match(zn))?void r.$set("ngPattern",new RegExp(n[1],n[2])):void e.$watch(r[t],function(e){r.$set(t,e)})}}}}),r(["src","srcset","href"],function(e){var t=Xe("ng-"+e);Di[t]=function(){return{priority:99,link:function(n,r,i){var o=e,a=e;"href"===e&&"[object SVGAnimatedString]"===er.call(r.prop("href"))&&(a="xlinkHref",i.$attr[a]="xlink:href",o=null),i.$observe(t,function(t){t?(i.$set(a,t),Hn&&o&&r.prop(o,i[a])):"href"===e&&i.$set(a,null)})}}}});var _i={$addControl:h,$$renameControl:function(e,t){e.$name=t},$removeControl:h,$setValidity:h,$setDirty:h,$setPristine:h,$setSubmitted:h};Rn.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var ji=function(e){return["$timeout","$parse",function(t,n){function r(e){return""===e?n('this[""]').assign:n(e).assign||h}return{name:"form",restrict:e?"EAC":"E",require:["form","^^?form"],controller:Rn,compile:function(n,i){n.addClass($o).addClass(vo);var o=i.name?"name":e&&i.ngForm?"ngForm":!1;return{pre:function(e,n,i,a){var s=a[0];if(!("action"in i)){var u=function(t){e.$apply(function(){s.$commitViewValue(),s.$setSubmitted()}),t.preventDefault()};n[0].addEventListener("submit",u,!1),n.on("$destroy",function(){t(function(){n[0].removeEventListener("submit",u,!1)},0,!1)})}(a[1]||s.$$parentForm).$addControl(s);var c=o?r(s.$name):h;o&&(c(e,s),i.$observe(o,function(t){s.$name!==t&&(c(e,void 0),s.$$parentForm.$$renameControl(s,t),(c=r(s.$name))(e,s))})),n.on("$destroy",function(){s.$$parentForm.$removeControl(s),c(e,void 0),l(s,_i)})}}}}}]},Pi=ji(),Fi=ji(!0),qi=/^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,Ui=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Bi=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,Hi=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Vi=/^(\d{4,})-(\d{2})-(\d{2})$/,Gi=/^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Wi=/^(\d{4,})-W(\d\d)$/,zi=/^(\d{4,})-(\d\d)$/,Ki=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Yi=se();r(["date","datetime-local","month","time","week"],function(e){Yi[e]=!0});var Xi={text:function(e,t,n,r,i,o){Dn(e,t,n,r,i,o),Mn(r)},date:jn("date",Vi,_n(Vi,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":jn("datetimelocal",Gi,_n(Gi,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:jn("time",Ki,_n(Ki,["HH","mm","ss","sss"]),"HH:mm:ss.sss"),week:jn("week",Wi,function(e,t){if(x(e))return e;if(b(e)){Wi.lastIndex=0;var n=Wi.exec(e);if(n){var r=+n[1],i=+n[2],o=n=0,a=0,s=0,l=Sn(r),i=7*(i-1);return t&&(n=t.getHours(),o=t.getMinutes(),a=t.getSeconds(),s=t.getMilliseconds()),new Date(r,0,l.getDate()+i,n,o,a,s)}}return NaN},"yyyy-Www"),month:jn("month",zi,_n(zi,["yyyy","MM"]),"yyyy-MM"),number:function(e,t,n,r,i,o){if(Pn(e,t,n,r),Dn(e,t,n,r,i,o),r.$$parserName="number",r.$parsers.push(function(e){return r.$isEmpty(e)?null:Hi.test(e)?parseFloat(e):void 0}),r.$formatters.push(function(e){if(!r.$isEmpty(e)){if(!w(e))throw xo("numfmt",e);e=e.toString()}return e}),v(n.min)||n.ngMin){var a;r.$validators.min=function(e){return r.$isEmpty(e)||m(a)||e>=a},n.$observe("min",function(e){v(e)&&!w(e)&&(e=parseFloat(e,10)),a=w(e)&&!isNaN(e)?e:void 0,r.$validate()})}if(v(n.max)||n.ngMax){var s;r.$validators.max=function(e){return r.$isEmpty(e)||m(s)||s>=e},n.$observe("max",function(e){v(e)&&!w(e)&&(e=parseFloat(e,10)),s=w(e)&&!isNaN(e)?e:void 0,r.$validate()})}},url:function(e,t,n,r,i,o){Dn(e,t,n,r,i,o),Mn(r),r.$$parserName="url",r.$validators.url=function(e,t){var n=e||t;return r.$isEmpty(n)||Ui.test(n)}},email:function(e,t,n,r,i,o){Dn(e,t,n,r,i,o),Mn(r),r.$$parserName="email",r.$validators.email=function(e,t){var n=e||t;return r.$isEmpty(n)||Bi.test(n)}},radio:function(e,t,n,r){m(n.name)&&t.attr("name",++ir),t.on("click",function(e){t[0].checked&&r.$setViewValue(n.value,e&&e.type)}),r.$render=function(){t[0].checked=n.value==r.$viewValue},n.$observe("value",r.$render)},checkbox:function(e,t,n,r,i,o,a,s){var l=Fn(s,e,"ngTrueValue",n.ngTrueValue,!0),u=Fn(s,e,"ngFalseValue",n.ngFalseValue,!1);t.on("click",function(e){r.$setViewValue(t[0].checked,e&&e.type)}),r.$render=function(){t[0].checked=r.$viewValue},r.$isEmpty=function(e){return!1===e},r.$formatters.push(function(e){return D(e,l)}),r.$parsers.push(function(e){return e?l:u})},hidden:h,button:h,submit:h,reset:h,file:h},Qi=["$browser","$sniffer","$filter","$parse",function(e,t,n,r){return{restrict:"E",require:["?ngModel"],link:{pre:function(i,o,a,s){s[0]&&(Xi[Yn(a.type)]||Xi.text)(i,o,a,s[0],t,e,n,r)}}}}],Ji=/^(true|false|\d+)$/,Zi=function(){return{restrict:"A",priority:100,compile:function(e,t){return Ji.test(t.ngValue)?function(e,t,n){n.$set("value",e.$eval(n.ngValue))}:function(e,t,n){e.$watch(n.ngValue,function(e){n.$set("value",e)})}}}},eo=["$compile",function(e){return{restrict:"AC",compile:function(t){return e.$$addBindingClass(t),function(t,n,r){e.$$addBindingInfo(n,r.ngBind),n=n[0],t.$watch(r.ngBind,function(e){n.textContent=m(e)?"":e})}}}}],to=["$interpolate","$compile",function(e,t){return{compile:function(n){return t.$$addBindingClass(n),function(n,r,i){n=e(r.attr(i.$attr.ngBindTemplate)),t.$$addBindingInfo(r,n.expressions),r=r[0],i.$observe("ngBindTemplate",function(e){r.textContent=m(e)?"":e})}}}}],no=["$sce","$parse","$compile",function(e,t,n){return{restrict:"A",compile:function(r,i){var o=t(i.ngBindHtml),a=t(i.ngBindHtml,function(e){return(e||"").toString()});return n.$$addBindingClass(r),function(t,r,i){n.$$addBindingInfo(r,i.ngBindHtml),t.$watch(a,function(){r.html(e.getTrustedHtml(o(t))||"")})}}}}],ro=f({restrict:"A",require:"ngModel",link:function(e,t,n,r){r.$viewChangeListeners.push(function(){e.$eval(n.ngChange)})}}),io=qn("",!0),oo=qn("Odd",0),ao=qn("Even",1),so=kn({compile:function(e,t){t.$set("ngCloak",void 0),e.removeClass("ng-cloak")}}),lo=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],uo={},co={blur:!0,focus:!0};r("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),function(e){var t=Xe("ng-"+e);uo[t]=["$parse","$rootScope",function(n,r){return{restrict:"A",compile:function(i,o){var a=n(o[t],null,!0);return function(t,n){n.on(e,function(n){var i=function(){a(t,{$event:n})};co[e]&&r.$$phase?t.$evalAsync(i):t.$apply(i)})}}}}]});var po=["$animate","$compile",function(e,t){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(n,r,i,o,a){var s,l,u;n.$watch(i.ngIf,function(n){n?l||a(function(n,o){l=o,n[n.length++]=t.$$createComment("end ngIf",i.ngIf),s={clone:n},e.enter(n,r.parent(),r)}):(u&&(u.remove(),u=null),l&&(l.$destroy(),l=null),s&&(u=ae(s.clone),e.leave(u).then(function(){u=null}),s=null))})}}}],ho=["$templateRequest","$anchorScroll","$animate",function(e,t,n){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:rr.noop,compile:function(r,i){var o=i.ngInclude||i.src,a=i.onload||"",s=i.autoscroll;return function(r,i,l,u,c){var p,h,d,f=0,g=function(){h&&(h.remove(),h=null),p&&(p.$destroy(),p=null),d&&(n.leave(d).then(function(){h=null}),h=d,d=null)};r.$watch(o,function(o){var l=function(){!v(s)||s&&!r.$eval(s)||t()},h=++f;o?(e(o,!0).then(function(e){if(!r.$$destroyed&&h===f){var t=r.$new();u.template=e,e=c(t,function(e){g(),n.enter(e,null,i).then(l)}),p=t,d=e,p.$emit("$includeContentLoaded",o),r.$eval(a)}},function(){r.$$destroyed||h!==f||(g(),r.$emit("$includeContentError",o))}),r.$emit("$includeContentRequested",o)):(g(),u.template=null)})}}}}],fo=["$compile",function(t){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(n,r,i,o){er.call(r[0]).match(/SVG/)?(r.empty(),t(he(o.template,e.document).childNodes)(n,function(e){r.append(e)},{futureParentElement:r})):(r.html(o.template),t(r.contents())(n))}}}],go=kn({priority:450,compile:function(){return{pre:function(e,t,n){e.$eval(n.ngInit)}}}}),mo=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(e,t,n,i){var o=t.attr(n.$attr.ngList)||", ",a="false"!==n.ngTrim,s=a?sr(o):o;i.$parsers.push(function(e){if(!m(e)){var t=[];return e&&r(e.split(s),function(e){e&&t.push(a?sr(e):e)}),t}}),i.$formatters.push(function(e){return or(e)?e.join(o):void 0}),i.$isEmpty=function(e){return!e||!e.length}}}},vo="ng-valid",yo="ng-invalid",$o="ng-pristine",bo="ng-dirty",wo="ng-pending",xo=t("ngModel"),Eo=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(e,t,n,i,o,a,s,l,u,c){this.$modelValue=this.$viewValue=Number.NaN,this.$$rawModelValue=void 0,this.$validators={},this.$asyncValidators={},this.$parsers=[],this.$formatters=[],this.$viewChangeListeners=[],this.$untouched=!0,this.$touched=!1,this.$pristine=!0,this.$dirty=!1,this.$valid=!0,this.$invalid=!1,this.$error={},this.$$success={},this.$pending=void 0,this.$name=c(n.name||"",!1)(e),this.$$parentForm=_i;var p,d=o(n.ngModel),f=d.assign,g=d,y=f,$=null,b=this;this.$$setOptions=function(e){if((b.$options=e)&&e.getterSetter){var t=o(n.ngModel+"()"),r=o(n.ngModel+"($$$p)");g=function(e){var n=d(e);return E(n)&&(n=t(e)),n},y=function(e,t){E(d(e))?r(e,{$$$p:t}):f(e,t)}}else if(!d.assign)throw xo("nonassign",n.ngModel,H(i))},this.$render=h,this.$isEmpty=function(e){return m(e)||""===e||null===e||e!==e},this.$$updateEmptyClasses=function(e){b.$isEmpty(e)?(a.removeClass(i,"ng-not-empty"),a.addClass(i,"ng-empty")):(a.removeClass(i,"ng-empty"),a.addClass(i,"ng-not-empty"))};var x=0;Un({ctrl:this,$element:i,set:function(e,t){e[t]=!0},unset:function(e,t){delete e[t]},$animate:a}),this.$setPristine=function(){b.$dirty=!1,b.$pristine=!0,a.removeClass(i,bo),a.addClass(i,$o)},this.$setDirty=function(){b.$dirty=!0,b.$pristine=!1,a.removeClass(i,$o),a.addClass(i,bo),b.$$parentForm.$setDirty()},this.$setUntouched=function(){b.$touched=!1,b.$untouched=!0,a.setClass(i,"ng-untouched","ng-touched")},this.$setTouched=function(){b.$touched=!0,b.$untouched=!1,a.setClass(i,"ng-touched","ng-untouched")},this.$rollbackViewValue=function(){s.cancel($),b.$viewValue=b.$$lastCommittedViewValue,b.$render()},this.$validate=function(){if(!w(b.$modelValue)||!isNaN(b.$modelValue)){var e=b.$$rawModelValue,t=b.$valid,n=b.$modelValue,r=b.$options&&b.$options.allowInvalid;b.$$runValidators(e,b.$$lastCommittedViewValue,function(i){r||t===i||(b.$modelValue=i?e:void 0,b.$modelValue!==n&&b.$$writeModelToScope())})}},this.$$runValidators=function(e,t,n){function i(){var n=!0;return r(b.$validators,function(r,i){var o=r(e,t);n=n&&o,a(i,o)}),n?!0:(r(b.$asyncValidators,function(e,t){a(t,null)}),!1)}function o(){var n=[],i=!0;r(b.$asyncValidators,function(r,o){var s=r(e,t);if(!s||!E(s.then))throw xo("nopromise",s);a(o,void 0),n.push(s.then(function(){a(o,!0)},function(){i=!1,a(o,!1)}))}),n.length?u.all(n).then(function(){s(i)},h):s(!0)}function a(e,t){l===x&&b.$setValidity(e,t)}function s(e){l===x&&n(e)}x++;var l=x;(function(){var e=b.$$parserName||"parse";return m(p)?(a(e,null),!0):(p||(r(b.$validators,function(e,t){a(t,null)}),r(b.$asyncValidators,function(e,t){a(t,null)})),a(e,p),p)})()&&i()?o():s(!1)},this.$commitViewValue=function(){var e=b.$viewValue;s.cancel($),(b.$$lastCommittedViewValue!==e||""===e&&b.$$hasNativeValidators)&&(b.$$updateEmptyClasses(e),b.$$lastCommittedViewValue=e,b.$pristine&&this.$setDirty(),this.$$parseAndValidate())},this.$$parseAndValidate=function(){var t=b.$$lastCommittedViewValue;if(p=m(t)?void 0:!0)for(var n=0;n<b.$parsers.length;n++)if(t=b.$parsers[n](t),m(t)){p=!1;break}w(b.$modelValue)&&isNaN(b.$modelValue)&&(b.$modelValue=g(e));var r=b.$modelValue,i=b.$options&&b.$options.allowInvalid;b.$$rawModelValue=t,i&&(b.$modelValue=t,b.$modelValue!==r&&b.$$writeModelToScope()),b.$$runValidators(t,b.$$lastCommittedViewValue,function(e){i||(b.$modelValue=e?t:void 0,b.$modelValue!==r&&b.$$writeModelToScope())})},this.$$writeModelToScope=function(){y(e,b.$modelValue),r(b.$viewChangeListeners,function(e){try{e()}catch(n){t(n)}})},this.$setViewValue=function(e,t){b.$viewValue=e,b.$options&&!b.$options.updateOnDefault||b.$$debounceViewValueCommit(t)},this.$$debounceViewValueCommit=function(t){var n=0,r=b.$options;r&&v(r.debounce)&&(r=r.debounce,w(r)?n=r:w(r[t])?n=r[t]:w(r["default"])&&(n=r["default"])),s.cancel($),n?$=s(function(){b.$commitViewValue()},n):l.$$phase?b.$commitViewValue():e.$apply(function(){b.$commitViewValue()})},e.$watch(function(){var t=g(e);if(t!==b.$modelValue&&(b.$modelValue===b.$modelValue||t===t)){b.$modelValue=b.$$rawModelValue=t,p=void 0;for(var n=b.$formatters,r=n.length,i=t;r--;)i=n[r](i);b.$viewValue!==i&&(b.$$updateEmptyClasses(i),b.$viewValue=b.$$lastCommittedViewValue=i,b.$render(),b.$$runValidators(t,i,h))}return t})}],Co=["$rootScope",function(e){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Eo,priority:1,compile:function(t){return t.addClass($o).addClass("ng-untouched").addClass(vo),{pre:function(e,t,n,r){var i=r[0];t=r[1]||i.$$parentForm,i.$$setOptions(r[2]&&r[2].$options),t.$addControl(i),n.$observe("name",function(e){i.$name!==e&&i.$$parentForm.$$renameControl(i,e)}),e.$on("$destroy",function(){i.$$parentForm.$removeControl(i)})},post:function(t,n,r,i){var o=i[0];o.$options&&o.$options.updateOn&&n.on(o.$options.updateOn,function(e){o.$$debounceViewValueCommit(e&&e.type)}),n.on("blur",function(){o.$touched||(e.$$phase?t.$evalAsync(o.$setTouched):t.$apply(o.$setTouched))})}}}}}],So=/(\s+|^)default(\s+|$)/,To=function(){return{restrict:"A",controller:["$scope","$attrs",function(e,t){var n=this;this.$options=R(e.$eval(t.ngModelOptions)),v(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=sr(this.$options.updateOn.replace(So,function(){return n.$options.updateOnDefault=!0," "}))):this.$options.updateOnDefault=!0}]}},Ao=kn({terminal:!0,priority:1e3}),No=t("ngOptions"),Lo=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,Oo=["$compile","$document","$parse",function(t,i,o){function a(e,t,r){function i(e,t,n,r,i){this.selectValue=e,this.viewValue=t,this.label=n,this.group=r,this.disabled=i}function a(e){var t;if(!u&&n(e))t=e;else{t=[];for(var r in e)e.hasOwnProperty(r)&&"$"!==r.charAt(0)&&t.push(r)}return t}var s=e.match(Lo);if(!s)throw No("iexp",e,H(t));var l=s[5]||s[7],u=s[6];e=/ as /.test(s[0])&&s[1];var c=s[9];t=o(s[2]?s[1]:l);var p=e&&o(e)||t,h=c&&o(c),d=c?function(e,t){return h(r,t)}:function(e){return De(e)},f=function(e,t){return d(e,b(e,t))},g=o(s[2]||s[1]),m=o(s[3]||""),v=o(s[4]||""),y=o(s[8]),$={},b=u?function(e,t){return $[u]=t,$[l]=e,$}:function(e){return $[l]=e,$};return{trackBy:c,getTrackByValue:f,getWatchables:o(y,function(e){var t=[];e=e||[];for(var n=a(e),i=n.length,o=0;i>o;o++){var l=e===n?o:n[o],u=e[l],l=b(u,l),u=d(u,l);t.push(u),(s[2]||s[1])&&(u=g(r,l),t.push(u)),s[4]&&(l=v(r,l),t.push(l))}return t}),getOptions:function(){for(var e=[],t={},n=y(r)||[],o=a(n),s=o.length,l=0;s>l;l++){var u=n===o?l:o[l],h=b(n[u],u),$=p(r,h),u=d($,h),w=g(r,h),x=m(r,h),h=v(r,h),$=new i(u,$,w,x,h);e.push($),t[u]=$}return{items:e,selectValueMap:t,getOptionFromViewValue:function(e){return t[f(e)]},getViewValueFromOption:function(e){return c?rr.copy(e.viewValue):e.viewValue}}}}}var s=e.document.createElement("option"),l=e.document.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(e,t,n,r){r[0].registerOption=h},post:function(e,n,o,u){function c(e,t){e.element=t,t.disabled=e.disabled,e.label!==t.label&&(t.label=e.label,t.textContent=e.label),e.value!==t.value&&(t.value=e.selectValue)}function p(){var e=w&&d.readValue();if(w)for(var t=w.items.length-1;t>=0;t--){var r=w.items[t];Ne(r.group?r.element.parentNode:r.element)}w=x.getOptions();var i={};$&&n.prepend(h),w.items.forEach(function(e){var t;if(v(e.group)){t=i[e.group],t||(t=l.cloneNode(!1),E.appendChild(t),t.label=e.group,i[e.group]=t);var n=s.cloneNode(!1)}else t=E,n=s.cloneNode(!1);t.appendChild(n),c(e,n)}),n[0].appendChild(E),f.$render(),f.$isEmpty(e)||(t=d.readValue(),(x.trackBy||g?D(e,t):e===t)||(f.$setViewValue(t),f.$render()))}var h,d=u[0],f=u[1],g=o.multiple;u=0;for(var m=n.children(),y=m.length;y>u;u++)if(""===m[u].value){h=m.eq(u);break}var $=!!h,b=Vn(s.cloneNode(!1));b.val("?");var w,x=a(o.ngOptions,n,e),E=i[0].createDocumentFragment();g?(f.$isEmpty=function(e){return!e||0===e.length},d.writeValue=function(e){w.items.forEach(function(e){e.element.selected=!1}),e&&e.forEach(function(e){(e=w.getOptionFromViewValue(e))&&(e.element.selected=!0)})},d.readValue=function(){var e=n.val()||[],t=[];return r(e,function(e){(e=w.selectValueMap[e])&&!e.disabled&&t.push(w.getViewValueFromOption(e))}),t},x.trackBy&&e.$watchCollection(function(){return or(f.$viewValue)?f.$viewValue.map(function(e){return x.getTrackByValue(e)}):void 0},function(){f.$render()})):(d.writeValue=function(e){var t=w.getOptionFromViewValue(e);t?(n[0].value!==t.selectValue&&(b.remove(),$||h.remove(),n[0].value=t.selectValue,t.element.selected=!0),t.element.setAttribute("selected","selected")):null===e||$?(b.remove(),$||n.prepend(h),n.val(""),h.prop("selected",!0),h.attr("selected",!0)):($||h.remove(),n.prepend(b),n.val("?"),b.prop("selected",!0),b.attr("selected",!0))},d.readValue=function(){var e=w.selectValueMap[n.val()];return e&&!e.disabled?($||h.remove(),b.remove(),w.getViewValueFromOption(e)):null},x.trackBy&&e.$watch(function(){return x.getTrackByValue(f.$viewValue)},function(){f.$render()})),$?(h.remove(),t(h)(e),h.removeClass("ng-scope")):h=Vn(s.cloneNode(!1)),n.empty(),p(),e.$watchCollection(x.getWatchables,p)}}}}],Io=["$locale","$interpolate","$log",function(e,t,n){var i=/{}/g,o=/^when(Minus)?(.+)$/;return{link:function(a,s,l){function u(e){s.text(e||"")}var c,p=l.count,d=l.$attr.when&&s.attr(l.$attr.when),f=l.offset||0,g=a.$eval(d)||{},v={},y=t.startSymbol(),$=t.endSymbol(),b=y+p+"-"+f+$,x=rr.noop;r(l,function(e,t){var n=o.exec(t);n&&(n=(n[1]?"-":"")+Yn(n[2]),g[n]=s.attr(l.$attr[t]))}),r(g,function(e,n){v[n]=t(e.replace(i,b))}),a.$watch(p,function(t){var r=parseFloat(t),i=isNaN(r);i||r in g||(r=e.pluralCat(r-f)),r===c||i&&w(c)&&isNaN(c)||(x(),i=v[r],m(i)?(null!=t&&n.debug("ngPluralize: no rule defined for '"+r+"' in "+d),x=h,u()):x=a.$watch(i,u),c=r)})}}}],ko=["$parse","$animate","$compile",function(e,i,o){var a=t("ngRepeat"),s=function(e,t,n,r,i,o,a){e[n]=r,i&&(e[i]=o),e.$index=t,e.$first=0===t,e.$last=t===a-1,e.$middle=!(e.$first||e.$last),e.$odd=!(e.$even=0===(1&t))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1e3,terminal:!0,$$tlb:!0,compile:function(t,l){var u=l.ngRepeat,c=o.$$createComment("end ngRepeat",u),p=u.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!p)throw a("iexp",u);var h=p[1],d=p[2],f=p[3],g=p[4],p=h.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);if(!p)throw a("iidexp",h);var m=p[3]||p[1],v=p[2];if(f&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(f)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(f)))throw a("badident",f);var y,$,b,w,x={$id:De};return g?y=e(g):(b=function(e,t){return De(t)},w=function(e){return e}),function(e,t,o,l,p){y&&($=function(t,n,r){return v&&(x[v]=t),x[m]=n,x.$index=r,y(e,x)});var h=se();e.$watchCollection(d,function(o){var l,d,g,y,x,E,C,S,T,A,N=t[0],L=se();if(f&&(e[f]=o),n(o))S=o,d=$||b;else for(A in d=$||w,S=[],o)Kn.call(o,A)&&"$"!==A.charAt(0)&&S.push(A);for(y=S.length,A=Array(y),l=0;y>l;l++)if(x=o===S?l:S[l],E=o[x],C=d(x,E,l),h[C])T=h[C],delete h[C],L[C]=T,A[l]=T;else{if(L[C])throw r(A,function(e){e&&e.scope&&(h[e.id]=e)}),a("dupes",u,C,E);A[l]={id:C,scope:void 0,clone:void 0},L[C]=!0}for(g in h){if(T=h[g],C=ae(T.clone),i.leave(C),C[0].parentNode)for(l=0,d=C.length;d>l;l++)C[l].$$NG_REMOVED=!0;T.scope.$destroy()}for(l=0;y>l;l++)if(x=o===S?l:S[l],E=o[x],T=A[l],T.scope){g=N;do g=g.nextSibling;while(g&&g.$$NG_REMOVED);T.clone[0]!=g&&i.move(ae(T.clone),null,N),N=T.clone[T.clone.length-1],s(T.scope,l,m,E,v,x,y)}else p(function(e,t){T.scope=t;var n=c.cloneNode(!1);e[e.length++]=n,i.enter(e,null,N),N=n,T.clone=e,L[T.id]=T,s(T.scope,l,m,E,v,x,y)});h=L})}}}}],Ro=["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(t,n,r){t.$watch(r.ngShow,function(t){e[t?"removeClass":"addClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Mo=["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(t,n,r){t.$watch(r.ngHide,function(t){e[t?"addClass":"removeClass"](n,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Do=kn(function(e,t,n){e.$watch(n.ngStyle,function(e,n){n&&e!==n&&r(n,function(e,n){t.css(n,"")}),e&&t.css(e)},!0)}),_o=["$animate","$compile",function(e,t){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(n,i,o,a){var s=[],l=[],u=[],c=[],p=function(e,t){return function(){e.splice(t,1)}};n.$watch(o.ngSwitch||o.on,function(n){var i,o;for(i=0,o=u.length;o>i;++i)e.cancel(u[i]);for(i=u.length=0,o=c.length;o>i;++i){var h=ae(l[i].clone);c[i].$destroy(),(u[i]=e.leave(h)).then(p(u,i))}l.length=0,c.length=0,(s=a.cases["!"+n]||a.cases["?"])&&r(s,function(n){n.transclude(function(r,i){c.push(i);var o=n.element;r[r.length++]=t.$$createComment("end ngSwitchWhen"),l.push({clone:r}),e.enter(r,o.parent(),o)})})})}}}],jo=kn({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(e,t,n,r,i){r.cases["!"+n.ngSwitchWhen]=r.cases["!"+n.ngSwitchWhen]||[],r.cases["!"+n.ngSwitchWhen].push({transclude:i,element:t})}}),Po=kn({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(e,t,n,r,i){r.cases["?"]=r.cases["?"]||[],r.cases["?"].push({transclude:i,element:t})}}),Fo=t("ngTransclude"),qo=kn({restrict:"EAC",link:function(e,t,n,r,i){if(n.ngTransclude===n.$attr.ngTransclude&&(n.ngTransclude=""),!i)throw Fo("orphan",H(t));i(function(e){e.length&&(t.empty(),t.append(e))},null,n.ngTransclude||n.ngTranscludeSlot)}}),Uo=["$templateCache",function(e){return{restrict:"E",terminal:!0,compile:function(t,n){"text/ng-template"==n.type&&e.put(n.id,t[0].text)}}}],Bo={$setViewValue:h,$render:h},Ho=["$element","$scope",function(t,n){var r=this,i=new _e;r.ngModelCtrl=Bo,r.unknownOption=Vn(e.document.createElement("option")),r.renderUnknownOption=function(e){e="? "+De(e)+" ?",r.unknownOption.val(e),t.prepend(r.unknownOption),t.val(e)},n.$on("$destroy",function(){r.renderUnknownOption=h}),r.removeUnknownOption=function(){r.unknownOption.parent()&&r.unknownOption.remove()},r.readValue=function(){return r.removeUnknownOption(),t.val()},r.writeValue=function(e){r.hasOption(e)?(r.removeUnknownOption(),t.val(e),""===e&&r.emptyOption.prop("selected",!0)):null==e&&r.emptyOption?(r.removeUnknownOption(),t.val("")):r.renderUnknownOption(e)},r.addOption=function(e,t){if(8!==t[0].nodeType){ie(e,'"option value"'),""===e&&(r.emptyOption=t);var n=i.get(e)||0;i.put(e,n+1),r.ngModelCtrl.$render(),t[0].hasAttribute("selected")&&(t[0].selected=!0)}},r.removeOption=function(e){var t=i.get(e);t&&(1===t?(i.remove(e),""===e&&(r.emptyOption=void 0)):i.put(e,t-1))},r.hasOption=function(e){return!!i.get(e)},r.registerOption=function(e,t,n,i,o){if(i){var a;n.$observe("value",function(e){v(a)&&r.removeOption(a),a=e,r.addOption(e,t)})}else o?e.$watch(o,function(e,i){n.$set("value",e),i!==e&&r.removeOption(i),r.addOption(e,t)}):r.addOption(n.value,t);t.on("$destroy",function(){r.removeOption(n.value),r.ngModelCtrl.$render()})}}],Vo=function(){return{restrict:"E",require:["select","?ngModel"],controller:Ho,priority:1,link:{pre:function(e,t,n,i){var o=i[1];if(o){var a=i[0];if(a.ngModelCtrl=o,t.on("change",function(){e.$apply(function(){o.$setViewValue(a.readValue())})}),n.multiple){a.readValue=function(){var e=[];return r(t.find("option"),function(t){t.selected&&e.push(t.value)}),e},a.writeValue=function(e){var n=new _e(e);r(t.find("option"),function(e){e.selected=v(n.get(e.value))})};var s,l=NaN;e.$watch(function(){l!==o.$viewValue||D(s,o.$viewValue)||(s=M(o.$viewValue),o.$render()),l=o.$viewValue}),o.$isEmpty=function(e){return!e||0===e.length}}}},post:function(e,t,n,r){var i=r[1];if(i){var o=r[0];i.$render=function(){o.writeValue(i.$viewValue)}}}}}},Go=["$interpolate",function(e){return{restrict:"E",priority:100,compile:function(t,n){if(v(n.value))var r=e(n.value,!0);else{var i=e(t.text(),!0);i||n.$set("value",t.text())}return function(e,t,n){var o=t.parent();(o=o.data("$selectController")||o.parent().data("$selectController"))&&o.registerOption(e,t,n,r,i)}}}}],Wo=f({restrict:"E",terminal:!1}),zo=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,r){r&&(n.required=!0,r.$validators.required=function(e,t){return!n.required||!r.$isEmpty(t)},n.$observe("required",function(){r.$validate()}))}}},Ko=function(){return{restrict:"A",require:"?ngModel",link:function(e,n,r,i){if(i){var o,a=r.ngPattern||r.pattern;r.$observe("pattern",function(e){if(b(e)&&0<e.length&&(e=new RegExp("^"+e+"$")),e&&!e.test)throw t("ngPattern")("noregexp",a,e,H(n));o=e||void 0,i.$validate()}),i.$validators.pattern=function(e,t){return i.$isEmpty(t)||m(o)||o.test(t)}}}}},Yo=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,r){if(r){var i=-1;n.$observe("maxlength",function(e){e=c(e),i=isNaN(e)?-1:e,r.$validate()}),r.$validators.maxlength=function(e,t){return 0>i||r.$isEmpty(t)||t.length<=i}}}}},Xo=function(){return{restrict:"A",require:"?ngModel",link:function(e,t,n,r){if(r){var i=0;n.$observe("minlength",function(e){i=c(e)||0,r.$validate()}),r.$validators.minlength=function(e,t){return r.$isEmpty(t)||t.length>=i}}}}};e.angular.bootstrap?e.console&&console.log("WARNING: Tried to load angular more than once."):(te(),ue(rr),rr.module("ngLocale",[],["$provide",function(e){function t(e){e+="";var t=e.indexOf(".");return-1==t?0:e.length-t-1}e.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-¤",negSuf:"",posPre:"¤",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(e,n){var r=0|e,i=n;return void 0===i&&(i=Math.min(t(e),3)),Math.pow(10,i),1==r&&0==i?"one":"other"}})}]),Vn(e.document).ready(function(){X(e.document,Q)}))}(window),!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>'),angular.module("chromeStorage",[]).factory("chromeStorage",function(e){var t=null;try{t=chrome.storage.local}catch(n){console.log("could not initiate chrome local storage: "+n)}var r=null,i={},o=function(n){var r=e.defer();return t.getBytesInUse(n,function(e){chrome.runtime.lasterror?(console.log("error retrieving bytes in use for keys "+n),r.reject(chrome.runtime.lasterror.message)):(console.log("retrieved bytes in use for keys "+n+": "+e),r.resolve(e))}),r.promise};return{getDebuggingTotalBytesInUse:function(){return r},getDebuggingCache:function(){return i},getDebuggingPercentUsed:function(){var e=r/t.QUOTA_BYTES;return e},getDebuggingSizeOf:function(e){return angular.toJson(i[e]).length},updateDebuggingCache:function(){var n=e.defer();t.get(null,function(e){chrome.runtime.lasterror?n.reject(chrome.runtime.lasterror.message):n.resolve(e)}),n.promise.then(function(e){i=e})},updateDebuggingTotalBytes:function(){o(null).then(function(e){console.log("total bytes in use: "+e),r=e})},clearCache:function(){t.clear(function(){chrome.runtime.lastError?console.error("error clearing local cache"+chrome.runtime.lastError):console.log("cache has been cleared")})},drop:function(e){t.remove(e,function(){chrome.runtime.lasterror&&console.error(chrome.runtime.lasterror.message)})},get:function(n){var r=e.defer();return t.get(n,function(e){var t=e[n];r.resolve(t)}),r.promise},getOrElse:function(n,r){var i=e.defer();return t.get(n,function(e){var o=e[n];void 0==o||null==o?r().then(function(e){o=e;var r={};r[n]=o,t.set(r,function(){chrome.runtime.lasterror&&console.error(chrome.runtime.lasterror.message)}),i.resolve(o)}):i.resolve(o)}),i.promise},set:function(e,n){var r={};r[e]=n,t.set(r,function(){chrome.runtime.lasterror&&console.error(chrome.runtime.lasterror.message)})},forceGet:function(n,r){var i=e.defer();return r().then(function(e){keyValue=e;var r={};r[n]=keyValue,t.set(r,function(){chrome.runtime.lasterror&&console.error(chrome.runtime.lasterror.message)}),i.resolve(keyValue)}),i.promise},getQuota:function(){return t.QUOTA_BYTES}}}),Array.prototype.push||(Array.prototype.push=function(){for(var e=0,t=arguments.length;t>e;e++)this[this.length]=arguments[e];return this.length}),Array.prototype.shift||(Array.prototype.shift=function(){if(this.length>0){for(var e=this[0],t=0,n=this.length-1;n>t;t++)this[t]=this[t+1];return this.length=this.length-1,e}}),Array.prototype.splice||(Array.prototype.splice=function(e,t){var n=this.slice(e+t),r=this.slice(e,e+t);this.length=e;for(var i=[],o=0,a=arguments.length;a>o;o++)i[o]=arguments[o];var s=i.length>2?n=i.slice(2).concat(n):n;for(o=0,a=s.length;a>o;o++)this.push(s[o]);return r});var log4javascript=function(){function isUndefined(e){return"undefined"==typeof e}function EventSupport(){}function Log4JavaScript(){}function toStr(e){return e&&e.toString?e.toString():String(e);
}function getExceptionMessage(e){return e.message?e.message:e.description?e.description:toStr(e)}function getUrlFileName(e){var t=Math.max(e.lastIndexOf("/"),e.lastIndexOf("\\"));return e.substr(t+1)}function getExceptionStringRep(e){if(e){var t="Exception: "+getExceptionMessage(e);try{e.lineNumber&&(t+=" on line number "+e.lineNumber),e.fileName&&(t+=" in file "+getUrlFileName(e.fileName))}catch(n){logLog.warn("Unable to obtain file and line information for error")}return showStackTraces&&e.stack&&(t+=newLine+"Stack trace:"+newLine+e.stack),t}return null}function bool(e){return Boolean(e)}function trim(e){return e.replace(/^\s+/,"").replace(/\s+$/,"")}function splitIntoLines(e){var t=e.replace(/\r\n/g,"\n").replace(/\r/g,"\n");return t.split("\n")}function array_remove(e,t){for(var n=-1,r=0,i=e.length;i>r;r++)if(e[r]===t){n=r;break}return n>=0?(e.splice(n,1),!0):!1}function array_contains(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]==t)return!0;return!1}function extractBooleanFromParam(e,t){return isUndefined(e)?t:bool(e)}function extractStringFromParam(e,t){return isUndefined(e)?t:String(e)}function extractIntFromParam(e,t){if(isUndefined(e))return t;try{var n=parseInt(e,10);return isNaN(n)?t:n}catch(r){return logLog.warn("Invalid int param "+e,r),t}}function extractFunctionFromParam(e,t){return"function"==typeof e?e:t}function isError(e){return e instanceof Error}function getListenersPropertyName(e){return"__log4javascript_listeners__"+e}function addEvent(e,t,n,r,i){if(i=i?i:window,e.addEventListener)e.addEventListener(t,n,r);else if(e.attachEvent)e.attachEvent("on"+t,n);else{var o=getListenersPropertyName(t);e[o]||(e[o]=[],e["on"+t]=function(e){e=getEvent(e,i);for(var n,r=getListenersPropertyName(t),o=this[r].concat([]);n=o.shift();)n.call(this,e)}),e[o].push(n)}}function removeEvent(e,t,n,r){if(e.removeEventListener)e.removeEventListener(t,n,r);else if(e.detachEvent)e.detachEvent("on"+t,n);else{var i=getListenersPropertyName(t);e[i]&&array_remove(e[i],n)}}function getEvent(e,t){return t=t?t:window,e?e:t.event}function stopEventPropagation(e){e.stopPropagation?e.stopPropagation():"undefined"!=typeof e.cancelBubble&&(e.cancelBubble=!0),e.returnValue=!1}function handleError(e,t){logLog.error(e,t),log4javascript.dispatchEvent("error",{message:e,exception:t})}function Timer(e,t){this.name=e,this.level=isUndefined(t)?Level.INFO:t,this.start=new Date}function Logger(e){this.name=e,this.parent=null,this.children=[];var t=[],n=null,r=this.name===rootLoggerName,i=this.name===nullLoggerName,o=null,a=!1;this.addChild=function(e){this.children.push(e),e.parent=this,e.invalidateAppenderCache()};var s=!0;this.getAdditivity=function(){return s},this.setAdditivity=function(e){var t=s!=e;s=e,t&&this.invalidateAppenderCache()},this.addAppender=function(e){i?handleError("Logger.addAppender: you may not add an appender to the null logger"):e instanceof log4javascript.Appender?array_contains(t,e)||(t.push(e),e.setAddedToLogger(this),this.invalidateAppenderCache()):handleError("Logger.addAppender: appender supplied ('"+toStr(e)+"') is not a subclass of Appender")},this.removeAppender=function(e){array_remove(t,e),e.setRemovedFromLogger(this),this.invalidateAppenderCache()},this.removeAllAppenders=function(){var e=t.length;if(e>0){for(var n=0;e>n;n++)t[n].setRemovedFromLogger(this);t.length=0,this.invalidateAppenderCache()}},this.getEffectiveAppenders=function(){if(null===o||a){var e=r||!this.getAdditivity()?[]:this.parent.getEffectiveAppenders();o=e.concat(t),a=!1}return o},this.invalidateAppenderCache=function(){a=!0;for(var e=0,t=this.children.length;t>e;e++)this.children[e].invalidateAppenderCache()},this.log=function(e,t){if(enabled&&e.isGreaterOrEqual(this.getEffectiveLevel())){var n,r=t.length-1,i=t[r];t.length>1&&isError(i)&&(n=i,r--);for(var o=[],a=0;r>=a;a++)o[a]=t[a];var s=new LoggingEvent(this,new Date,e,o,n);this.callAppenders(s)}},this.callAppenders=function(e){for(var t=this.getEffectiveAppenders(),n=0,r=t.length;r>n;n++)t[n].doAppend(e)},this.setLevel=function(e){r&&null===e?handleError("Logger.setLevel: you cannot set the level of the root logger to null"):e instanceof Level?n=e:handleError("Logger.setLevel: level supplied to logger "+this.name+" is not an instance of log4javascript.Level")},this.getLevel=function(){return n},this.getEffectiveLevel=function(){for(var e=this;null!==e;e=e.parent){var t=e.getLevel();if(null!==t)return t}},this.group=function(e,t){if(enabled)for(var n=this.getEffectiveAppenders(),r=0,i=n.length;i>r;r++)n[r].group(e,t)},this.groupEnd=function(){if(enabled)for(var e=this.getEffectiveAppenders(),t=0,n=e.length;n>t;t++)e[t].groupEnd()};var l={};this.time=function(e,t){enabled&&(isUndefined(e)?handleError("Logger.time: a name for the timer must be supplied"):!t||t instanceof Level?l[e]=new Timer(e,t):handleError("Logger.time: level supplied to timer "+e+" is not an instance of log4javascript.Level"))},this.timeEnd=function(e){if(enabled)if(isUndefined(e))handleError("Logger.timeEnd: a name for the timer must be supplied");else if(l[e]){var t=l[e],n=t.getElapsedTime();this.log(t.level,["Timer "+toStr(e)+" completed in "+n+"ms"]),delete l[e]}else logLog.warn("Logger.timeEnd: no timer found with name "+e)},this.assert=function(e){if(enabled&&!e){for(var t=[],n=1,r=arguments.length;r>n;n++)t.push(arguments[n]);t=t.length>0?t:["Assertion Failure"],t.push(newLine),t.push(e),this.log(Level.ERROR,t)}},this.toString=function(){return"Logger["+this.name+"]"}}function SimpleLayout(){this.customFields=[]}function NullLayout(){this.customFields=[]}function XmlLayout(e){this.combineMessages=extractBooleanFromParam(e,!0),this.customFields=[]}function escapeNewLines(e){return e.replace(/\r\n|\r|\n/g,"\\r\\n")}function JsonLayout(e,t){this.readable=extractBooleanFromParam(e,!1),this.combineMessages=extractBooleanFromParam(t,!0),this.batchHeader=this.readable?"["+newLine:"[",this.batchFooter=this.readable?"]"+newLine:"]",this.batchSeparator=this.readable?","+newLine:",",this.setKeys(),this.colon=this.readable?": ":":",this.tab=this.readable?"	":"",this.lineBreak=this.readable?newLine:"",this.customFields=[]}function HttpPostDataLayout(){this.setKeys(),this.customFields=[],this.returnsPostData=!0}function formatObjectExpansion(e,t,n){function r(e,t,n){function o(e){for(var t=splitIntoLines(e),r=1,i=t.length;i>r;r++)t[r]=n+t[r];return t.join(newLine)}var a,s,l,u,c,p,h;if(n||(n=""),null===e)return"null";if("undefined"==typeof e)return"undefined";if("string"==typeof e)return o(e);if("object"==typeof e&&array_contains(i,e)){try{p=toStr(e)}catch(d){p="Error formatting property. Details: "+getExceptionStringRep(d)}return p+" [already expanded]"}if(e instanceof Array&&t>0){for(i.push(e),p="["+newLine,l=t-1,u=n+"  ",c=[],a=0,s=e.length;s>a;a++)try{h=r(e[a],l,u),c.push(u+h)}catch(d){c.push(u+"Error formatting array member. Details: "+getExceptionStringRep(d))}return p+=c.join(","+newLine)+newLine+n+"]"}if("[object Date]"==Object.prototype.toString.call(e))return e.toString();if("object"==typeof e&&t>0){i.push(e),p="{"+newLine,l=t-1,u=n+"  ",c=[];for(a in e)try{h=r(e[a],l,u),c.push(u+a+": "+h)}catch(d){c.push(u+a+": Error formatting property. Details: "+getExceptionStringRep(d))}return p+=c.join(","+newLine)+newLine+n+"}"}return o(toStr(e))}var i=[];return r(e,t,n)}function PatternLayout(e){e?this.pattern=e:this.pattern=PatternLayout.DEFAULT_CONVERSION_PATTERN,this.customFields=[]}function AlertAppender(){}function BrowserConsoleAppender(){}function isHttpRequestSuccessful(e){return isUndefined(e.status)||0===e.status||e.status>=200&&e.status<300||1223==e.status}function AjaxAppender(e,t){function n(e){return T?(handleError("AjaxAppender: configuration option '"+e+"' may not be set after the appender has been initialized"),!1):!0}function r(){if(p&&enabled){S=!0;var e;if(d)E.length>0?(e=E.shift(),l(o(e),r)):(S=!1,h&&a());else{for(;e=E.shift();)l(o(e));S=!1,h&&a()}}}function i(){var e=!1;if(p&&enabled){for(var t,n=c.getLayout().allowBatching()?f:1,i=[];t=x.shift();)i.push(t),x.length>=n&&(E.push(i),i=[]);i.length>0&&E.push(i),e=E.length>0,d=!1,h=!1,r()}return e}function o(e){for(var t,n=[],r="";t=e.shift();)n.push(c.getLayout().formatWithException(t));return r=1==e.length?n.join(""):c.getLayout().batchHeader+n.join(c.getLayout().batchSeparator)+c.getLayout().batchFooter,b==c.defaults.contentType&&(r=c.getLayout().returnsPostData?r:urlEncode(y)+"="+urlEncode(r),r.length>0&&(r+="&"),r+="layout="+urlEncode(c.getLayout().toString())),r}function a(){window.setTimeout(r,g)}function s(){var e="AjaxAppender: could not create XMLHttpRequest object. AjaxAppender disabled";handleError(e),p=!1,v&&v(e)}function l(n,r){try{var i=getXmlHttp(s);if(p){t&&withCredentialsSupported&&(i.withCredentials=!0),i.onreadystatechange=function(){if(4==i.readyState){if(isHttpRequestSuccessful(i))m&&m(i),r&&r(i);else{var t="AjaxAppender.append: XMLHttpRequest request to URL "+e+" returned status code "+i.status;handleError(t),v&&v(t)}i.onreadystatechange=emptyFunction,i=null}},i.open("POST",e,!0);try{for(var o,a=0;o=C[a++];)i.setRequestHeader(o.name,o.value);i.setRequestHeader("Content-Type",b)}catch(l){var u="AjaxAppender.append: your browser's XMLHttpRequest implementation does not support setRequestHeader, therefore cannot post data. AjaxAppender disabled";return handleError(u),p=!1,void(v&&v(u))}i.send(n)}}catch(c){var h="AjaxAppender.append: error sending log message to "+e;handleError(h,c),p=!1,v&&v(h+". Details: "+getExceptionStringRep(c))}}function u(){if(T=!0,$){var e=window.onbeforeunload;window.onbeforeunload=function(){return e&&e(),i()?"Sending log messages":void 0}}h&&a()}var c=this,p=!0;e||(handleError("AjaxAppender: URL must be specified in constructor"),p=!1);var h=this.defaults.timed,d=this.defaults.waitForResponse,f=this.defaults.batchSize,g=this.defaults.timerInterval,m=this.defaults.requestSuccessCallback,v=this.defaults.failCallback,y=this.defaults.postVarName,$=this.defaults.sendAllOnUnload,b=this.defaults.contentType,w=null,x=[],E=[],C=[],S=!1,T=!1;this.getSessionId=function(){return w},this.setSessionId=function(e){w=extractStringFromParam(e,null),this.layout.setCustomField("sessionid",w)},this.setLayout=function(e){n("layout")&&(this.layout=e,null!==w&&this.setSessionId(w))},this.isTimed=function(){return h},this.setTimed=function(e){n("timed")&&(h=bool(e))},this.getTimerInterval=function(){return g},this.setTimerInterval=function(e){n("timerInterval")&&(g=extractIntFromParam(e,g))},this.isWaitForResponse=function(){return d},this.setWaitForResponse=function(e){n("waitForResponse")&&(d=bool(e))},this.getBatchSize=function(){return f},this.setBatchSize=function(e){n("batchSize")&&(f=extractIntFromParam(e,f))},this.isSendAllOnUnload=function(){return $},this.setSendAllOnUnload=function(e){n("sendAllOnUnload")&&($=extractBooleanFromParam(e,$))},this.setRequestSuccessCallback=function(e){m=extractFunctionFromParam(e,m)},this.setFailCallback=function(e){v=extractFunctionFromParam(e,v)},this.getPostVarName=function(){return y},this.setPostVarName=function(e){n("postVarName")&&(y=extractStringFromParam(e,y))},this.getHeaders=function(){return C},this.addHeader=function(e,t){"content-type"==e.toLowerCase()?b=t:C.push({name:e,value:t})},this.sendAll=r,this.sendAllRemaining=i,this.append=function(e){if(p){T||u(),x.push(e);var t=this.getLayout().allowBatching()?f:1;if(x.length>=t){for(var n,i=[];n=x.shift();)i.push(n);E.push(i),h||d&&(!d||S)||r()}}}}function setCookie(e,t,n,r){var i;if(r=r?"; path="+r:"",n){var o=new Date;o.setTime(o.getTime()+24*n*60*60*1e3),i="; expires="+o.toGMTString()}else i="";document.cookie=escape(e)+"="+escape(t)+i+r}function getCookie(e){for(var t=escape(e)+"=",n=document.cookie.split(";"),r=0,i=n.length;i>r;r++){for(var o=n[r];" "===o.charAt(0);)o=o.substring(1,o.length);if(0===o.indexOf(t))return unescape(o.substring(t.length,o.length))}return null}function getBaseUrl(){for(var e=document.getElementsByTagName("script"),t=0,n=e.length;n>t;++t)if(-1!=e[t].src.indexOf("log4javascript")){var r=e[t].src.lastIndexOf("/");return-1==r?"":e[t].src.substr(0,r+1)}return null}function isLoaded(e){try{return bool(e.loaded)}catch(t){return!1}}function padWithSpaces(e,t){if(e.length<t){for(var n=[],r=Math.max(0,t-e.length),i=0;r>i;i++)n[i]=" ";e+=n.join("")}return e}EventSupport.prototype={eventTypes:[],eventListeners:{},setEventTypes:function(e){if(e instanceof Array){this.eventTypes=e,this.eventListeners={};for(var t=0,n=this.eventTypes.length;n>t;t++)this.eventListeners[this.eventTypes[t]]=[]}else handleError("log4javascript.EventSupport ["+this+"]: setEventTypes: eventTypes parameter must be an Array")},addEventListener:function(e,t){"function"==typeof t?(array_contains(this.eventTypes,e)||handleError("log4javascript.EventSupport ["+this+"]: addEventListener: no event called '"+e+"'"),this.eventListeners[e].push(t)):handleError("log4javascript.EventSupport ["+this+"]: addEventListener: listener must be a function")},removeEventListener:function(e,t){"function"==typeof t?(array_contains(this.eventTypes,e)||handleError("log4javascript.EventSupport ["+this+"]: removeEventListener: no event called '"+e+"'"),array_remove(this.eventListeners[e],t)):handleError("log4javascript.EventSupport ["+this+"]: removeEventListener: listener must be a function")},dispatchEvent:function(e,t){if(array_contains(this.eventTypes,e))for(var n=this.eventListeners[e],r=0,i=n.length;i>r;r++)n[r](this,e,t);else handleError("log4javascript.EventSupport ["+this+"]: dispatchEvent: no event called '"+e+"'")}};var applicationStartDate=new Date,uniqueId="log4javascript_"+applicationStartDate.getTime()+"_"+Math.floor(1e8*Math.random()),emptyFunction=function(){},newLine="\r\n",pageLoaded=!1;Log4JavaScript.prototype=new EventSupport,log4javascript=new Log4JavaScript,log4javascript.version="1.4.9",log4javascript.edition="log4javascript";var urlEncode="undefined"!=typeof window.encodeURIComponent?function(e){return encodeURIComponent(e)}:function(e){return escape(e).replace(/\+/g,"%2B").replace(/"/g,"%22").replace(/'/g,"%27").replace(/\//g,"%2F").replace(/=/g,"%3D")},urlDecode="undefined"!=typeof window.decodeURIComponent?function(e){return decodeURIComponent(e)}:function(e){return unescape(e).replace(/%2B/g,"+").replace(/%22/g,'"').replace(/%27/g,"'").replace(/%2F/g,"/").replace(/%3D/g,"=")};Function.prototype.apply||(Function.prototype.apply=function(obj,args){var methodName="__apply__";"undefined"!=typeof obj[methodName]&&(methodName+=String(Math.random()).substr(2)),obj[methodName]=this;for(var argsStrings=[],i=0,len=args.length;len>i;i++)argsStrings[i]="args["+i+"]";var script="obj."+methodName+"("+argsStrings.join(",")+")",returnValue=eval(script);return delete obj[methodName],returnValue}),Function.prototype.call||(Function.prototype.call=function(e){for(var t=[],n=1,r=arguments.length;r>n;n++)t[n-1]=arguments[n];return this.apply(e,t)});var logLog={quietMode:!1,debugMessages:[],setQuietMode:function(e){this.quietMode=bool(e)},numberOfErrors:0,alertAllErrors:!1,setAlertAllErrors:function(e){this.alertAllErrors=e},debug:function(e){this.debugMessages.push(e)},displayDebug:function(){alert(this.debugMessages.join(newLine))},warn:function(e,t){},error:function(e,t){if((1==++this.numberOfErrors||this.alertAllErrors)&&!this.quietMode){var n="log4javascript error: "+e;t&&(n+=newLine+newLine+"Original error: "+getExceptionStringRep(t)),alert(n)}}};log4javascript.logLog=logLog,log4javascript.setEventTypes(["load","error"]),log4javascript.handleError=handleError;var enabled=!("undefined"!=typeof log4javascript_disabled&&log4javascript_disabled);log4javascript.setEnabled=function(e){enabled=bool(e)},log4javascript.isEnabled=function(){return enabled};var useTimeStampsInMilliseconds=!0;log4javascript.setTimeStampsInMilliseconds=function(e){useTimeStampsInMilliseconds=bool(e)},log4javascript.isTimeStampsInMilliseconds=function(){return useTimeStampsInMilliseconds},log4javascript.evalInScope=function(expr){return eval(expr)};var showStackTraces=!1;log4javascript.setShowStackTraces=function(e){showStackTraces=bool(e)};var Level=function(e,t){this.level=e,this.name=t};Level.prototype={toString:function(){return this.name},equals:function(e){return this.level==e.level},isGreaterOrEqual:function(e){return this.level>=e.level}},Level.ALL=new Level(Number.MIN_VALUE,"ALL"),Level.TRACE=new Level(1e4,"TRACE"),Level.DEBUG=new Level(2e4,"DEBUG"),Level.INFO=new Level(3e4,"INFO"),Level.WARN=new Level(4e4,"WARN"),Level.ERROR=new Level(5e4,"ERROR"),Level.FATAL=new Level(6e4,"FATAL"),Level.OFF=new Level(Number.MAX_VALUE,"OFF"),log4javascript.Level=Level,Timer.prototype.getElapsedTime=function(){return(new Date).getTime()-this.start.getTime()};var anonymousLoggerName="[anonymous]",defaultLoggerName="[default]",nullLoggerName="[null]",rootLoggerName="root";Logger.prototype={trace:function(){this.log(Level.TRACE,arguments)},debug:function(){this.log(Level.DEBUG,arguments)},info:function(){this.log(Level.INFO,arguments)},warn:function(){this.log(Level.WARN,arguments)},error:function(){this.log(Level.ERROR,arguments)},fatal:function(){this.log(Level.FATAL,arguments)},isEnabledFor:function(e){return e.isGreaterOrEqual(this.getEffectiveLevel())},isTraceEnabled:function(){return this.isEnabledFor(Level.TRACE)},isDebugEnabled:function(){return this.isEnabledFor(Level.DEBUG)},isInfoEnabled:function(){return this.isEnabledFor(Level.INFO)},isWarnEnabled:function(){return this.isEnabledFor(Level.WARN)},isErrorEnabled:function(){return this.isEnabledFor(Level.ERROR)},isFatalEnabled:function(){return this.isEnabledFor(Level.FATAL)}},Logger.prototype.trace.isEntryPoint=!0,Logger.prototype.debug.isEntryPoint=!0,Logger.prototype.info.isEntryPoint=!0,Logger.prototype.warn.isEntryPoint=!0,Logger.prototype.error.isEntryPoint=!0,Logger.prototype.fatal.isEntryPoint=!0;var loggers={},loggerNames=[],ROOT_LOGGER_DEFAULT_LEVEL=Level.DEBUG,rootLogger=new Logger(rootLoggerName);rootLogger.setLevel(ROOT_LOGGER_DEFAULT_LEVEL),log4javascript.getRootLogger=function(){return rootLogger},log4javascript.getLogger=function(e){if("string"!=typeof e&&(e=anonymousLoggerName,logLog.warn("log4javascript.getLogger: non-string logger name "+toStr(e)+" supplied, returning anonymous logger")),e==rootLoggerName&&handleError("log4javascript.getLogger: root logger may not be obtained by name"),!loggers[e]){var t=new Logger(e);loggers[e]=t,loggerNames.push(e);var n,r=e.lastIndexOf(".");if(r>-1){var i=e.substring(0,r);n=log4javascript.getLogger(i)}else n=rootLogger;n.addChild(t)}return loggers[e]};var defaultLogger=null;log4javascript.getDefaultLogger=function(){if(!defaultLogger){defaultLogger=log4javascript.getLogger(defaultLoggerName);var e=new log4javascript.PopUpAppender;defaultLogger.addAppender(e)}return defaultLogger};var nullLogger=null;log4javascript.getNullLogger=function(){return nullLogger||(nullLogger=new Logger(nullLoggerName),nullLogger.setLevel(Level.OFF)),nullLogger},log4javascript.resetConfiguration=function(){rootLogger.setLevel(ROOT_LOGGER_DEFAULT_LEVEL),loggers={}};var LoggingEvent=function(e,t,n,r,i){this.logger=e,this.timeStamp=t,this.timeStampInMilliseconds=t.getTime(),this.timeStampInSeconds=Math.floor(this.timeStampInMilliseconds/1e3),this.milliseconds=this.timeStamp.getMilliseconds(),this.level=n,this.messages=r,this.exception=i};LoggingEvent.prototype={getThrowableStrRep:function(){return this.exception?getExceptionStringRep(this.exception):""},getCombinedMessages:function(){return 1==this.messages.length?this.messages[0]:this.messages.join(newLine)},toString:function(){return"LoggingEvent["+this.level+"]"}},log4javascript.LoggingEvent=LoggingEvent;var Layout=function(){};Layout.prototype={defaults:{loggerKey:"logger",timeStampKey:"timestamp",millisecondsKey:"milliseconds",levelKey:"level",messageKey:"message",exceptionKey:"exception",urlKey:"url"},loggerKey:"logger",timeStampKey:"timestamp",millisecondsKey:"milliseconds",levelKey:"level",messageKey:"message",exceptionKey:"exception",urlKey:"url",batchHeader:"",batchFooter:"",batchSeparator:"",returnsPostData:!1,overrideTimeStampsSetting:!1,useTimeStampsInMilliseconds:null,format:function(){handleError("Layout.format: layout supplied has no format() method")},ignoresThrowable:function(){handleError("Layout.ignoresThrowable: layout supplied has no ignoresThrowable() method")},getContentType:function(){return"text/plain"},allowBatching:function(){return!0},setTimeStampsInMilliseconds:function(e){this.overrideTimeStampsSetting=!0,this.useTimeStampsInMilliseconds=bool(e)},isTimeStampsInMilliseconds:function(){return this.overrideTimeStampsSetting?this.useTimeStampsInMilliseconds:useTimeStampsInMilliseconds},getTimeStampValue:function(e){return this.isTimeStampsInMilliseconds()?e.timeStampInMilliseconds:e.timeStampInSeconds},getDataValues:function(e,t){var n=[[this.loggerKey,e.logger.name],[this.timeStampKey,this.getTimeStampValue(e)],[this.levelKey,e.level.name],[this.urlKey,window.location.href],[this.messageKey,t?e.getCombinedMessages():e.messages]];if(this.isTimeStampsInMilliseconds()||n.push([this.millisecondsKey,e.milliseconds]),e.exception&&n.push([this.exceptionKey,getExceptionStringRep(e.exception)]),this.hasCustomFields())for(var r=0,i=this.customFields.length;i>r;r++){var o=this.customFields[r].value;"function"==typeof o&&(o=o(this,e)),n.push([this.customFields[r].name,o])}return n},setKeys:function(e,t,n,r,i,o,a){this.loggerKey=extractStringFromParam(e,this.defaults.loggerKey),this.timeStampKey=extractStringFromParam(t,this.defaults.timeStampKey),this.levelKey=extractStringFromParam(n,this.defaults.levelKey),this.messageKey=extractStringFromParam(r,this.defaults.messageKey),this.exceptionKey=extractStringFromParam(i,this.defaults.exceptionKey),this.urlKey=extractStringFromParam(o,this.defaults.urlKey),this.millisecondsKey=extractStringFromParam(a,this.defaults.millisecondsKey)},setCustomField:function(e,t){for(var n=!1,r=0,i=this.customFields.length;i>r;r++)this.customFields[r].name===e&&(this.customFields[r].value=t,n=!0);n||this.customFields.push({name:e,value:t})},hasCustomFields:function(){return this.customFields.length>0},formatWithException:function(e){var t=this.format(e);return e.exception&&this.ignoresThrowable()&&(t+=e.getThrowableStrRep()),t},toString:function(){handleError("Layout.toString: all layouts must override this method")}},log4javascript.Layout=Layout;var Appender=function(){};Appender.prototype=new EventSupport,Appender.prototype.layout=new PatternLayout,Appender.prototype.threshold=Level.ALL,Appender.prototype.loggers=[],Appender.prototype.doAppend=function(e){enabled&&e.level.level>=this.threshold.level&&this.append(e)},Appender.prototype.append=function(e){},Appender.prototype.setLayout=function(e){e instanceof Layout?this.layout=e:handleError("Appender.setLayout: layout supplied to "+this.toString()+" is not a subclass of Layout")},Appender.prototype.getLayout=function(){return this.layout},Appender.prototype.setThreshold=function(e){e instanceof Level?this.threshold=e:handleError("Appender.setThreshold: threshold supplied to "+this.toString()+" is not a subclass of Level")},Appender.prototype.getThreshold=function(){return this.threshold},Appender.prototype.setAddedToLogger=function(e){this.loggers.push(e)},Appender.prototype.setRemovedFromLogger=function(e){array_remove(this.loggers,e)},Appender.prototype.group=emptyFunction,Appender.prototype.groupEnd=emptyFunction,Appender.prototype.toString=function(){handleError("Appender.toString: all appenders must override this method")},log4javascript.Appender=Appender,SimpleLayout.prototype=new Layout,SimpleLayout.prototype.format=function(e){return e.level.name+" - "+e.getCombinedMessages()},SimpleLayout.prototype.ignoresThrowable=function(){return!0},SimpleLayout.prototype.toString=function(){return"SimpleLayout"},log4javascript.SimpleLayout=SimpleLayout,NullLayout.prototype=new Layout,NullLayout.prototype.format=function(e){return e.messages},NullLayout.prototype.ignoresThrowable=function(){return!0},NullLayout.prototype.formatWithException=function(e){var t=e.messages,n=e.exception;return n?t.concat([n]):t},NullLayout.prototype.toString=function(){return"NullLayout"},log4javascript.NullLayout=NullLayout,XmlLayout.prototype=new Layout,XmlLayout.prototype.isCombinedMessages=function(){return this.combineMessages},XmlLayout.prototype.getContentType=function(){return"text/xml"},XmlLayout.prototype.escapeCdata=function(e){return e.replace(/\]\]>/,"]]>]]&gt;<![CDATA[")},XmlLayout.prototype.format=function(e){function t(e){return e="string"==typeof e?e:toStr(e),"<log4javascript:message><![CDATA["+i.escapeCdata(e)+"]]></log4javascript:message>"}var n,r,i=this,o='<log4javascript:event logger="'+e.logger.name+'" timestamp="'+this.getTimeStampValue(e)+'"';if(this.isTimeStampsInMilliseconds()||(o+=' milliseconds="'+e.milliseconds+'"'),o+=' level="'+e.level.name+'">'+newLine,this.combineMessages)o+=t(e.getCombinedMessages());else{for(o+="<log4javascript:messages>"+newLine,n=0,r=e.messages.length;r>n;n++)o+=t(e.messages[n])+newLine;o+="</log4javascript:messages>"+newLine}if(this.hasCustomFields())for(n=0,r=this.customFields.length;r>n;n++)o+='<log4javascript:customfield name="'+this.customFields[n].name+'"><![CDATA['+this.customFields[n].value.toString()+"]]></log4javascript:customfield>"+newLine;return e.exception&&(o+="<log4javascript:exception><![CDATA["+getExceptionStringRep(e.exception)+"]]></log4javascript:exception>"+newLine),o+="</log4javascript:event>"+newLine+newLine},XmlLayout.prototype.ignoresThrowable=function(){return!1},XmlLayout.prototype.toString=function(){return"XmlLayout"},log4javascript.XmlLayout=XmlLayout,JsonLayout.prototype=new Layout,JsonLayout.prototype.isReadable=function(){return this.readable},JsonLayout.prototype.isCombinedMessages=function(){return this.combineMessages},JsonLayout.prototype.format=function(e){function t(e,n,r){var o,a=typeof e;if(e instanceof Date)o=String(e.getTime());else if(r&&e instanceof Array){o="["+i.lineBreak;for(var s=0,l=e.length;l>s;s++){var u=n+i.tab;o+=u+t(e[s],u,!1),s<e.length-1&&(o+=","),o+=i.lineBreak}o+=n+"]"}else o="number"!==a&&"boolean"!==a?'"'+escapeNewLines(toStr(e).replace(/\"/g,'\\"'))+'"':e;return o}var n,r,i=this,o=this.getDataValues(e,this.combineMessages),a="{"+this.lineBreak;for(n=0,r=o.length-1;r>=n;n++)a+=this.tab+'"'+o[n][0]+'"'+this.colon+t(o[n][1],this.tab,!0),r>n&&(a+=","),a+=this.lineBreak;return a+="}"+this.lineBreak},JsonLayout.prototype.ignoresThrowable=function(){return!1},JsonLayout.prototype.toString=function(){return"JsonLayout"},JsonLayout.prototype.getContentType=function(){return"application/json"},log4javascript.JsonLayout=JsonLayout,HttpPostDataLayout.prototype=new Layout,HttpPostDataLayout.prototype.allowBatching=function(){return!1},HttpPostDataLayout.prototype.format=function(e){for(var t=this.getDataValues(e),n=[],r=0,i=t.length;i>r;r++){var o=t[r][1]instanceof Date?String(t[r][1].getTime()):t[r][1];n.push(urlEncode(t[r][0])+"="+urlEncode(o))}return n.join("&")},HttpPostDataLayout.prototype.ignoresThrowable=function(e){return!1},HttpPostDataLayout.prototype.toString=function(){return"HttpPostDataLayout"},log4javascript.HttpPostDataLayout=HttpPostDataLayout;var SimpleDateFormat;!function(){var e=/('[^']*')|(G+|y+|M+|w+|W+|D+|d+|F+|E+|a+|H+|k+|K+|h+|m+|s+|S+|Z+)|([a-zA-Z]+)|([^a-zA-Z']+)/,t=["January","February","March","April","May","June","July","August","September","October","November","December"],n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],r=0,i=1,o=2,a=3,s=4,l=5,u={G:r,y:a,M:s,w:o,W:o,D:o,d:o,F:o,E:i,a:r,H:o,k:o,K:o,h:o,m:o,s:o,S:o,Z:l},c=864e5,p=7*c,h=1,d=function(e,t,n){var r=new Date(e,t,n,0,0,0);return r.setMilliseconds(0),r};Date.prototype.getDifference=function(e){return this.getTime()-e.getTime()},Date.prototype.isBefore=function(e){return this.getTime()<e.getTime()},Date.prototype.getUTCTime=function(){return Date.UTC(this.getFullYear(),this.getMonth(),this.getDate(),this.getHours(),this.getMinutes(),this.getSeconds(),this.getMilliseconds())},Date.prototype.getTimeSince=function(e){return this.getUTCTime()-e.getUTCTime()},Date.prototype.getPreviousSunday=function(){var e=new Date(this.getFullYear(),this.getMonth(),this.getDate(),12,0,0),t=new Date(e.getTime()-this.getDay()*c);return d(t.getFullYear(),t.getMonth(),t.getDate())},Date.prototype.getWeekInYear=function(e){isUndefined(this.minimalDaysInFirstWeek)&&(e=h);var t=this.getPreviousSunday(),n=d(this.getFullYear(),0,1),r=t.isBefore(n)?0:1+Math.floor(t.getTimeSince(n)/p),i=7-n.getDay(),o=r;return e>i&&o--,o},Date.prototype.getWeekInMonth=function(e){isUndefined(this.minimalDaysInFirstWeek)&&(e=h);var t=this.getPreviousSunday(),n=d(this.getFullYear(),this.getMonth(),1),r=t.isBefore(n)?0:1+Math.floor(t.getTimeSince(n)/p),i=7-n.getDay(),o=r;return i>=e&&o++,o},Date.prototype.getDayInYear=function(){var e=d(this.getFullYear(),0,1);return 1+Math.floor(this.getTimeSince(e)/c)},SimpleDateFormat=function(e){this.formatString=e},SimpleDateFormat.prototype.setMinimalDaysInFirstWeek=function(e){this.minimalDaysInFirstWeek=e},SimpleDateFormat.prototype.getMinimalDaysInFirstWeek=function(){return isUndefined(this.minimalDaysInFirstWeek)?h:this.minimalDaysInFirstWeek};var f=function(e,t){for(;e.length<t;)e="0"+e;return e},g=function(e,t,n){return t>=4?e:e.substr(0,Math.max(n,t))},m=function(e,t){var n=""+e;return f(n,t)};SimpleDateFormat.prototype.format=function(c){for(var p,h="",d=this.formatString;p=e.exec(d);){var v=p[1],y=p[2],$=p[3],b=p[4];if(v)h+="''"==v?"'":v.substring(1,v.length-1);else if($);else if(b)h+=b;else if(y){var w=y.charAt(0),x=y.length,E="";switch(w){case"G":E="AD";break;case"y":E=c.getFullYear();break;case"M":E=c.getMonth();break;case"w":E=c.getWeekInYear(this.getMinimalDaysInFirstWeek());break;case"W":E=c.getWeekInMonth(this.getMinimalDaysInFirstWeek());break;case"D":E=c.getDayInYear();break;case"d":E=c.getDate();break;case"F":E=1+Math.floor((c.getDate()-1)/7);break;case"E":E=n[c.getDay()];break;case"a":E=c.getHours()>=12?"PM":"AM";break;case"H":E=c.getHours();break;case"k":E=c.getHours()||24;break;case"K":E=c.getHours()%12;break;case"h":E=c.getHours()%12||12;break;case"m":E=c.getMinutes();break;case"s":E=c.getSeconds();break;case"S":E=c.getMilliseconds();break;case"Z":E=c.getTimezoneOffset()}switch(u[w]){case r:h+=g(E,x,2);break;case i:h+=g(E,x,3);break;case o:h+=m(E,x);break;case a:if(3>=x){var C=""+E;h+=C.substr(2,2)}else h+=m(E,x);break;case s:h+=x>=3?g(t[E],x,x):m(E+1,x);break;case l:var S=E>0,T=S?"-":"+",A=Math.abs(E),N=""+Math.floor(A/60);N=f(N,2);var L=""+A%60;L=f(L,2),h+=T+N+L}}d=d.substr(p.index+p[0].length)}return h}}(),log4javascript.SimpleDateFormat=SimpleDateFormat,PatternLayout.TTCC_CONVERSION_PATTERN="%r %p %c - %m%n",PatternLayout.DEFAULT_CONVERSION_PATTERN="%m%n",PatternLayout.ISO8601_DATEFORMAT="yyyy-MM-dd HH:mm:ss,SSS",PatternLayout.DATETIME_DATEFORMAT="dd MMM yyyy HH:mm:ss,SSS",PatternLayout.ABSOLUTETIME_DATEFORMAT="HH:mm:ss,SSS",PatternLayout.prototype=new Layout,PatternLayout.prototype.format=function(e){for(var t,n=/%(-?[0-9]+)?(\.?[0-9]+)?([acdfmMnpr%])(\{([^\}]+)\})?|([^%]+)/,r="",i=this.pattern;t=n.exec(i);){var o=t[0],a=t[1],s=t[2],l=t[3],u=t[5],c=t[6];if(c)r+=""+c;else{var p="";switch(l){case"a":case"m":var h=0;u&&(h=parseInt(u,10),isNaN(h)&&(handleError("PatternLayout.format: invalid specifier '"+u+"' for conversion character '"+l+"' - should be a number"),h=0));for(var d="a"===l?e.messages[0]:e.messages,f=0,g=d.length;g>f;f++)f>0&&" "!==p.charAt(p.length-1)&&(p+=" "),p+=0===h?d[f]:formatObjectExpansion(d[f],h);break;case"c":var m=e.logger.name;if(u){var v=parseInt(u,10),y=e.logger.name.split(".");p=v>=y.length?m:y.slice(y.length-v).join(".")}else p=m;break;case"d":var $=PatternLayout.ISO8601_DATEFORMAT;u&&($=u,"ISO8601"==$?$=PatternLayout.ISO8601_DATEFORMAT:"ABSOLUTE"==$?$=PatternLayout.ABSOLUTETIME_DATEFORMAT:"DATE"==$&&($=PatternLayout.DATETIME_DATEFORMAT)),p=new SimpleDateFormat($).format(e.timeStamp);break;case"f":
if(this.hasCustomFields()){var b=0;u&&(b=parseInt(u,10),isNaN(b)?handleError("PatternLayout.format: invalid specifier '"+u+"' for conversion character 'f' - should be a number"):0===b?handleError("PatternLayout.format: invalid specifier '"+u+"' for conversion character 'f' - must be greater than zero"):b>this.customFields.length?handleError("PatternLayout.format: invalid specifier '"+u+"' for conversion character 'f' - there aren't that many custom fields"):b-=1);var w=this.customFields[b].value;"function"==typeof w&&(w=w(this,e)),p=w}break;case"n":p=newLine;break;case"p":p=e.level.name;break;case"r":p=""+e.timeStamp.getDifference(applicationStartDate);break;case"%":p="%";break;default:p=o}var x;if(s){x=parseInt(s.substr(1),10);var E=p.length;E>x&&(p=p.substring(E-x,E))}if(a)if("-"==a.charAt(0))for(x=parseInt(a.substr(1),10);p.length<x;)p+=" ";else for(x=parseInt(a,10);p.length<x;)p=" "+p;r+=p}i=i.substr(t.index+t[0].length)}return r},PatternLayout.prototype.ignoresThrowable=function(){return!0},PatternLayout.prototype.toString=function(){return"PatternLayout"},log4javascript.PatternLayout=PatternLayout,AlertAppender.prototype=new Appender,AlertAppender.prototype.layout=new SimpleLayout,AlertAppender.prototype.append=function(e){alert(this.getLayout().formatWithException(e))},AlertAppender.prototype.toString=function(){return"AlertAppender"},log4javascript.AlertAppender=AlertAppender,BrowserConsoleAppender.prototype=new log4javascript.Appender,BrowserConsoleAppender.prototype.layout=new NullLayout,BrowserConsoleAppender.prototype.threshold=Level.DEBUG,BrowserConsoleAppender.prototype.append=function(e){var t,n=this,r=function(){var t=n.getLayout().formatWithException(e);return"string"==typeof t?[t]:t};if((t=window.console)&&t.log){var i,o=r();i=t.debug&&Level.DEBUG.isGreaterOrEqual(e.level)?"debug":t.info&&Level.INFO.equals(e.level)?"info":t.warn&&Level.WARN.equals(e.level)?"warn":t.error&&e.level.isGreaterOrEqual(Level.ERROR)?"error":"log",t[i].apply?t[i].apply(t,o):t[i](o)}else"undefined"!=typeof opera&&opera.postError&&opera.postError(r())},BrowserConsoleAppender.prototype.group=function(e){window.console&&window.console.group&&window.console.group(e)},BrowserConsoleAppender.prototype.groupEnd=function(){window.console&&window.console.groupEnd&&window.console.groupEnd()},BrowserConsoleAppender.prototype.toString=function(){return"BrowserConsoleAppender"},log4javascript.BrowserConsoleAppender=BrowserConsoleAppender;var xhrFactory=function(){return new XMLHttpRequest},xmlHttpFactories=[xhrFactory,function(){return new ActiveXObject("Msxml2.XMLHTTP")},function(){return new ActiveXObject("Microsoft.XMLHTTP")}],withCredentialsSupported=!1,getXmlHttp=function(e){for(var t,n=null,r=0,i=xmlHttpFactories.length;i>r;r++){t=xmlHttpFactories[r];try{return n=t(),withCredentialsSupported=t==xhrFactory&&"withCredentials"in n,getXmlHttp=t,n}catch(o){}}e?e():handleError("getXmlHttp: unable to obtain XMLHttpRequest object")};AjaxAppender.prototype=new Appender,AjaxAppender.prototype.defaults={waitForResponse:!1,timed:!1,timerInterval:1e3,batchSize:1,sendAllOnUnload:!1,requestSuccessCallback:null,failCallback:null,postVarName:"data",contentType:"application/x-www-form-urlencoded"},AjaxAppender.prototype.layout=new HttpPostDataLayout,AjaxAppender.prototype.toString=function(){return"AjaxAppender"},log4javascript.AjaxAppender=AjaxAppender;var ConsoleAppender;if(function(){function e(e,t,n,r,i){this.create(!1,null,e,t,n,r,i,this.defaults.focusPopUp)}function t(e,t,n,r,i,o){this.create(!0,e,t,n,r,i,o,!1)}var n=function(){return['<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">','<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">',"<head>","<title>log4javascript</title>",'<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />',"<!-- Make IE8 behave like IE7, having gone to all the trouble of making IE work -->",'<meta http-equiv="X-UA-Compatible" content="IE=7" />','<script type="text/javascript">var isIe = false, isIePre7 = false;</script>','<!--[if IE]><script type="text/javascript">isIe = true</script><![endif]-->','<!--[if lt IE 7]><script type="text/javascript">isIePre7 = true</script><![endif]-->','<script type="text/javascript">',"//<![CDATA[","var loggingEnabled=true;var logQueuedEventsTimer=null;var logEntries=[];var logEntriesAndSeparators=[];var logItems=[];var renderDelay=100;var unrenderedLogItemsExist=false;var rootGroup,currentGroup=null;var loaded=false;var currentLogItem=null;var logMainContainer;function copyProperties(obj,props){for(var i in props){obj[i]=props[i];}}","function LogItem(){}","LogItem.prototype={mainContainer:null,wrappedContainer:null,unwrappedContainer:null,group:null,appendToLog:function(){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].appendToLog();}","this.group.update();},doRemove:function(doUpdate,removeFromGroup){if(this.rendered){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].remove();}","this.unwrappedElementContainer=null;this.wrappedElementContainer=null;this.mainElementContainer=null;}","if(this.group&&removeFromGroup){this.group.removeChild(this,doUpdate);}","if(this===currentLogItem){currentLogItem=null;}},remove:function(doUpdate,removeFromGroup){this.doRemove(doUpdate,removeFromGroup);},render:function(){},accept:function(visitor){visitor.visit(this);},getUnwrappedDomContainer:function(){return this.group.unwrappedElementContainer.contentDiv;},getWrappedDomContainer:function(){return this.group.wrappedElementContainer.contentDiv;},getMainDomContainer:function(){return this.group.mainElementContainer.contentDiv;}};LogItem.serializedItemKeys={LOG_ENTRY:0,GROUP_START:1,GROUP_END:2};function LogItemContainerElement(){}",'LogItemContainerElement.prototype={appendToLog:function(){var insertBeforeFirst=(newestAtTop&&this.containerDomNode.hasChildNodes());if(insertBeforeFirst){this.containerDomNode.insertBefore(this.mainDiv,this.containerDomNode.firstChild);}else{this.containerDomNode.appendChild(this.mainDiv);}}};function SeparatorElementContainer(containerDomNode){this.containerDomNode=containerDomNode;this.mainDiv=document.createElement("div");this.mainDiv.className="separator";this.mainDiv.innerHTML="&nbsp;";}',"SeparatorElementContainer.prototype=new LogItemContainerElement();SeparatorElementContainer.prototype.remove=function(){this.mainDiv.parentNode.removeChild(this.mainDiv);this.mainDiv=null;};function Separator(){this.rendered=false;}","Separator.prototype=new LogItem();copyProperties(Separator.prototype,{render:function(){var containerDomNode=this.group.contentDiv;if(isIe){this.unwrappedElementContainer=new SeparatorElementContainer(this.getUnwrappedDomContainer());this.wrappedElementContainer=new SeparatorElementContainer(this.getWrappedDomContainer());this.elementContainers=[this.unwrappedElementContainer,this.wrappedElementContainer];}else{this.mainElementContainer=new SeparatorElementContainer(this.getMainDomContainer());this.elementContainers=[this.mainElementContainer];}",'this.content=this.formattedMessage;this.rendered=true;}});function GroupElementContainer(group,containerDomNode,isRoot,isWrapped){this.group=group;this.containerDomNode=containerDomNode;this.isRoot=isRoot;this.isWrapped=isWrapped;this.expandable=false;if(this.isRoot){if(isIe){this.contentDiv=logMainContainer.appendChild(document.createElement("div"));this.contentDiv.id=this.isWrapped?"log_wrapped":"log_unwrapped";}else{this.contentDiv=logMainContainer;}}else{var groupElementContainer=this;this.mainDiv=document.createElement("div");this.mainDiv.className="group";this.headingDiv=this.mainDiv.appendChild(document.createElement("div"));this.headingDiv.className="groupheading";this.expander=this.headingDiv.appendChild(document.createElement("span"));this.expander.className="expander unselectable greyedout";this.expander.unselectable=true;var expanderText=this.group.expanded?"-":"+";this.expanderTextNode=this.expander.appendChild(document.createTextNode(expanderText));this.headingDiv.appendChild(document.createTextNode(" "+this.group.name));this.contentDiv=this.mainDiv.appendChild(document.createElement("div"));var contentCssClass=this.group.expanded?"expanded":"collapsed";this.contentDiv.className="groupcontent "+contentCssClass;this.expander.onclick=function(){if(groupElementContainer.group.expandable){groupElementContainer.group.toggleExpanded();}};}}','GroupElementContainer.prototype=new LogItemContainerElement();copyProperties(GroupElementContainer.prototype,{toggleExpanded:function(){if(!this.isRoot){var oldCssClass,newCssClass,expanderText;if(this.group.expanded){newCssClass="expanded";oldCssClass="collapsed";expanderText="-";}else{newCssClass="collapsed";oldCssClass="expanded";expanderText="+";}',"replaceClass(this.contentDiv,newCssClass,oldCssClass);this.expanderTextNode.nodeValue=expanderText;}},remove:function(){if(!this.isRoot){this.headingDiv=null;this.expander.onclick=null;this.expander=null;this.expanderTextNode=null;this.contentDiv=null;this.containerDomNode=null;this.mainDiv.parentNode.removeChild(this.mainDiv);this.mainDiv=null;}},reverseChildren:function(){var node=null;var childDomNodes=[];while((node=this.contentDiv.firstChild)){this.contentDiv.removeChild(node);childDomNodes.push(node);}",'while((node=childDomNodes.pop())){this.contentDiv.appendChild(node);}},update:function(){if(!this.isRoot){if(this.group.expandable){removeClass(this.expander,"greyedout");}else{addClass(this.expander,"greyedout");}}},clear:function(){if(this.isRoot){this.contentDiv.innerHTML="";}}});function Group(name,isRoot,initiallyExpanded){this.name=name;this.group=null;this.isRoot=isRoot;this.initiallyExpanded=initiallyExpanded;this.elementContainers=[];this.children=[];this.expanded=initiallyExpanded;this.rendered=false;this.expandable=false;}',"Group.prototype=new LogItem();copyProperties(Group.prototype,{addChild:function(logItem){this.children.push(logItem);logItem.group=this;},render:function(){if(isIe){var unwrappedDomContainer,wrappedDomContainer;if(this.isRoot){unwrappedDomContainer=logMainContainer;wrappedDomContainer=logMainContainer;}else{unwrappedDomContainer=this.getUnwrappedDomContainer();wrappedDomContainer=this.getWrappedDomContainer();}","this.unwrappedElementContainer=new GroupElementContainer(this,unwrappedDomContainer,this.isRoot,false);this.wrappedElementContainer=new GroupElementContainer(this,wrappedDomContainer,this.isRoot,true);this.elementContainers=[this.unwrappedElementContainer,this.wrappedElementContainer];}else{var mainDomContainer=this.isRoot?logMainContainer:this.getMainDomContainer();this.mainElementContainer=new GroupElementContainer(this,mainDomContainer,this.isRoot,false);this.elementContainers=[this.mainElementContainer];}","this.rendered=true;},toggleExpanded:function(){this.expanded=!this.expanded;for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].toggleExpanded();}},expand:function(){if(!this.expanded){this.toggleExpanded();}},accept:function(visitor){visitor.visitGroup(this);},reverseChildren:function(){if(this.rendered){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].reverseChildren();}}},update:function(){var previouslyExpandable=this.expandable;this.expandable=(this.children.length!==0);if(this.expandable!==previouslyExpandable){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].update();}}},flatten:function(){var visitor=new GroupFlattener();this.accept(visitor);return visitor.logEntriesAndSeparators;},removeChild:function(child,doUpdate){array_remove(this.children,child);child.group=null;if(doUpdate){this.update();}},remove:function(doUpdate,removeFromGroup){for(var i=0,len=this.children.length;i<len;i++){this.children[i].remove(false,false);}","this.children=[];this.update();if(this===currentGroup){currentGroup=this.group;}","this.doRemove(doUpdate,removeFromGroup);},serialize:function(items){items.push([LogItem.serializedItemKeys.GROUP_START,this.name]);for(var i=0,len=this.children.length;i<len;i++){this.children[i].serialize(items);}","if(this!==currentGroup){items.push([LogItem.serializedItemKeys.GROUP_END]);}},clear:function(){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].clear();}}});function LogEntryElementContainer(){}",'LogEntryElementContainer.prototype=new LogItemContainerElement();copyProperties(LogEntryElementContainer.prototype,{remove:function(){this.doRemove();},doRemove:function(){this.mainDiv.parentNode.removeChild(this.mainDiv);this.mainDiv=null;this.contentElement=null;this.containerDomNode=null;},setContent:function(content,wrappedContent){if(content===this.formattedMessage){this.contentElement.innerHTML="";this.contentElement.appendChild(document.createTextNode(this.formattedMessage));}else{this.contentElement.innerHTML=content;}},setSearchMatch:function(isMatch){var oldCssClass=isMatch?"searchnonmatch":"searchmatch";var newCssClass=isMatch?"searchmatch":"searchnonmatch";replaceClass(this.mainDiv,newCssClass,oldCssClass);},clearSearch:function(){removeClass(this.mainDiv,"searchmatch");removeClass(this.mainDiv,"searchnonmatch");}});function LogEntryWrappedElementContainer(logEntry,containerDomNode){this.logEntry=logEntry;this.containerDomNode=containerDomNode;this.mainDiv=document.createElement("div");this.mainDiv.appendChild(document.createTextNode(this.logEntry.formattedMessage));this.mainDiv.className="logentry wrapped "+this.logEntry.level;this.contentElement=this.mainDiv;}','LogEntryWrappedElementContainer.prototype=new LogEntryElementContainer();LogEntryWrappedElementContainer.prototype.setContent=function(content,wrappedContent){if(content===this.formattedMessage){this.contentElement.innerHTML="";this.contentElement.appendChild(document.createTextNode(this.formattedMessage));}else{this.contentElement.innerHTML=wrappedContent;}};function LogEntryUnwrappedElementContainer(logEntry,containerDomNode){this.logEntry=logEntry;this.containerDomNode=containerDomNode;this.mainDiv=document.createElement("div");this.mainDiv.className="logentry unwrapped "+this.logEntry.level;this.pre=this.mainDiv.appendChild(document.createElement("pre"));this.pre.appendChild(document.createTextNode(this.logEntry.formattedMessage));this.pre.className="unwrapped";this.contentElement=this.pre;}','LogEntryUnwrappedElementContainer.prototype=new LogEntryElementContainer();LogEntryUnwrappedElementContainer.prototype.remove=function(){this.doRemove();this.pre=null;};function LogEntryMainElementContainer(logEntry,containerDomNode){this.logEntry=logEntry;this.containerDomNode=containerDomNode;this.mainDiv=document.createElement("div");this.mainDiv.className="logentry nonielogentry "+this.logEntry.level;this.contentElement=this.mainDiv.appendChild(document.createElement("span"));this.contentElement.appendChild(document.createTextNode(this.logEntry.formattedMessage));}',"LogEntryMainElementContainer.prototype=new LogEntryElementContainer();function LogEntry(level,formattedMessage){this.level=level;this.formattedMessage=formattedMessage;this.rendered=false;}",'LogEntry.prototype=new LogItem();copyProperties(LogEntry.prototype,{render:function(){var logEntry=this;var containerDomNode=this.group.contentDiv;if(isIe){this.formattedMessage=this.formattedMessage.replace(/\\r\\n/g,"\\r");this.unwrappedElementContainer=new LogEntryUnwrappedElementContainer(this,this.getUnwrappedDomContainer());this.wrappedElementContainer=new LogEntryWrappedElementContainer(this,this.getWrappedDomContainer());this.elementContainers=[this.unwrappedElementContainer,this.wrappedElementContainer];}else{this.mainElementContainer=new LogEntryMainElementContainer(this,this.getMainDomContainer());this.elementContainers=[this.mainElementContainer];}','this.content=this.formattedMessage;this.rendered=true;},setContent:function(content,wrappedContent){if(content!=this.content){if(isIe&&(content!==this.formattedMessage)){content=content.replace(/\\r\\n/g,"\\r");}',"for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].setContent(content,wrappedContent);}",'this.content=content;}},getSearchMatches:function(){var matches=[];var i,len;if(isIe){var unwrappedEls=getElementsByClass(this.unwrappedElementContainer.mainDiv,"searchterm","span");var wrappedEls=getElementsByClass(this.wrappedElementContainer.mainDiv,"searchterm","span");for(i=0,len=unwrappedEls.length;i<len;i++){matches[i]=new Match(this.level,null,unwrappedEls[i],wrappedEls[i]);}}else{var els=getElementsByClass(this.mainElementContainer.mainDiv,"searchterm","span");for(i=0,len=els.length;i<len;i++){matches[i]=new Match(this.level,els[i]);}}',"return matches;},setSearchMatch:function(isMatch){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].setSearchMatch(isMatch);}},clearSearch:function(){for(var i=0,len=this.elementContainers.length;i<len;i++){this.elementContainers[i].clearSearch();}},accept:function(visitor){visitor.visitLogEntry(this);},serialize:function(items){items.push([LogItem.serializedItemKeys.LOG_ENTRY,this.level,this.formattedMessage]);}});function LogItemVisitor(){}","LogItemVisitor.prototype={visit:function(logItem){},visitParent:function(logItem){if(logItem.group){logItem.group.accept(this);}},visitChildren:function(logItem){for(var i=0,len=logItem.children.length;i<len;i++){logItem.children[i].accept(this);}},visitLogEntry:function(logEntry){this.visit(logEntry);},visitSeparator:function(separator){this.visit(separator);},visitGroup:function(group){this.visit(group);}};function GroupFlattener(){this.logEntriesAndSeparators=[];}",'GroupFlattener.prototype=new LogItemVisitor();GroupFlattener.prototype.visitGroup=function(group){this.visitChildren(group);};GroupFlattener.prototype.visitLogEntry=function(logEntry){this.logEntriesAndSeparators.push(logEntry);};GroupFlattener.prototype.visitSeparator=function(separator){this.logEntriesAndSeparators.push(separator);};window.onload=function(){if(location.search){var queryBits=unescape(location.search).substr(1).split("&"),nameValueBits;for(var i=0,len=queryBits.length;i<len;i++){nameValueBits=queryBits[i].split("=");if(nameValueBits[0]=="log4javascript_domain"){document.domain=nameValueBits[1];break;}}}','logMainContainer=$("log");if(isIePre7){addClass(logMainContainer,"oldIe");}','rootGroup=new Group("root",true);rootGroup.render();currentGroup=rootGroup;setCommandInputWidth();setLogContainerHeight();toggleLoggingEnabled();toggleSearchEnabled();toggleSearchFilter();toggleSearchHighlight();applyFilters();checkAllLevels();toggleWrap();toggleNewestAtTop();toggleScrollToLatest();renderQueuedLogItems();loaded=true;$("command").value="";$("command").autocomplete="off";$("command").onkeydown=function(evt){evt=getEvent(evt);if(evt.keyCode==10||evt.keyCode==13){evalCommandLine();stopPropagation(evt);}else if(evt.keyCode==27){this.value="";this.focus();}else if(evt.keyCode==38&&commandHistory.length>0){currentCommandIndex=Math.max(0,currentCommandIndex-1);this.value=commandHistory[currentCommandIndex];moveCaretToEnd(this);}else if(evt.keyCode==40&&commandHistory.length>0){currentCommandIndex=Math.min(commandHistory.length-1,currentCommandIndex+1);this.value=commandHistory[currentCommandIndex];moveCaretToEnd(this);}};$("command").onkeypress=function(evt){evt=getEvent(evt);if(evt.keyCode==38&&commandHistory.length>0&&evt.preventDefault){evt.preventDefault();}};$("command").onkeyup=function(evt){evt=getEvent(evt);if(evt.keyCode==27&&evt.preventDefault){evt.preventDefault();this.focus();}};document.onkeydown=function keyEventHandler(evt){evt=getEvent(evt);switch(evt.keyCode){case 69:if(evt.shiftKey&&(evt.ctrlKey||evt.metaKey)){evalLastCommand();cancelKeyEvent(evt);return false;}',"break;case 75:if(evt.shiftKey&&(evt.ctrlKey||evt.metaKey)){focusSearch();cancelKeyEvent(evt);return false;}","break;case 40:case 76:if(evt.shiftKey&&(evt.ctrlKey||evt.metaKey)){focusCommandLine();cancelKeyEvent(evt);return false;}","break;}};setTimeout(setLogContainerHeight,20);setShowCommandLine(showCommandLine);doSearch();};window.onunload=function(){if(mainWindowExists()){appender.unload();}",'appender=null;};function toggleLoggingEnabled(){setLoggingEnabled($("enableLogging").checked);}',"function setLoggingEnabled(enable){loggingEnabled=enable;}","var appender=null;function setAppender(appenderParam){appender=appenderParam;}",'function setShowCloseButton(showCloseButton){$("closeButton").style.display=showCloseButton?"inline":"none";}','function setShowHideButton(showHideButton){$("hideButton").style.display=showHideButton?"inline":"none";}',"var newestAtTop=false;function LogItemContentReverser(){}","LogItemContentReverser.prototype=new LogItemVisitor();LogItemContentReverser.prototype.visitGroup=function(group){group.reverseChildren();this.visitChildren(group);};function setNewestAtTop(isNewestAtTop){var oldNewestAtTop=newestAtTop;var i,iLen,j,jLen;newestAtTop=Boolean(isNewestAtTop);if(oldNewestAtTop!=newestAtTop){var visitor=new LogItemContentReverser();rootGroup.accept(visitor);if(currentSearch){var currentMatch=currentSearch.matches[currentMatchIndex];var matchIndex=0;var matches=[];var actOnLogEntry=function(logEntry){var logEntryMatches=logEntry.getSearchMatches();for(j=0,jLen=logEntryMatches.length;j<jLen;j++){matches[matchIndex]=logEntryMatches[j];if(currentMatch&&logEntryMatches[j].equals(currentMatch)){currentMatchIndex=matchIndex;}","matchIndex++;}};if(newestAtTop){for(i=logEntries.length-1;i>=0;i--){actOnLogEntry(logEntries[i]);}}else{for(i=0,iLen=logEntries.length;i<iLen;i++){actOnLogEntry(logEntries[i]);}}","currentSearch.matches=matches;if(currentMatch){currentMatch.setCurrent();}}else if(scrollToLatest){doScrollToLatest();}}",'$("newestAtTop").checked=isNewestAtTop;}','function toggleNewestAtTop(){var isNewestAtTop=$("newestAtTop").checked;setNewestAtTop(isNewestAtTop);}',"var scrollToLatest=true;function setScrollToLatest(isScrollToLatest){scrollToLatest=isScrollToLatest;if(scrollToLatest){doScrollToLatest();}",'$("scrollToLatest").checked=isScrollToLatest;}','function toggleScrollToLatest(){var isScrollToLatest=$("scrollToLatest").checked;setScrollToLatest(isScrollToLatest);}','function doScrollToLatest(){var l=logMainContainer;if(typeof l.scrollTop!="undefined"){if(newestAtTop){l.scrollTop=0;}else{var latestLogEntry=l.lastChild;if(latestLogEntry){l.scrollTop=l.scrollHeight;}}}}',"var closeIfOpenerCloses=true;function setCloseIfOpenerCloses(isCloseIfOpenerCloses){closeIfOpenerCloses=isCloseIfOpenerCloses;}","var maxMessages=null;function setMaxMessages(max){maxMessages=max;pruneLogEntries();}",'var showCommandLine=false;function setShowCommandLine(isShowCommandLine){showCommandLine=isShowCommandLine;if(loaded){$("commandLine").style.display=showCommandLine?"block":"none";setCommandInputWidth();setLogContainerHeight();}}','function focusCommandLine(){if(loaded){$("command").focus();}}','function focusSearch(){if(loaded){$("searchBox").focus();}}',"function getLogItems(){var items=[];for(var i=0,len=logItems.length;i<len;i++){logItems[i].serialize(items);}","return items;}","function setLogItems(items){var loggingReallyEnabled=loggingEnabled;loggingEnabled=true;for(var i=0,len=items.length;i<len;i++){switch(items[i][0]){case LogItem.serializedItemKeys.LOG_ENTRY:log(items[i][1],items[i][2]);break;case LogItem.serializedItemKeys.GROUP_START:group(items[i][1]);break;case LogItem.serializedItemKeys.GROUP_END:groupEnd();break;}}","loggingEnabled=loggingReallyEnabled;}","function log(logLevel,formattedMessage){if(loggingEnabled){var logEntry=new LogEntry(logLevel,formattedMessage);logEntries.push(logEntry);logEntriesAndSeparators.push(logEntry);logItems.push(logEntry);currentGroup.addChild(logEntry);if(loaded){if(logQueuedEventsTimer!==null){clearTimeout(logQueuedEventsTimer);}","logQueuedEventsTimer=setTimeout(renderQueuedLogItems,renderDelay);unrenderedLogItemsExist=true;}}}","function renderQueuedLogItems(){logQueuedEventsTimer=null;var pruned=pruneLogEntries();var initiallyHasMatches=currentSearch?currentSearch.hasMatches():false;for(var i=0,len=logItems.length;i<len;i++){if(!logItems[i].rendered){logItems[i].render();logItems[i].appendToLog();if(currentSearch&&(logItems[i]instanceof LogEntry)){currentSearch.applyTo(logItems[i]);}}}","if(currentSearch){if(pruned){if(currentSearch.hasVisibleMatches()){if(currentMatchIndex===null){setCurrentMatchIndex(0);}","displayMatches();}else{displayNoMatches();}}else if(!initiallyHasMatches&&currentSearch.hasVisibleMatches()){setCurrentMatchIndex(0);displayMatches();}}","if(scrollToLatest){doScrollToLatest();}","unrenderedLogItemsExist=false;}","function pruneLogEntries(){if((maxMessages!==null)&&(logEntriesAndSeparators.length>maxMessages)){var numberToDelete=logEntriesAndSeparators.length-maxMessages;var prunedLogEntries=logEntriesAndSeparators.slice(0,numberToDelete);if(currentSearch){currentSearch.removeMatches(prunedLogEntries);}","var group;for(var i=0;i<numberToDelete;i++){group=logEntriesAndSeparators[i].group;array_remove(logItems,logEntriesAndSeparators[i]);array_remove(logEntries,logEntriesAndSeparators[i]);logEntriesAndSeparators[i].remove(true,true);if(group.children.length===0&&group!==currentGroup&&group!==rootGroup){array_remove(logItems,group);group.remove(true,true);}}","logEntriesAndSeparators=array_removeFromStart(logEntriesAndSeparators,numberToDelete);return true;}","return false;}",'function group(name,startExpanded){if(loggingEnabled){initiallyExpanded=(typeof startExpanded==="undefined")?true:Boolean(startExpanded);var newGroup=new Group(name,false,initiallyExpanded);currentGroup.addChild(newGroup);currentGroup=newGroup;logItems.push(newGroup);if(loaded){if(logQueuedEventsTimer!==null){clearTimeout(logQueuedEventsTimer);}',"logQueuedEventsTimer=setTimeout(renderQueuedLogItems,renderDelay);unrenderedLogItemsExist=true;}}}","function groupEnd(){currentGroup=(currentGroup===rootGroup)?rootGroup:currentGroup.group;}","function mainPageReloaded(){currentGroup=rootGroup;var separator=new Separator();logEntriesAndSeparators.push(separator);logItems.push(separator);currentGroup.addChild(separator);}","function closeWindow(){if(appender&&mainWindowExists()){appender.close(true);}else{window.close();}}","function hide(){if(appender&&mainWindowExists()){appender.hide();}}",'var mainWindow=window;var windowId="log4javascriptConsoleWindow_"+new Date().getTime()+"_"+(""+Math.random()).substr(2);function setMainWindow(win){mainWindow=win;mainWindow[windowId]=window;if(opener&&closeIfOpenerCloses){pollOpener();}}',"function pollOpener(){if(closeIfOpenerCloses){if(mainWindowExists()){setTimeout(pollOpener,500);}else{closeWindow();}}}","function mainWindowExists(){try{return(mainWindow&&!mainWindow.closed&&mainWindow[windowId]==window);}catch(ex){}","return false;}",'var logLevels=["TRACE","DEBUG","INFO","WARN","ERROR","FATAL"];function getCheckBox(logLevel){return $("switch_"+logLevel);}','function getIeWrappedLogContainer(){return $("log_wrapped");}','function getIeUnwrappedLogContainer(){return $("log_unwrapped");}',"function applyFilters(){for(var i=0;i<logLevels.length;i++){if(getCheckBox(logLevels[i]).checked){addClass(logMainContainer,logLevels[i]);}else{removeClass(logMainContainer,logLevels[i]);}}","updateSearchFromFilters();}",'function toggleAllLevels(){var turnOn=$("switch_ALL").checked;for(var i=0;i<logLevels.length;i++){getCheckBox(logLevels[i]).checked=turnOn;if(turnOn){addClass(logMainContainer,logLevels[i]);}else{removeClass(logMainContainer,logLevels[i]);}}}','function checkAllLevels(){for(var i=0;i<logLevels.length;i++){if(!getCheckBox(logLevels[i]).checked){getCheckBox("ALL").checked=false;return;}}','getCheckBox("ALL").checked=true;}',"function clearLog(){rootGroup.clear();currentGroup=rootGroup;logEntries=[];logItems=[];logEntriesAndSeparators=[];doSearch();}",'function toggleWrap(){var enable=$("wrap").checked;if(enable){addClass(logMainContainer,"wrap");}else{removeClass(logMainContainer,"wrap");}',"refreshCurrentMatch();}","var searchTimer=null;function scheduleSearch(){try{clearTimeout(searchTimer);}catch(ex){}","searchTimer=setTimeout(doSearch,500);}","function Search(searchTerm,isRegex,searchRegex,isCaseSensitive){this.searchTerm=searchTerm;this.isRegex=isRegex;this.searchRegex=searchRegex;this.isCaseSensitive=isCaseSensitive;this.matches=[];}","Search.prototype={hasMatches:function(){return this.matches.length>0;},hasVisibleMatches:function(){if(this.hasMatches()){for(var i=0;i<this.matches.length;i++){if(this.matches[i].isVisible()){return true;}}}","return false;},match:function(logEntry){var entryText=String(logEntry.formattedMessage);var matchesSearch=false;if(this.isRegex){matchesSearch=this.searchRegex.test(entryText);}else if(this.isCaseSensitive){matchesSearch=(entryText.indexOf(this.searchTerm)>-1);}else{matchesSearch=(entryText.toLowerCase().indexOf(this.searchTerm.toLowerCase())>-1);}","return matchesSearch;},getNextVisibleMatchIndex:function(){for(var i=currentMatchIndex+1;i<this.matches.length;i++){if(this.matches[i].isVisible()){return i;}}","for(i=0;i<=currentMatchIndex;i++){if(this.matches[i].isVisible()){return i;}}","return-1;},getPreviousVisibleMatchIndex:function(){for(var i=currentMatchIndex-1;i>=0;i--){if(this.matches[i].isVisible()){return i;}}","for(var i=this.matches.length-1;i>=currentMatchIndex;i--){if(this.matches[i].isVisible()){return i;}}",'return-1;},applyTo:function(logEntry){var doesMatch=this.match(logEntry);if(doesMatch){logEntry.group.expand();logEntry.setSearchMatch(true);var logEntryContent;var wrappedLogEntryContent;var searchTermReplacementStartTag="<span class=\\"searchterm\\">";var searchTermReplacementEndTag="<"+"/span>";var preTagName=isIe?"pre":"span";var preStartTag="<"+preTagName+" class=\\"pre\\">";var preEndTag="<"+"/"+preTagName+">";var startIndex=0;var searchIndex,matchedText,textBeforeMatch;if(this.isRegex){var flags=this.isCaseSensitive?"g":"gi";var capturingRegex=new RegExp("("+this.searchRegex.source+")",flags);var rnd=(""+Math.random()).substr(2);var startToken="%%s"+rnd+"%%";var endToken="%%e"+rnd+"%%";logEntryContent=logEntry.formattedMessage.replace(capturingRegex,startToken+"$1"+endToken);logEntryContent=escapeHtml(logEntryContent);var result;var searchString=logEntryContent;logEntryContent="";wrappedLogEntryContent="";while((searchIndex=searchString.indexOf(startToken,startIndex))>-1){var endTokenIndex=searchString.indexOf(endToken,searchIndex);matchedText=searchString.substring(searchIndex+startToken.length,endTokenIndex);textBeforeMatch=searchString.substring(startIndex,searchIndex);logEntryContent+=preStartTag+textBeforeMatch+preEndTag;logEntryContent+=searchTermReplacementStartTag+preStartTag+matchedText+',"preEndTag+searchTermReplacementEndTag;if(isIe){wrappedLogEntryContent+=textBeforeMatch+searchTermReplacementStartTag+","matchedText+searchTermReplacementEndTag;}","startIndex=endTokenIndex+endToken.length;}",'logEntryContent+=preStartTag+searchString.substr(startIndex)+preEndTag;if(isIe){wrappedLogEntryContent+=searchString.substr(startIndex);}}else{logEntryContent="";wrappedLogEntryContent="";var searchTermReplacementLength=searchTermReplacementStartTag.length+',"this.searchTerm.length+searchTermReplacementEndTag.length;var searchTermLength=this.searchTerm.length;var searchTermLowerCase=this.searchTerm.toLowerCase();var logTextLowerCase=logEntry.formattedMessage.toLowerCase();while((searchIndex=logTextLowerCase.indexOf(searchTermLowerCase,startIndex))>-1){matchedText=escapeHtml(logEntry.formattedMessage.substr(searchIndex,this.searchTerm.length));textBeforeMatch=escapeHtml(logEntry.formattedMessage.substring(startIndex,searchIndex));var searchTermReplacement=searchTermReplacementStartTag+","preStartTag+matchedText+preEndTag+searchTermReplacementEndTag;logEntryContent+=preStartTag+textBeforeMatch+preEndTag+searchTermReplacement;if(isIe){wrappedLogEntryContent+=textBeforeMatch+searchTermReplacementStartTag+","matchedText+searchTermReplacementEndTag;}","startIndex=searchIndex+searchTermLength;}","var textAfterLastMatch=escapeHtml(logEntry.formattedMessage.substr(startIndex));logEntryContent+=preStartTag+textAfterLastMatch+preEndTag;if(isIe){wrappedLogEntryContent+=textAfterLastMatch;}}","logEntry.setContent(logEntryContent,wrappedLogEntryContent);var logEntryMatches=logEntry.getSearchMatches();this.matches=this.matches.concat(logEntryMatches);}else{logEntry.setSearchMatch(false);logEntry.setContent(logEntry.formattedMessage,logEntry.formattedMessage);}","return doesMatch;},removeMatches:function(logEntries){var matchesToRemoveCount=0;var currentMatchRemoved=false;var matchesToRemove=[];var i,iLen,j,jLen;for(i=0,iLen=this.matches.length;i<iLen;i++){for(j=0,jLen=logEntries.length;j<jLen;j++){if(this.matches[i].belongsTo(logEntries[j])){matchesToRemove.push(this.matches[i]);if(i===currentMatchIndex){currentMatchRemoved=true;}}}}","var newMatch=currentMatchRemoved?null:this.matches[currentMatchIndex];if(currentMatchRemoved){for(i=currentMatchIndex,iLen=this.matches.length;i<iLen;i++){if(this.matches[i].isVisible()&&!array_contains(matchesToRemove,this.matches[i])){newMatch=this.matches[i];break;}}}","for(i=0,iLen=matchesToRemove.length;i<iLen;i++){array_remove(this.matches,matchesToRemove[i]);matchesToRemove[i].remove();}","if(this.hasVisibleMatches()){if(newMatch===null){setCurrentMatchIndex(0);}else{var newMatchIndex=0;for(i=0,iLen=this.matches.length;i<iLen;i++){if(newMatch===this.matches[i]){newMatchIndex=i;break;}}","setCurrentMatchIndex(newMatchIndex);}}else{currentMatchIndex=null;displayNoMatches();}}};function getPageOffsetTop(el,container){var currentEl=el;var y=0;while(currentEl&&currentEl!=container){y+=currentEl.offsetTop;currentEl=currentEl.offsetParent;}","return y;}",'function scrollIntoView(el){var logContainer=logMainContainer;if(!$("wrap").checked){var logContainerLeft=logContainer.scrollLeft;var logContainerRight=logContainerLeft+logContainer.offsetWidth;var elLeft=el.offsetLeft;var elRight=elLeft+el.offsetWidth;if(elLeft<logContainerLeft||elRight>logContainerRight){logContainer.scrollLeft=elLeft-(logContainer.offsetWidth-el.offsetWidth)/2;}}',"var logContainerTop=logContainer.scrollTop;var logContainerBottom=logContainerTop+logContainer.offsetHeight;var elTop=getPageOffsetTop(el)-getToolBarsHeight();var elBottom=elTop+el.offsetHeight;if(elTop<logContainerTop||elBottom>logContainerBottom){logContainer.scrollTop=elTop-(logContainer.offsetHeight-el.offsetHeight)/2;}}","function Match(logEntryLevel,spanInMainDiv,spanInUnwrappedPre,spanInWrappedDiv){this.logEntryLevel=logEntryLevel;this.spanInMainDiv=spanInMainDiv;if(isIe){this.spanInUnwrappedPre=spanInUnwrappedPre;this.spanInWrappedDiv=spanInWrappedDiv;}","this.mainSpan=isIe?spanInUnwrappedPre:spanInMainDiv;}",'Match.prototype={equals:function(match){return this.mainSpan===match.mainSpan;},setCurrent:function(){if(isIe){addClass(this.spanInUnwrappedPre,"currentmatch");addClass(this.spanInWrappedDiv,"currentmatch");var elementToScroll=$("wrap").checked?this.spanInWrappedDiv:this.spanInUnwrappedPre;scrollIntoView(elementToScroll);}else{addClass(this.spanInMainDiv,"currentmatch");scrollIntoView(this.spanInMainDiv);}},belongsTo:function(logEntry){if(isIe){return isDescendant(this.spanInUnwrappedPre,logEntry.unwrappedPre);}else{return isDescendant(this.spanInMainDiv,logEntry.mainDiv);}},setNotCurrent:function(){if(isIe){removeClass(this.spanInUnwrappedPre,"currentmatch");removeClass(this.spanInWrappedDiv,"currentmatch");}else{removeClass(this.spanInMainDiv,"currentmatch");}},isOrphan:function(){return isOrphan(this.mainSpan);},isVisible:function(){return getCheckBox(this.logEntryLevel).checked;},remove:function(){if(isIe){this.spanInUnwrappedPre=null;this.spanInWrappedDiv=null;}else{this.spanInMainDiv=null;}}};var currentSearch=null;var currentMatchIndex=null;function doSearch(){var searchBox=$("searchBox");var searchTerm=searchBox.value;var isRegex=$("searchRegex").checked;var isCaseSensitive=$("searchCaseSensitive").checked;var i;if(searchTerm===""){$("searchReset").disabled=true;$("searchNav").style.display="none";removeClass(document.body,"searching");removeClass(searchBox,"hasmatches");removeClass(searchBox,"nomatches");for(i=0;i<logEntries.length;i++){logEntries[i].clearSearch();logEntries[i].setContent(logEntries[i].formattedMessage,logEntries[i].formattedMessage);}','currentSearch=null;setLogContainerHeight();}else{$("searchReset").disabled=false;$("searchNav").style.display="block";var searchRegex;var regexValid;if(isRegex){try{searchRegex=isCaseSensitive?new RegExp(searchTerm,"g"):new RegExp(searchTerm,"gi");regexValid=true;replaceClass(searchBox,"validregex","invalidregex");searchBox.title="Valid regex";}catch(ex){regexValid=false;replaceClass(searchBox,"invalidregex","validregex");searchBox.title="Invalid regex: "+(ex.message?ex.message:(ex.description?ex.description:"unknown error"));return;}}else{searchBox.title="";removeClass(searchBox,"validregex");removeClass(searchBox,"invalidregex");}','addClass(document.body,"searching");currentSearch=new Search(searchTerm,isRegex,searchRegex,isCaseSensitive);for(i=0;i<logEntries.length;i++){currentSearch.applyTo(logEntries[i]);}',"setLogContainerHeight();if(currentSearch.hasVisibleMatches()){setCurrentMatchIndex(0);displayMatches();}else{displayNoMatches();}}}","function updateSearchFromFilters(){if(currentSearch){if(currentSearch.hasMatches()){if(currentMatchIndex===null){currentMatchIndex=0;}","var currentMatch=currentSearch.matches[currentMatchIndex];if(currentMatch.isVisible()){displayMatches();setCurrentMatchIndex(currentMatchIndex);}else{currentMatch.setNotCurrent();var nextVisibleMatchIndex=currentSearch.getNextVisibleMatchIndex();if(nextVisibleMatchIndex>-1){setCurrentMatchIndex(nextVisibleMatchIndex);displayMatches();}else{displayNoMatches();}}}else{displayNoMatches();}}}","function refreshCurrentMatch(){if(currentSearch&&currentSearch.hasVisibleMatches()){setCurrentMatchIndex(currentMatchIndex);}}",'function displayMatches(){replaceClass($("searchBox"),"hasmatches","nomatches");$("searchBox").title=""+currentSearch.matches.length+" matches found";$("searchNav").style.display="block";setLogContainerHeight();}','function displayNoMatches(){replaceClass($("searchBox"),"nomatches","hasmatches");$("searchBox").title="No matches found";$("searchNav").style.display="none";setLogContainerHeight();}','function toggleSearchEnabled(enable){enable=(typeof enable=="undefined")?!$("searchDisable").checked:enable;$("searchBox").disabled=!enable;$("searchReset").disabled=!enable;$("searchRegex").disabled=!enable;$("searchNext").disabled=!enable;$("searchPrevious").disabled=!enable;$("searchCaseSensitive").disabled=!enable;$("searchNav").style.display=(enable&&($("searchBox").value!=="")&&currentSearch&&currentSearch.hasVisibleMatches())?"block":"none";if(enable){removeClass($("search"),"greyedout");addClass(document.body,"searching");if($("searchHighlight").checked){addClass(logMainContainer,"searchhighlight");}else{removeClass(logMainContainer,"searchhighlight");}','if($("searchFilter").checked){addClass(logMainContainer,"searchfilter");}else{removeClass(logMainContainer,"searchfilter");}','$("searchDisable").checked=!enable;}else{addClass($("search"),"greyedout");removeClass(document.body,"searching");removeClass(logMainContainer,"searchhighlight");removeClass(logMainContainer,"searchfilter");}',"setLogContainerHeight();}",'function toggleSearchFilter(){var enable=$("searchFilter").checked;if(enable){addClass(logMainContainer,"searchfilter");}else{removeClass(logMainContainer,"searchfilter");}',"refreshCurrentMatch();}",'function toggleSearchHighlight(){var enable=$("searchHighlight").checked;if(enable){addClass(logMainContainer,"searchhighlight");}else{removeClass(logMainContainer,"searchhighlight");}}','function clearSearch(){$("searchBox").value="";doSearch();}','function searchNext(){if(currentSearch!==null&&currentMatchIndex!==null){currentSearch.matches[currentMatchIndex].setNotCurrent();var nextMatchIndex=currentSearch.getNextVisibleMatchIndex();if(nextMatchIndex>currentMatchIndex||confirm("Reached the end of the page. Start from the top?")){setCurrentMatchIndex(nextMatchIndex);}}}','function searchPrevious(){if(currentSearch!==null&&currentMatchIndex!==null){currentSearch.matches[currentMatchIndex].setNotCurrent();var previousMatchIndex=currentSearch.getPreviousVisibleMatchIndex();if(previousMatchIndex<currentMatchIndex||confirm("Reached the start of the page. Continue from the bottom?")){setCurrentMatchIndex(previousMatchIndex);}}}',"function setCurrentMatchIndex(index){currentMatchIndex=index;currentSearch.matches[currentMatchIndex].setCurrent();}",'function addClass(el,cssClass){if(!hasClass(el,cssClass)){if(el.className){el.className+=" "+cssClass;}else{el.className=cssClass;}}}','function hasClass(el,cssClass){if(el.className){var classNames=el.className.split(" ");return array_contains(classNames,cssClass);}',"return false;}",'function removeClass(el,cssClass){if(hasClass(el,cssClass)){var existingClasses=el.className.split(" ");var newClasses=[];for(var i=0,len=existingClasses.length;i<len;i++){if(existingClasses[i]!=cssClass){newClasses[newClasses.length]=existingClasses[i];}}','el.className=newClasses.join(" ");}}',"function replaceClass(el,newCssClass,oldCssClass){removeClass(el,oldCssClass);addClass(el,newCssClass);}","function getElementsByClass(el,cssClass,tagName){var elements=el.getElementsByTagName(tagName);var matches=[];for(var i=0,len=elements.length;i<len;i++){if(hasClass(elements[i],cssClass)){matches.push(elements[i]);}}","return matches;}","function $(id){return document.getElementById(id);}","function isDescendant(node,ancestorNode){while(node!=null){if(node===ancestorNode){return true;}","node=node.parentNode;}","return false;}","function isOrphan(node){var currentNode=node;while(currentNode){if(currentNode==document.body){return false;}","currentNode=currentNode.parentNode;}","return true;}",'function escapeHtml(str){return str.replace(/&/g,"&amp;").replace(/[<]/g,"&lt;").replace(/>/g,"&gt;");}',"function getWindowWidth(){if(window.innerWidth){return window.innerWidth;}else if(document.documentElement&&document.documentElement.clientWidth){return document.documentElement.clientWidth;}else if(document.body){return document.body.clientWidth;}","return 0;}","function getWindowHeight(){if(window.innerHeight){return window.innerHeight;}else if(document.documentElement&&document.documentElement.clientHeight){return document.documentElement.clientHeight;}else if(document.body){return document.body.clientHeight;}","return 0;}",'function getToolBarsHeight(){return $("switches").offsetHeight;}','function getChromeHeight(){var height=getToolBarsHeight();if(showCommandLine){height+=$("commandLine").offsetHeight;}',"return height;}",'function setLogContainerHeight(){if(logMainContainer){var windowHeight=getWindowHeight();$("body").style.height=getWindowHeight()+"px";logMainContainer.style.height=""+','Math.max(0,windowHeight-getChromeHeight())+"px";}}','function setCommandInputWidth(){if(showCommandLine){$("command").style.width=""+Math.max(0,$("commandLineContainer").offsetWidth-','($("evaluateButton").offsetWidth+13))+"px";}}',"window.onresize=function(){setCommandInputWidth();setLogContainerHeight();};if(!Array.prototype.push){Array.prototype.push=function(){for(var i=0,len=arguments.length;i<len;i++){this[this.length]=arguments[i];}","return this.length;};}","if(!Array.prototype.pop){Array.prototype.pop=function(){if(this.length>0){var val=this[this.length-1];this.length=this.length-1;return val;}};}","if(!Array.prototype.shift){Array.prototype.shift=function(){if(this.length>0){var firstItem=this[0];for(var i=0,len=this.length-1;i<len;i++){this[i]=this[i+1];}","this.length=this.length-1;return firstItem;}};}","if(!Array.prototype.splice){Array.prototype.splice=function(startIndex,deleteCount){var itemsAfterDeleted=this.slice(startIndex+deleteCount);var itemsDeleted=this.slice(startIndex,startIndex+deleteCount);this.length=startIndex;var argumentsArray=[];for(var i=0,len=arguments.length;i<len;i++){argumentsArray[i]=arguments[i];}","var itemsToAppend=(argumentsArray.length>2)?itemsAfterDeleted=argumentsArray.slice(2).concat(itemsAfterDeleted):itemsAfterDeleted;for(i=0,len=itemsToAppend.length;i<len;i++){this.push(itemsToAppend[i]);}","return itemsDeleted;};}","function array_remove(arr,val){var index=-1;for(var i=0,len=arr.length;i<len;i++){if(arr[i]===val){index=i;break;}}","if(index>=0){arr.splice(index,1);return index;}else{return false;}}","function array_removeFromStart(array,numberToRemove){if(Array.prototype.splice){array.splice(0,numberToRemove);}else{for(var i=numberToRemove,len=array.length;i<len;i++){array[i-numberToRemove]=array[i];}","array.length=array.length-numberToRemove;}","return array;}","function array_contains(arr,val){for(var i=0,len=arr.length;i<len;i++){if(arr[i]==val){return true;}}","return false;}","function getErrorMessage(ex){if(ex.message){return ex.message;}else if(ex.description){return ex.description;}",'return""+ex;}',"function moveCaretToEnd(input){if(input.setSelectionRange){input.focus();var length=input.value.length;input.setSelectionRange(length,length);}else if(input.createTextRange){var range=input.createTextRange();range.collapse(false);range.select();}","input.focus();}",'function stopPropagation(evt){if(evt.stopPropagation){evt.stopPropagation();}else if(typeof evt.cancelBubble!="undefined"){evt.cancelBubble=true;}}',"function getEvent(evt){return evt?evt:event;}","function getTarget(evt){return evt.target?evt.target:evt.srcElement;}",'function getRelatedTarget(evt){if(evt.relatedTarget){return evt.relatedTarget;}else if(evt.srcElement){switch(evt.type){case"mouseover":return evt.fromElement;case"mouseout":return evt.toElement;default:return evt.srcElement;}}}',"function cancelKeyEvent(evt){evt.returnValue=false;stopPropagation(evt);}",'function evalCommandLine(){var expr=$("command").value;evalCommand(expr);$("command").value="";}',"function evalLastCommand(){if(lastCommand!=null){evalCommand(lastCommand);}}",'var lastCommand=null;var commandHistory=[];var currentCommandIndex=0;function evalCommand(expr){if(appender){appender.evalCommandAndAppend(expr);}else{var prefix=">>> "+expr+"\\r\\n";try{log("INFO",prefix+eval(expr));}catch(ex){log("ERROR",prefix+"Error: "+getErrorMessage(ex));}}',"if(expr!=commandHistory[commandHistory.length-1]){commandHistory.push(expr);if(appender){appender.storeCommandHistory(commandHistory);}}","currentCommandIndex=(expr==commandHistory[currentCommandIndex])?currentCommandIndex+1:commandHistory.length;lastCommand=expr;}","//]]>","</script>",'<style type="text/css">',"body{background-color:white;color:black;padding:0;margin:0;font-family:tahoma,verdana,arial,helvetica,sans-serif;overflow:hidden}div#switchesContainer input{margin-bottom:0}div.toolbar{border-top:solid #ffffff 1px;border-bottom:solid #aca899 1px;background-color:#f1efe7;padding:3px 5px;font-size:68.75%}div.toolbar,div#search input{font-family:tahoma,verdana,arial,helvetica,sans-serif}div.toolbar input.button{padding:0 5px;font-size:100%}div.toolbar input.hidden{display:none}div#switches input#clearButton{margin-left:20px}div#levels label{font-weight:bold}div#levels label,div#options label{margin-right:5px}div#levels label#wrapLabel{font-weight:normal}div#search label{margin-right:10px}div#search label.searchboxlabel{margin-right:0}div#search input{font-size:100%}div#search input.validregex{color:green}div#search input.invalidregex{color:red}div#search input.nomatches{color:white;background-color:#ff6666}div#search input.nomatches{color:white;background-color:#ff6666}div#searchNav{display:none}div#commandLine{display:none}div#commandLine input#command{font-size:100%;font-family:Courier New,Courier}div#commandLine input#evaluateButton{}*.greyedout{color:gray !important;border-color:gray !important}*.greyedout *.alwaysenabled{color:black}*.unselectable{-khtml-user-select:none;-moz-user-select:none;user-select:none}div#log{font-family:Courier New,Courier;font-size:75%;width:100%;overflow:auto;clear:both;position:relative}div.group{border-color:#cccccc;border-style:solid;border-width:1px 0 1px 1px;overflow:visible}div.oldIe div.group,div.oldIe div.group *,div.oldIe *.logentry{height:1%}div.group div.groupheading span.expander{border:solid black 1px;font-family:Courier New,Courier;font-size:0.833em;background-color:#eeeeee;position:relative;top:-1px;color:black;padding:0 2px;cursor:pointer;cursor:hand;height:1%}div.group div.groupcontent{margin-left:10px;padding-bottom:2px;overflow:visible}div.group div.expanded{display:block}div.group div.collapsed{display:none}*.logentry{overflow:visible;display:none;white-space:pre}span.pre{white-space:pre}pre.unwrapped{display:inline !important}pre.unwrapped pre.pre,div.wrapped pre.pre{display:inline}div.wrapped pre.pre{white-space:normal}div.wrapped{display:none}body.searching *.logentry span.currentmatch{color:white !important;background-color:green !important}body.searching div.searchhighlight *.logentry span.searchterm{color:black;background-color:yellow}div.wrap *.logentry{white-space:normal !important;border-width:0 0 1px 0;border-color:#dddddd;border-style:dotted}div.wrap #log_wrapped,#log_unwrapped{display:block}div.wrap #log_unwrapped,#log_wrapped{display:none}div.wrap *.logentry span.pre{overflow:visible;white-space:normal}div.wrap *.logentry pre.unwrapped{display:none}div.wrap *.logentry span.wrapped{display:inline}div.searchfilter *.searchnonmatch{display:none !important}div#log *.TRACE,label#label_TRACE{color:#666666}div#log *.DEBUG,label#label_DEBUG{color:green}div#log *.INFO,label#label_INFO{color:#000099}div#log *.WARN,label#label_WARN{color:#999900}div#log *.ERROR,label#label_ERROR{color:red}div#log *.FATAL,label#label_FATAL{color:#660066}div.TRACE#log *.TRACE,div.DEBUG#log *.DEBUG,div.INFO#log *.INFO,div.WARN#log *.WARN,div.ERROR#log *.ERROR,div.FATAL#log *.FATAL{display:block}div#log div.separator{background-color:#cccccc;margin:5px 0;line-height:1px}","</style>","</head>",'<body id="body">','<div id="switchesContainer">','<div id="switches">','<div id="levels" class="toolbar">',"Filters:",'<input type="checkbox" id="switch_TRACE" onclick="applyFilters(); checkAllLevels()" checked="checked" title="Show/hide trace messages" /><label for="switch_TRACE" id="label_TRACE">trace</label>','<input type="checkbox" id="switch_DEBUG" onclick="applyFilters(); checkAllLevels()" checked="checked" title="Show/hide debug messages" /><label for="switch_DEBUG" id="label_DEBUG">debug</label>','<input type="checkbox" id="switch_INFO" onclick="applyFilters(); checkAllLevels()" checked="checked" title="Show/hide info messages" /><label for="switch_INFO" id="label_INFO">info</label>','<input type="checkbox" id="switch_WARN" onclick="applyFilters(); checkAllLevels()" checked="checked" title="Show/hide warn messages" /><label for="switch_WARN" id="label_WARN">warn</label>','<input type="checkbox" id="switch_ERROR" onclick="applyFilters(); checkAllLevels()" checked="checked" title="Show/hide error messages" /><label for="switch_ERROR" id="label_ERROR">error</label>','<input type="checkbox" id="switch_FATAL" onclick="applyFilters(); checkAllLevels()" checked="checked" title="Show/hide fatal messages" /><label for="switch_FATAL" id="label_FATAL">fatal</label>','<input type="checkbox" id="switch_ALL" onclick="toggleAllLevels(); applyFilters()" checked="checked" title="Show/hide all messages" /><label for="switch_ALL" id="label_ALL">all</label>',"</div>",'<div id="search" class="toolbar">','<label for="searchBox" class="searchboxlabel">Search:</label> <input type="text" id="searchBox" onclick="toggleSearchEnabled(true)" onkeyup="scheduleSearch()" size="20" />','<input type="button" id="searchReset" disabled="disabled" value="Reset" onclick="clearSearch()" class="button" title="Reset the search" />','<input type="checkbox" id="searchRegex" onclick="doSearch()" title="If checked, search is treated as a regular expression" /><label for="searchRegex">Regex</label>','<input type="checkbox" id="searchCaseSensitive" onclick="doSearch()" title="If checked, search is case sensitive" /><label for="searchCaseSensitive">Match case</label>','<input type="checkbox" id="searchDisable" onclick="toggleSearchEnabled()" title="Enable/disable search" /><label for="searchDisable" class="alwaysenabled">Disable</label>','<div id="searchNav">','<input type="button" id="searchNext" disabled="disabled" value="Next" onclick="searchNext()" class="button" title="Go to the next matching log entry" />','<input type="button" id="searchPrevious" disabled="disabled" value="Previous" onclick="searchPrevious()" class="button" title="Go to the previous matching log entry" />','<input type="checkbox" id="searchFilter" onclick="toggleSearchFilter()" title="If checked, non-matching log entries are filtered out" /><label for="searchFilter">Filter</label>','<input type="checkbox" id="searchHighlight" onclick="toggleSearchHighlight()" title="Highlight matched search terms" /><label for="searchHighlight" class="alwaysenabled">Highlight all</label>',"</div>","</div>",'<div id="options" class="toolbar">',"Options:",'<input type="checkbox" id="enableLogging" onclick="toggleLoggingEnabled()" checked="checked" title="Enable/disable logging" /><label for="enableLogging" id="enableLoggingLabel">Log</label>','<input type="checkbox" id="wrap" onclick="toggleWrap()" title="Enable / disable word wrap" /><label for="wrap" id="wrapLabel">Wrap</label>','<input type="checkbox" id="newestAtTop" onclick="toggleNewestAtTop()" title="If checked, causes newest messages to appear at the top" /><label for="newestAtTop" id="newestAtTopLabel">Newest at the top</label>','<input type="checkbox" id="scrollToLatest" onclick="toggleScrollToLatest()" checked="checked" title="If checked, window automatically scrolls to a new message when it is added" /><label for="scrollToLatest" id="scrollToLatestLabel">Scroll to latest</label>','<input type="button" id="clearButton" value="Clear" onclick="clearLog()" class="button" title="Clear all log messages"  />','<input type="button" id="hideButton" value="Hide" onclick="hide()" class="hidden button" title="Hide the console" />','<input type="button" id="closeButton" value="Close" onclick="closeWindow()" class="hidden button" title="Close the window" />',"</div>","</div>","</div>",'<div id="log" class="TRACE DEBUG INFO WARN ERROR FATAL"></div>','<div id="commandLine" class="toolbar">','<div id="commandLineContainer">','<input type="text" id="command" title="Enter a JavaScript command here and hit return or press \'Evaluate\'" />','<input type="button" id="evaluateButton" value="Evaluate" class="button" title="Evaluate the command" onclick="evalCommandLine()" />',"</div>","</div>","</body>","</html>",""];
},r=[];ConsoleAppender=function(){};var i=1;ConsoleAppender.prototype=new Appender,ConsoleAppender.prototype.create=function(e,t,o,a,s,l,u,c){function p(e,t){this.loggingEvent=e,this.levelName=e.level.name,this.formattedMessage=t}function h(e,t){this.name=e,this.initiallyExpanded=t}function d(){}var f=this,g=!1,m=!1,v=!1,y=!1,$=[],b=!0,w=i++;a=extractBooleanFromParam(a,this.defaults.initiallyMinimized),o=extractBooleanFromParam(o,this.defaults.lazyInit),s=extractBooleanFromParam(s,this.defaults.useDocumentWrite);var x=this.defaults.newestMessageAtTop,E=this.defaults.scrollToLatestMessage;l=l?l:this.defaults.width,u=u?u:this.defaults.height;var C=this.defaults.maxMessages,S=this.defaults.showCommandLine,T=this.defaults.commandLineObjectExpansionDepth,A=this.defaults.showHideButton,N=this.defaults.showCloseButton;this.defaults.showLogEntryDeleteButtons;this.setLayout(this.defaults.layout);var L,O,I,k,R,M=e?"InPageAppender":"PopUpAppender",D=function(e){return m?(handleError(M+": configuration option '"+e+"' may not be set after the appender has been initialized"),!1):!0},_=function(){return v&&b&&!y};this.isNewestMessageAtTop=function(){return x},this.setNewestMessageAtTop=function(e){x=bool(e),_()&&k().setNewestAtTop(x)},this.isScrollToLatestMessage=function(){return E},this.setScrollToLatestMessage=function(e){E=bool(e),_()&&k().setScrollToLatest(E)},this.getWidth=function(){return l},this.setWidth=function(e){D("width")&&(l=extractStringFromParam(e,l))},this.getHeight=function(){return u},this.setHeight=function(e){D("height")&&(u=extractStringFromParam(e,u))},this.getMaxMessages=function(){return C},this.setMaxMessages=function(e){C=extractIntFromParam(e,C),_()&&k().setMaxMessages(C)},this.isShowCommandLine=function(){return S},this.setShowCommandLine=function(e){S=bool(e),_()&&k().setShowCommandLine(S)},this.isShowHideButton=function(){return A},this.setShowHideButton=function(e){A=bool(e),_()&&k().setShowHideButton(A)},this.isShowCloseButton=function(){return N},this.setShowCloseButton=function(e){N=bool(e),_()&&k().setShowCloseButton(N)},this.getCommandLineObjectExpansionDepth=function(){return T},this.setCommandLineObjectExpansionDepth=function(e){T=extractIntFromParam(e,T)};var j=a;this.isInitiallyMinimized=function(){return a},this.setInitiallyMinimized=function(e){D("initiallyMinimized")&&(a=bool(e),j=a)},this.isUseDocumentWrite=function(){return s},this.setUseDocumentWrite=function(e){D("useDocumentWrite")&&(s=bool(e))},p.prototype.append=function(){k().log(this.levelName,this.formattedMessage)},h.prototype.append=function(){k().group(this.name,this.initiallyExpanded)},d.prototype.append=function(){k().groupEnd()};var P=function(){I(),g?y&&te&&O():L(),I()&&F()};this.append=function(e){if(b){var t=f.getLayout().formatWithException(e);$.push(new p(e,t)),P()}},this.group=function(e,t){b&&($.push(new h(e,t)),P())},this.groupEnd=function(){b&&($.push(new d),P())};var F=function(){for(;$.length>0;)$.shift().append();c&&k().focus()};this.setAddedToLogger=function(e){this.loggers.push(e),enabled&&!o&&L()},this.clear=function(){_()&&k().clearLog(),$.length=0},this.focus=function(){_()&&k().focus()},this.focusCommandLine=function(){_()&&k().focusCommandLine()},this.focusSearch=function(){_()&&k().focusSearch()};var q=window;this.getCommandWindow=function(){return q},this.setCommandWindow=function(e){q=e},this.executeLastCommand=function(){_()&&k().evalLastCommand()};var U=new PatternLayout("%m");this.getCommandLayout=function(){return U},this.setCommandLayout=function(e){U=e},this.evalCommandAndAppend=function(e){var t={appendResult:!0,isError:!1},n="";try{var r,i;!q.eval&&q.execScript&&q.execScript("null");var o={};for(i=0,len=B.length;i<len;i++)o[B[i][0]]=B[i][1];var a=[],s=function(e){a.push([e,q[e]])};s("appender"),q.appender=f,s("commandReturnValue"),q.commandReturnValue=t,s("commandLineFunctionsHash"),q.commandLineFunctionsHash=o;var l=function(e){s(e),q[e]=function(){return this.commandLineFunctionsHash[e](f,arguments,t)}};for(i=0,len=B.length;i<len;i++)l(B[i][0]);for(q===window&&q.execScript?(s("evalExpr"),s("result"),window.evalExpr=e,q.execScript("window.result=eval(window.evalExpr);"),r=window.result):r=q.eval(e),n=isUndefined(r)?r:formatObjectExpansion(r,T),i=0,len=a.length;i<len;i++)q[a[i][0]]=a[i][1]}catch(u){n="Error evaluating command: "+getExceptionStringRep(u),t.isError=!0}if(t.appendResult){var c=">>> "+e;isUndefined(n)||(c+=newLine+n);var p=t.isError?Level.ERROR:Level.INFO,h=new LoggingEvent(null,new Date,p,[c],null),d=this.getLayout();this.setLayout(U),this.append(h),this.setLayout(d)}};var B=r.concat([]);this.addCommandLineFunction=function(e,t){B.push([e,t])};var H="log4javascriptCommandHistory";this.storeCommandHistory=function(e){setCookie(H,e.join(","))};var V=function(e){var t=n();e.open();for(var r=0,i=t.length;i>r;r++)e.writeln(t[r]);e.close()};this.setEventTypes(["load","unload"]);var G=function(){var e=k();e.setAppender(f),e.setNewestAtTop(x),e.setScrollToLatest(E),e.setMaxMessages(C),e.setShowCommandLine(S),e.setShowHideButton(A),e.setShowCloseButton(N),e.setMainWindow(window);var t=getCookie(H);t&&(e.commandHistory=t.split(","),e.currentCommandIndex=e.commandHistory.length),f.dispatchEvent("load",{win:e})};this.unload=function(){logLog.debug("unload "+this+", caller: "+this.unload.caller),y||(logLog.debug("really doing unload "+this),y=!0,v=!1,m=!1,f.dispatchEvent("unload",{}))};var W=function(e,t,n,r){function i(){try{y&&clearInterval(o),e(k())&&(clearInterval(o),n())}catch(t){clearInterval(o),b=!1,handleError(r,t)}}var o=setInterval(i,t)},z=function(){var e=document.domain!=location.hostname;return s?"":getBaseUrl()+"console.html"+(e?"?log4javascript_domain="+escape(document.domain):"")};if(e){var K=null,Y=[];this.addCssProperty=function(e,t){D("cssProperties")&&Y.push([e,t])};var X,Q=!1,J=uniqueId+"_InPageAppender_"+w;this.hide=function(){g&&m&&(_()&&k().$("command").blur(),X.style.display="none",j=!0)},this.show=function(){g&&(m?(X.style.display="block",this.setShowCommandLine(S),j=!1):Q||O(!0))},this.isVisible=function(){return!j&&!y},this.close=function(e){y||e&&!confirm("This will permanently remove the console from the page. No more messages will be logged. Do you wish to continue?")||(X.parentNode.removeChild(X),this.unload())},R=function(){function e(){try{a||f.show(),G(),v=!0,F()}catch(e){b=!1,handleError(n,e)}}function t(){try{var t=function(e){return isLoaded(e)};s&&V(k().document),t(k())?e():W(t,100,e,n)}catch(r){b=!1,handleError(n,r)}}var n="InPageAppender.open: unable to create console iframe";j=!1,X=K.appendChild(document.createElement("div")),X.style.width=l,X.style.height=u,X.style.border="solid gray 1px";for(var r=0,i=Y.length;i>r;r++)X.style[Y[r][0]]=Y[r][1];var o=s?"":" src='"+z()+"'";X.innerHTML="<iframe id='"+J+"' name='"+J+"' width='100%' height='100%' frameborder='0'"+o+" scrolling='no'></iframe>",y=!1;var c=function(e){try{return bool(e)&&bool(e.document)}catch(t){return!1}};c(k())?t():W(c,100,t,n),m=!0},O=function(e){if(e||!a){var n=function(){if(t)try{var e=document.getElementById(t);1==e.nodeType&&(K=e),R()}catch(n){handleError("InPageAppender.init: invalid container element '"+t+"' supplied",n)}else K=document.createElement("div"),K.style.position="fixed",K.style.left="0",K.style.right="0",K.style.bottom="0",document.body.appendChild(K),f.addCssProperty("borderWidth","1px 0 0 0"),f.addCssProperty("zIndex",1e6),R()};pageLoaded&&t&&t.appendChild?(K=t,R()):pageLoaded?n():log4javascript.addEventListener("load",n),Q=!0}},L=function(){O(),g=!0},k=function(){var e=window.frames[J];return e?e:void 0},I=function(){return b&&!y?(m&&!v&&k()&&isLoaded(k())&&(v=!0),v):!1}}else{var Z=f.defaults.useOldPopUp,ee=f.defaults.complainAboutPopUpBlocking,te=this.defaults.reopenWhenClosed;this.isUseOldPopUp=function(){return Z},this.setUseOldPopUp=function(e){D("useOldPopUp")&&(Z=bool(e))},this.isComplainAboutPopUpBlocking=function(){return ee},this.setComplainAboutPopUpBlocking=function(e){D("complainAboutPopUpBlocking")&&(ee=bool(e))},this.isFocusPopUp=function(){return c},this.setFocusPopUp=function(e){c=bool(e)},this.isReopenWhenClosed=function(){return te},this.setReopenWhenClosed=function(e){te=bool(e)},this.close=function(){logLog.debug("close "+this);try{ne.close(),this.unload()}catch(e){}},this.hide=function(){logLog.debug("hide "+this),_()&&this.close()},this.show=function(){logLog.debug("show "+this),m||R()},this.isVisible=function(){return I()};var ne;R=function(){function e(){k().setCloseIfOpenerCloses(!Z||!s),G(),v=!0,F(),W(a,500,c,"PopUpAppender.checkPopUpClosed: error checking pop-up window")}var t="width="+l+",height="+u+",status,resizable",n="";try{var r=window.frameElement;r&&(n="_"+r.tagName+"_"+(r.name||r.id||""))}catch(i){n="_inaccessibleParentFrame"}var o="PopUp_"+location.host.replace(/[^a-z0-9]/gi,"_")+"_"+w+n;Z&&s||(o=o+"_"+uniqueId);var a=function(e){if(y)return!0;try{return bool(e)&&e.closed}catch(t){}return!1},c=function(){y||f.unload()};try{if(ne=window.open(z(),o,t),y=!1,m=!0,ne&&ne.document)if(s&&Z&&isLoaded(ne))ne.mainPageReloaded(),e();else{s&&V(ne.document);var p=function(e){return bool(e)&&isLoaded(e)};isLoaded(ne)?e():W(p,100,e,"PopUpAppender.init: unable to create console window")}else b=!1,logLog.warn("PopUpAppender.init: pop-ups blocked, please unblock to use PopUpAppender"),ee&&handleError("log4javascript: pop-up windows appear to be blocked. Please unblock them to use pop-up logging.")}catch(h){handleError("PopUpAppender.init: error creating pop-up",h)}},O=function(){a||R()},L=function(){O(),g=!0},k=function(){return ne},I=function(){if(b&&!isUndefined(ne)&&!y){if(ne.closed||v&&isUndefined(ne.closed))return f.unload(),logLog.debug("PopUpAppender: pop-up closed"),!1;!v&&isLoaded(ne)&&(v=!0)}return b&&v&&!y}}this.getConsoleWindow=k},ConsoleAppender.addGlobalCommandLineFunction=function(e,t){r.push([e,t])},e.prototype=new ConsoleAppender,e.prototype.defaults={layout:new PatternLayout("%d{HH:mm:ss} %-5p - %m{1}%n"),initiallyMinimized:!1,focusPopUp:!1,lazyInit:!0,useOldPopUp:!0,complainAboutPopUpBlocking:!0,newestMessageAtTop:!1,scrollToLatestMessage:!0,width:"600",height:"400",reopenWhenClosed:!1,maxMessages:null,showCommandLine:!0,commandLineObjectExpansionDepth:1,showHideButton:!1,showCloseButton:!0,showLogEntryDeleteButtons:!0,useDocumentWrite:!0},e.prototype.toString=function(){return"PopUpAppender"},log4javascript.PopUpAppender=e,t.prototype=new ConsoleAppender,t.prototype.defaults={layout:new PatternLayout("%d{HH:mm:ss} %-5p - %m{1}%n"),initiallyMinimized:!1,lazyInit:!0,newestMessageAtTop:!1,scrollToLatestMessage:!0,width:"100%",height:"220px",maxMessages:null,showCommandLine:!0,commandLineObjectExpansionDepth:1,showHideButton:!1,showCloseButton:!1,showLogEntryDeleteButtons:!0,useDocumentWrite:!0},t.prototype.toString=function(){return"InPageAppender"},log4javascript.InPageAppender=t,log4javascript.InlineAppender=t}(),function(){function e(e){var t=0;for(var n in e)t=Math.max(toStr(n).length,t);var r=[];for(n in e){var i,o="  "+padWithSpaces(toStr(n),t+2);try{i=splitIntoLines(toStr(e[n])).join(padWithSpaces(newLine,t+6))}catch(a){i="[Error obtaining property. Details: "+getExceptionMessage(a)+"]"}r.push(o+i)}return r.join(newLine)}function t(e,n,r,l,u){function c(e){return e.nodeType==i.TEXT_NODE&&/^[ \t\r\n]*$/.test(e.nodeValue)}function p(e){return e.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/"/g,"&quot;")}function h(e){for(var t=e.style.cssText.split(";"),n="",r=0,i=t.length;i>r;r++){var o=t[r].split(":"),a=[];/^\s*$/.test(o[0])||a.push(trim(o[0]).toLowerCase()+":"+trim(o[1])),n=a.join(";")}return n}function d(e){if(e.prefix)return e.prefix;if(e.outerHTML){var t=new RegExp("<([^:]+):"+e.tagName+"[^>]*>","i");if(t.test(e.outerHTML))return RegExp.$1.toLowerCase()}return""}n="undefined"==typeof n?!0:!!n,"string"!=typeof r&&(r=""),l=!!l,u=!!u;var f,g="<",m=">";if(!n||e.nodeType==i.DOCUMENT_FRAGMENT_NODE){f="";for(var v=0,y=e.childNodes.length;y>v;v++)f+=t(e.childNodes[v],!0,r+s);return f}switch(e.nodeType){case i.ELEMENT_NODE:var $=e.tagName.toLowerCase();f=l?newLine+r:"",f+=g;var b=d(e),w=!!b;for(w&&(f+=b+":"),f+=$,v=0,y=e.attributes.length;y>v;v++){var x=e.attributes[v];x.specified&&null!==x.nodeValue&&"style"!==x.nodeName.toLowerCase()&&"string"==typeof x.nodeValue&&0!==x.nodeName.indexOf("_moz")&&(f+=" "+x.nodeName.toLowerCase()+'="',f+=p(x.nodeValue),f+='"')}if(e.style.cssText){var E=h(e);""!==E&&(f+=' style="'+h(e)+'"')}if(array_contains(a,$)||w&&!e.hasChildNodes())f+="/"+m;else{f+=m;for(var C=!(1===e.childNodes.length&&e.childNodes[0].nodeType===i.TEXT_NODE),S=array_contains(o,$),v=0,y=e.childNodes.length;y>v;v++)f+=t(e.childNodes[v],!0,r+s,C,S);var T=g+"/"+$+m;f+=C?newLine+r+T:T}return f;case i.TEXT_NODE:if(c(e))f="";else{if(u)f=e.nodeValue;else{for(var A=splitIntoLines(trim(e.nodeValue)),N=[],v=0,y=A.length;y>v;v++)N[v]=trim(A[v]);f=N.join(newLine+r)}l&&(f=newLine+r+f)}return f;case i.CDATA_SECTION_NODE:return"<![CDATA["+e.nodeValue+"]]>"+newLine;case i.DOCUMENT_NODE:f="";for(var v=0,y=e.childNodes.length;y>v;v++)f+=t(e.childNodes[v],!0,r);return f;default:return""}}function n(){ConsoleAppender.addGlobalCommandLineFunction("$",function(e,t,n){return document.getElementById(t[0])}),ConsoleAppender.addGlobalCommandLineFunction("dir",function(t,n,r){for(var i=[],o=0,a=n.length;a>o;o++)i[o]=e(n[o]);return i.join(newLine+newLine)}),ConsoleAppender.addGlobalCommandLineFunction("dirxml",function(e,n,r){for(var i=[],o=0,a=n.length;a>o;o++){e.getCommandWindow();i[o]=t(n[o])}return i.join(newLine+newLine)}),ConsoleAppender.addGlobalCommandLineFunction("cd",function(e,t,n){var r,i;return 0===t.length||""===t[0]?(r=window,i="Command line set to run in main window"):t[0].window==t[0]?(r=t[0],i="Command line set to run in frame '"+t[0].name+"'"):(r=window.frames[t[0]],r?i="Command line set to run in frame '"+t[0]+"'":(n.isError=!0,i="Frame '"+t[0]+"' does not exist",r=e.getCommandWindow())),e.setCommandWindow(r),i}),ConsoleAppender.addGlobalCommandLineFunction("clear",function(e,t,n){n.appendResult=!1,e.clear()}),ConsoleAppender.addGlobalCommandLineFunction("keys",function(e,t,n){var r=[];for(var i in t[0])r.push(i);return r}),ConsoleAppender.addGlobalCommandLineFunction("values",function(e,t,n){var r=[];for(var i in t[0])try{r.push(t[0][i])}catch(o){logLog.warn("values(): Unable to obtain value for key "+i+". Details: "+getExceptionMessage(o))}return r}),ConsoleAppender.addGlobalCommandLineFunction("expansionDepth",function(e,t,n){var r=parseInt(t[0],10);return isNaN(r)||0>r?(n.isError=!0,""+t[0]+" is not a valid expansion depth"):(e.setCommandLineObjectExpansionDepth(r),"Object expansion depth set to "+r)})}function r(){n()}var i={ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12},o=["script","pre"],a=["br","img","hr","param","link","area","input","col","base","meta"],s="  ";r()}(),log4javascript.setDocumentReady=function(){pageLoaded=!0,log4javascript.dispatchEvent("load",{})},window.addEventListener)window.addEventListener("load",log4javascript.setDocumentReady,!1);else if(window.attachEvent)window.attachEvent("onload",log4javascript.setDocumentReady);else{var oldOnload=window.onload;"function"!=typeof window.onload?window.onload=log4javascript.setDocumentReady:window.onload=function(e){oldOnload&&oldOnload(e),log4javascript.setDocumentReady()}}return window.log4javascript=log4javascript,log4javascript}();!function(e,t){"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.store=t()}(this,function(){function e(){try{return o in r&&r[o]}catch(e){return!1}}var t,n={},r="undefined"!=typeof window?window:global,i=r.document,o="localStorage",a="script";if(n.disabled=!1,n.version="1.3.20",n.set=function(e,t){},n.get=function(e,t){},n.has=function(e){return void 0!==n.get(e)},n.remove=function(e){},n.clear=function(){},n.transact=function(e,t,r){null==r&&(r=t,t=null),null==t&&(t={});var i=n.get(e,t);r(i),n.set(e,i)},n.getAll=function(){},n.forEach=function(){},n.serialize=function(e){return JSON.stringify(e)},n.deserialize=function(e){if("string"==typeof e)try{return JSON.parse(e)}catch(t){return e||void 0}},e())t=r[o],n.set=function(e,r){return void 0===r?n.remove(e):(t.setItem(e,n.serialize(r)),r)},n.get=function(e,r){var i=n.deserialize(t.getItem(e));return void 0===i?r:i},n.remove=function(e){t.removeItem(e)},n.clear=function(){t.clear()},n.getAll=function(){var e={};return n.forEach(function(t,n){e[t]=n}),e},n.forEach=function(e){for(var r=0;r<t.length;r++){var i=t.key(r);e(i,n.get(i))}};else if(i&&i.documentElement.addBehavior){var s,l;try{l=new ActiveXObject("htmlfile"),l.open(),l.write("<"+a+">document.w=window</"+a+'><iframe src="/favicon.ico"></iframe>'),l.close(),s=l.w.frames[0].document,t=s.createElement("div")}catch(u){t=i.createElement("div"),s=i.body}var c=function(e){return function(){var r=Array.prototype.slice.call(arguments,0);r.unshift(t),s.appendChild(t),t.addBehavior("#default#userData"),t.load(o);var i=e.apply(n,r);return s.removeChild(t),i}},p=new RegExp("[!\"#$%&'()*+,/\\\\:;<=>?@[\\]^`{|}~]","g"),h=function(e){return e.replace(/^d/,"___$&").replace(p,"___")};n.set=c(function(e,t,r){return t=h(t),void 0===r?n.remove(t):(e.setAttribute(t,n.serialize(r)),e.save(o),r)}),n.get=c(function(e,t,r){t=h(t);var i=n.deserialize(e.getAttribute(t));return void 0===i?r:i}),n.remove=c(function(e,t){t=h(t),e.removeAttribute(t),e.save(o)}),n.clear=c(function(e){var t=e.XMLDocument.documentElement.attributes;e.load(o);for(var n=t.length-1;n>=0;n--)e.removeAttribute(t[n].name);e.save(o)}),n.getAll=function(e){var t={};return n.forEach(function(e,n){t[e]=n}),t},n.forEach=c(function(e,t){for(var r,i=e.XMLDocument.documentElement.attributes,o=0;r=i[o];++o)t(r.name,n.deserialize(e.getAttribute(r.name)))})}try{var d="__storejs__";n.set(d,d),n.get(d)!=d&&(n.disabled=!0),n.remove(d)}catch(u){n.disabled=!0}return n.enabled=!n.disabled,n});var Logging={level:0,log:function(){}},AuthenticationContext;"undefined"!=typeof module&&module.exports&&(module.exports.inject=function(e){return new AuthenticationContext(e)}),AuthenticationContext=function(e){if(this.REQUEST_TYPE={LOGIN:"LOGIN",RENEW_TOKEN:"RENEW_TOKEN",UNKNOWN:"UNKNOWN"},this.CONSTANTS={ACCESS_TOKEN:"access_token",EXPIRES_IN:"expires_in",ID_TOKEN:"id_token",ERROR_DESCRIPTION:"error_description",SESSION_STATE:"session_state",STORAGE:{TOKEN_KEYS:"adal.token.keys",ACCESS_TOKEN_KEY:"adal.access.token.key",EXPIRATION_KEY:"adal.expiration.key",START_PAGE:"adal.start.page",START_PAGE_PARAMS:"adal.start.page.params",STATE_LOGIN:"adal.state.login",STATE_RENEW:"adal.state.renew",STATE_RENEW_RESOURCE:"adal.state.renew.resource",NONCE_IDTOKEN:"adal.nonce.idtoken",SESSION_STATE:"adal.session.state",USERNAME:"adal.username",IDTOKEN:"adal.idtoken",ERROR:"adal.error",ERROR_DESCRIPTION:"adal.error.description",LOGIN_REQUEST:"adal.login.request",LOGIN_ERROR:"adal.login.error"},RESOURCE_DELIMETER:"|",ERR_MESSAGES:{NO_TOKEN:"User is not authorized"},LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:"ERROR:",1:"WARNING:",2:"INFO:",3:"VERBOSE:"}},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance="https://login.microsoftonline.com/",this.config={},this.callback=null,this.popUp=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._renewStates=[],window.callBackMappedToRenewStates={},window.callBacksMappedToRenewStates={},e.displayCall&&"function"!=typeof e.displayCall)throw new Error("displayCall is not a function");if(!e.clientId)throw new Error("clientId is required");e.correlationId||(e.correlationId=this._guid()),this.config=this._cloneConfig(e),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href)},AuthenticationContext.prototype.login=function(){var e=this._guid();this.config.state=e,this._idTokenNonce=this._guid(),this.verbose("Expected state: "+e+" startPage:"+window.location),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,""),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,e),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce),this._saveItem(this.CONSTANTS.STORAGE.ERROR,""),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,"");var t=this._getNavigateUrl("id_token",null)+"&nonce="+encodeURIComponent(this._idTokenNonce);this.frameCallInProgress=!1,this._loginInProgress=!0,this.config.displayCall?this.config.displayCall(t):this.promptUser(t)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(e){var t=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return t&&!this._isEmpty(t)&&t.indexOf(e+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(e){if(!this._hasResource(e))return null;var t=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+e),n=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+e),r=this.config.expireOffsetSeconds||120;return n&&n>this._now()+r?t:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+e,""),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+e,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var e=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(e),this._user},AuthenticationContext.prototype.registerCallback=function(e,t,n){this._activeRenewals[t]=e,window.callBacksMappedToRenewStates[e]||(window.callBacksMappedToRenewStates[e]=[]);var r=this;window.callBacksMappedToRenewStates[e].push(n),window.callBackMappedToRenewStates[e]||(window.callBackMappedToRenewStates[e]=function(n,i){for(var o=0;o<window.callBacksMappedToRenewStates[e].length;++o)window.callBacksMappedToRenewStates[e][o](n,i);r._activeRenewals[t]=null,window.callBacksMappedToRenewStates[e]=null,window.callBackMappedToRenewStates[e]=null})},AuthenticationContext.prototype._renewToken=function(e,t){this.info("renewToken is called for resource:"+e);var n=this._addAdalFrame("adalRenewFrame"+e),r=this._guid()+"|"+e;this._idTokenNonce=this._guid(),this.config.state=r,this._renewStates.push(r),this.verbose("Renew token Expected state: "+r);var i=this._getNavigateUrl("token",e)+"&prompt=none&login_hint="+encodeURIComponent(this._user.userName);this._urlContainsQueryStringParameter("domain_hint",i)||(i+="&domain_hint="+encodeURIComponent(this._getDomainHint())),i+="&nonce="+encodeURIComponent(this._idTokenNonce),this.callback=t,this.registerCallback(r,e,t),this.idTokenNonce=null,this.verbose("Navigate to:"+i),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,""),n.src="about:blank",this._loadFrame(i,"adalRenewFrame"+e)},AuthenticationContext.prototype._renewIdToken=function(e){this.info("renewIdToken is called");var t=this._addAdalFrame("adalIdTokenFrame"),n=this._guid()+"|"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce),this.config.state=n,this._renewStates.push(n),this.verbose("Renew Idtoken Expected state: "+n);var r=this._getNavigateUrl("id_token",null)+"&prompt=none&login_hint="+encodeURIComponent(this._user.userName);this._urlContainsQueryStringParameter("domain_hint",r)||(r+="&domain_hint="+encodeURIComponent(this._getDomainHint())),r+="&nonce="+encodeURIComponent(this._idTokenNonce),this.registerCallback(n,this.config.clientId,e),this.idTokenNonce=null,this.verbose("Navigate to:"+r),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,""),t.src="about:blank",this._loadFrame(r,"adalIdTokenFrame")},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(e,t){var n=new RegExp("[\\?&]"+e+"=");return n.test(t)},AuthenticationContext.prototype._loadFrame=function(e,t){var n=this;n.info("LoadFrame: "+t);var r=t;setTimeout(function(){var t=n._addAdalFrame(r);""!==t.src&&"about:blank"!==t.src||(t.src=e,n._loadFrame(e,r))},500)},AuthenticationContext.prototype.acquireToken=function(e,t){if(this._isEmpty(e))return this.warn("resource is required"),void t("resource is required",null);var n=this.getCachedToken(e);return n?(this.info("Token is already in cache for resource:"+e),void t(null,n)):this._user?void(this._activeRenewals[e]?this.registerCallback(this._activeRenewals[e],e,t):e===this.config.clientId?(this.verbose("renewing idtoken"),this._renewIdToken(t)):this._renewToken(e,t)):(this.warn("User login is required"),void t("User login is required",null))},AuthenticationContext.prototype.promptUser=function(e){e?(this.info("Navigate to:"+e),window.location.replace(e)):this.info("Navigate url is empty")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY,""),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY,0),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,""),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,""),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.START_PAGE,""),this._saveItem(this.CONSTANTS.STORAGE.START_PAGE_PARAMS,""),this._saveItem(this.CONSTANTS.STORAGE.USERNAME,""),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,""),this._saveItem(this.CONSTANTS.STORAGE.ERROR,""),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,"");var e=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(e)){e=e.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var t=0;t<e.length;t++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+e[t],""),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+e[t],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,"")},AuthenticationContext.prototype.clearCacheForResource=function(e){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,""),this._saveItem(this.CONSTANTS.STORAGE.ERROR,""),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,""),this._hasResource(e)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+e,""),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+e,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache();var e="common",t="";this._user=null,this.config.tenant&&(e=this.config.tenant),this.config.instance&&(this.instance=this.config.instance),this.config.postLogoutRedirectUri&&(t="post_logout_redirect_uri="+encodeURIComponent(this.config.postLogoutRedirectUri));var n=this.instance+e+"/oauth2/logout?"+t;this.info("Logout navigate to: "+n),this.promptUser(n)},AuthenticationContext.prototype._isEmpty=function(e){return"undefined"==typeof e||!e||0===e.length},AuthenticationContext.prototype.getUser=function(e){if("function"!=typeof e)throw new Error("callback is not a function");if(this.callback=e,this._user)return void this.callback(null,this._user);var t=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(t)?(this.warn("User information is not available"),this.callback("User information is not available")):(this.info("User exists in cache: "),this._user=this._createUser(t),this.callback(null,this._user))},AuthenticationContext.prototype._getDomainHint=function(){if(this._user&&this._user.userName&&this._user.userName.indexOf("@")>-1){var e=this._user.userName.split("@");return e[e.length-1]}return""},AuthenticationContext.prototype._createUser=function(e){var t=null,n=this._extractIdToken(e);return n&&n.hasOwnProperty("aud")&&(n.aud.toLowerCase()===this.config.clientId.toLowerCase()?(t={userName:"",profile:n},n.hasOwnProperty("upn")?t.userName=n.upn:n.hasOwnProperty("email")&&(t.userName=n.email)):this.warn("IdToken has invalid aud field")),t},AuthenticationContext.prototype._getHash=function(e){return e.indexOf("#/")>-1?e=e.substring(e.indexOf("#/")+2):e.indexOf("#")>-1&&(e=e.substring(1)),e},AuthenticationContext.prototype.isCallback=function(e){e=this._getHash(e);var t=this._deserialize(e);return t.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||t.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||t.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(e){e=this._getHash(e);var t=this._deserialize(e),n={valid:!1,parameters:{},stateMatch:!1,stateResponse:"",requestType:this.REQUEST_TYPE.UNKNOWN};if(t&&(n.parameters=t,t.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||t.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||t.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){n.valid=!0;var r="";if(!t.hasOwnProperty("state"))return this.warn("No state returned"),n;if(this.verbose("State: "+t.state),r=t.state,n.stateResponse=r,r===this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN))return n.requestType=this.REQUEST_TYPE.LOGIN,n.stateMatch=!0,n;if(!n.stateMatch&&window.parent&&window.parent.AuthenticationContext())for(var i=window.parent.AuthenticationContext()._renewStates,o=0;o<i.length;o++)if(i[o]===n.stateResponse){n.requestType=this.REQUEST_TYPE.RENEW_TOKEN,n.stateMatch=!0;break}}return n},AuthenticationContext.prototype._getResourceFromState=function(e){if(e){var t=e.indexOf("|");if(t>-1&&t+1<e.length)return e.substring(t+1)}return""},AuthenticationContext.prototype.saveTokenFromHash=function(e){if(this.info("State status:"+e.stateMatch+"; Request type:"+e.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,""),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,""),e.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.info("Error :"+e.parameters.error+"; Error description:"+e.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,e.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,e.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),e.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e.parameters.errorDescription));else if(e.stateMatch){this.info("State is right"),e.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,e.parameters[this.CONSTANTS.SESSION_STATE]);var t,n;e.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info("Fragment has access token"),n=this._getResourceFromState(e.stateResponse),this._hasResource(n)||(t=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||"",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,t+n+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+n,e.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+n,this._expiresIn(e.parameters[this.CONSTANTS.EXPIRES_IN]))),e.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info("Fragment has id token"),this._loginInProgress=!1,this._user=this._createUser(e.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile&&(this._user.profile.nonce!==this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)?(this._user=null,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,"Nonce is not same as "+this._idTokenNonce)):(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,e.parameters[this.CONSTANTS.ID_TOKEN]),n=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(n)||(t=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||"",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,t+n+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+n,e.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+n,this._user.profile.exp))))}else this._saveItem(this.CONSTANTS.STORAGE.ERROR,"Invalid_state"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,"Invalid_state. state: "+e.stateResponse)},AuthenticationContext.prototype.getResourceForEndpoint=function(e){
if(this.config&&this.config.endpoints)for(var t in this.config.endpoints)if(e.indexOf(t)>-1)return this.config.endpoints[t];return e.indexOf("http://")>-1||e.indexOf("https://")>-1?this._getHostFromUri(e)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(e){var t=String(e).replace(/^(https?:)\/\//,"");return t=t.split("/")[0]},AuthenticationContext.prototype.handleWindowCallback=function(){var e=window.location.hash;if(this.isCallback(e)){var t=this.getRequestInfo(e);this.info("Returned from redirect url"),this.saveTokenFromHash(t);var n=null;if(t.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(this.verbose("Window is in iframe"),n=window.parent.callBackMappedToRenewStates[t.stateResponse],window.src=""):window&&window.oauth2Callback&&(this.verbose("Window is redirecting"),n=this.callback),window.location.hash="",window.location=this._getItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST),t.requestType===this.REQUEST_TYPE.RENEW_TOKEN)return void n(this._getItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION),t.parameters[this.CONSTANTS.ACCESS_TOKEN]||t.parameters[this.CONSTANTS.ID_TOKEN])}},AuthenticationContext.prototype._getNavigateUrl=function(e,t){var n="common";this.config.tenant&&(n=this.config.tenant),this.config.instance&&(this.instance=this.config.instance);var r=this.instance+n+"/oauth2/authorize"+this._serialize(e,this.config,t)+this._addLibMetadata();return this.info("Navigate url:"+r),r},AuthenticationContext.prototype._extractIdToken=function(e){var t=this._decodeJwt(e);if(!t)return null;try{var n=t.JWSPayload,r=this._base64DecodeStringUrlSafe(n);return r?JSON.parse(r):(this.info("The returned id_token could not be base64 url safe decoded."),null)}catch(i){this.error("The returned id_token could not be decoded",i)}return null},AuthenticationContext.prototype._extractUserName=function(e){try{var t=this._extractIdToken(e);if(t){if(t.hasOwnProperty("upn"))return t.upn;if(t.hasOwnProperty("email"))return t.email}}catch(n){this.error("The returned id_token could not be decoded",n)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(e){return e=e.replace(/-/g,"+").replace(/_/g,"/"),window.atob?decodeURIComponent(escape(window.atob(e))):decodeURIComponent(escape(this._decode(e)))},AuthenticationContext.prototype._decode=function(e){var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";e=String(e).replace(/=+$/,"");var n=e.length;if(n%4===1)throw new Error("The token to be decoded is not correctly encoded.");for(var r,i,o,a,s,l,u,c,p="",h=0;n>h;h+=4){if(r=t.indexOf(e.charAt(h)),i=t.indexOf(e.charAt(h+1)),o=t.indexOf(e.charAt(h+2)),a=t.indexOf(e.charAt(h+3)),h+2===n-1){s=r<<18|i<<12|o<<6,l=s>>16&255,u=s>>8&255,p+=String.fromCharCode(l,u);break}if(h+1===n-1){s=r<<18|i<<12,l=s>>16&255,p+=String.fromCharCode(l);break}s=r<<18|i<<12|o<<6|a,l=s>>16&255,u=s>>8&255,c=255&s,p+=String.fromCharCode(l,u,c)}return p},AuthenticationContext.prototype._decodeJwt=function(e){if(this._isEmpty(e))return null;var t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/,n=t.exec(e);if(!n||n.length<4)return this.warn("The returned id_token is not parseable."),null;var r={header:n[1],JWSPayload:n[2],JWSSig:n[3]};return r},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(e){return e.replace("-","+").replace("_","/")},AuthenticationContext.prototype._serialize=function(e,t,n){var r=[];return null!==t&&(r.push("?response_type="+e),r.push("client_id="+encodeURIComponent(t.clientId)),n&&r.push("resource="+encodeURIComponent(n)),r.push("redirect_uri="+encodeURIComponent(t.redirectUri)),r.push("state="+encodeURIComponent(t.state)),t.hasOwnProperty("slice")&&r.push("slice="+encodeURIComponent(t.slice)),t.hasOwnProperty("extraQueryParameter")&&r.push(t.extraQueryParameter),t.correlationId&&r.push("client-request-id="+encodeURIComponent(t.correlationId))),r.join("&")},AuthenticationContext.prototype._deserialize=function(e){var t,n=/\+/g,r=/([^&=]+)=?([^&]*)/g,i=function(e){return decodeURIComponent(e.replace(n," "))},o={};for(t=r.exec(e);t;)o[i(t[1])]=i(t[2]),t=r.exec(e);return o},AuthenticationContext.prototype._guid=function(){for(var e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx",t="0123456789abcdef",n=0,r="",i=0;36>i;i++)"-"!==e[i]&&"4"!==e[i]&&(n=16*Math.random()|0),"x"===e[i]?r+=t[n]:"y"===e[i]?(n&=3,n|=8,r+=t[n]):r+=e[i];return r},AuthenticationContext.prototype._expiresIn=function(e){return this._now()+parseInt(e,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(e){if("undefined"!=typeof e){this.info("Add adal frame to document:"+e);var t=document.getElementById(e);if(!t){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf("MSIE 5.0"))){var n=document.createElement("iframe");n.setAttribute("id",e),n.style.visibility="hidden",n.style.position="absolute",n.style.width=n.style.height=n.borderWidth="0px",t=document.getElementsByTagName("body")[0].appendChild(n)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML("beforeEnd",'<iframe name="'+e+'" id="'+e+'" style="display:none"></iframe>');window.frames&&window.frames[e]&&(t=window.frames[e])}return t}},AuthenticationContext.prototype._saveItem=function(e,t){return this.config&&this.config.cacheLocation&&"localStorage"===this.config.cacheLocation?this._supportsLocalStorage()?(localStorage.setItem(e,t),!0):(this.info("Local storage is not supported"),!1):this._supportsSessionStorage()?(sessionStorage.setItem(e,t),!0):(this.info("Session storage is not supported"),!1)},AuthenticationContext.prototype._getItem=function(e){return this.config&&this.config.cacheLocation&&"localStorage"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(e):(this.info("Local storage is not supported"),null):this._supportsSessionStorage()?sessionStorage.getItem(e):(this.info("Session storage is not supported"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return"localStorage"in window&&window.localStorage}catch(e){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return"sessionStorage"in window&&window.sessionStorage}catch(e){return!1}},AuthenticationContext.prototype._cloneConfig=function(e){if(null===e||"object"!=typeof e)return e;var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t},AuthenticationContext.prototype._addLibMetadata=function(){return"&x-client-SKU=Js&x-client-Ver="+this._libVersion()},AuthenticationContext.prototype.log=function(e,t,n){if(e<=Logging.level){var r=this.config.correlationId,i=(new Date).toUTCString(),o=i+":"+r+"-"+this._libVersion()+"-"+this.CONSTANTS.LEVEL_STRING_MAP[e]+" "+t;n&&(o+="\nstack:\n"+n.stack),Logging.log(o)}},AuthenticationContext.prototype.error=function(e,t){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,e,t)},AuthenticationContext.prototype.warn=function(e){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,e,null)},AuthenticationContext.prototype.info=function(e){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,e,null)},AuthenticationContext.prototype.verbose=function(e){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,e,null)},AuthenticationContext.prototype._libVersion=function(){return"1.0.9"},"undefined"!=typeof module&&module.exports&&(module.exports.inject=function(e){return new AuthenticationContext(e)}),function(){if(angular){var e=angular.module("AdalAngular",[]);e.provider("adalAuthenticationService",function(){var e=null,t={isAuthenticated:!1,userName:"",loginError:"",profile:""},n=function(n){var r=e.getCachedToken(n);t.isAuthenticated=null!==r&&r.length>0;var i=e.getCachedUser()||{userName:""};t.userName=i.userName,t.profile=i.profile,t.loginError=e.getLoginError()};this.init=function(t,r){if(!t)throw new Error("You must set configOptions, when calling init");var i=window.location.hash,o=window.location.href;i&&(o=o.replace(i,"")),t.redirectUri=t.redirectUri||o,t.postLogoutRedirectUri=t.postLogoutRedirectUri||o,r&&r.interceptors&&r.interceptors.push("ProtectedResourceInterceptor"),e=new AuthenticationContext(t),n(e.config.loginResource)},this.$get=["$rootScope","$window","$q","$location","$timeout",function(r,i,o,a,s){function l(e,t){return t.requireADLogin?e.requireADLogin!==!1:!!e.requireADLogin}var u=function(){var o=i.location.hash;if(e.isCallback(o)){var l=e.getRequestInfo(o);if(e.saveTokenFromHash(l),a.$$html5?i.location=i.location.origin+i.location.pathname:i.location.hash="",l.requestType!==e.REQUEST_TYPE.LOGIN&&(e._renewActive=!1,e.callback=i.parent.AuthenticationContext().callback,l.requestType===e.REQUEST_TYPE.RENEW_TOKEN&&(e.callback=i.parent.callBackMappedToRenewStates[l.stateResponse])),l.stateMatch)if("function"==typeof e.callback){if(l.requestType===e.REQUEST_TYPE.RENEW_TOKEN){if(l.parameters.access_token)return void e.callback(e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION),l.parameters.access_token);if(l.parameters.id_token)return void e.callback(e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION),l.parameters.id_token)}}else n(e.config.loginResource),t.userName?(s(function(){n(e.config.loginResource),r.userInfo=t;var i=e._getItem(e.CONSTANTS.STORAGE.START_PAGE);if(i){var o=e._getItem(e.CONSTANTS.STORAGE.START_PAGE_PARAMS);if(o){var s=JSON.parse(o);a.url(i).search(s)}else a.url(i)}},1),r.$broadcast("adal:loginSuccess")):r.$broadcast("adal:loginFailure",e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION));else r.$broadcast("adal:stateMismatch",e._getItem(e.CONSTANTS.STORAGE.ERROR_DESCRIPTION))}else n(e.config.loginResource),e._renewActive||t.isAuthenticated||!t.userName||(e._renewActive=!0,e.acquireToken(e.config.loginResource,function(e,n){e?r.$broadcast("adal:loginFailure","auto renew failure"):n&&(t.isAuthenticated=!0)}));s(function(){n(e.config.loginResource),r.userInfo=t},1)},c=function(){e.info("Login event for:"+a.$$url),e.config&&e.config.localLoginUrl?a.path(e.config.localLoginUrl):(e._saveItem(e.CONSTANTS.STORAGE.START_PAGE,a.$$url),e.info("Start login at:"+window.location.href),r.$broadcast("adal:loginRedirect"),e.login())},p=function(n,r){r&&r.$$route&&l(r.$$route,e.config)&&(t.isAuthenticated||e._renewActive||(e.info("Route change event for:"+a.$$url),c()))},h=function(n,r,i,o,s){r&&l(r,e.config)&&(t.isAuthenticated||e._renewActive||(a.$$url=r.url,e._saveItem(e.CONSTANTS.STORAGE.START_PAGE_PARAMS,JSON.stringify(i)),e.info("State change event for:"+a.$$url),c()))};return r.$on("$routeChangeStart",p),r.$on("$stateChangeStart",h),r.$on("$locationChangeStart",u),n(e.config.loginResource),r.userInfo=t,{config:e.config,login:function(){e.login()},loginInProgress:function(){return e.loginInProgress()},logOut:function(){e.logOut()},getCachedToken:function(t){return e.getCachedToken(t)},userInfo:t,acquireToken:function(t){var n=o.defer();return e._renewActive=!0,e.acquireToken(t,function(r,i){e._renewActive=!1,r?(e.error("Error when acquiring token for resource: "+t,r),n.reject(r)):n.resolve(i)}),n.promise},getUser:function(){var t=o.defer();return e.getUser(function(n,r){n?(e.error("Error when getting user",n),t.reject(n)):t.resolve(r)}),t.promise},getResourceForEndpoint:function(t){return e.getResourceForEndpoint(t)},clearCache:function(){e.clearCache()},clearCacheForResource:function(t){e.clearCacheForResource(t)},info:function(t){e.info(t)},verbose:function(t){e.verbose(t)}}}]}),e.factory("ProtectedResourceInterceptor",["adalAuthenticationService","$q","$rootScope",function(e,t,n){return{request:function(n){if(n){n.headers=n.headers||{};var r=e.getResourceForEndpoint(n.url);if(null===r)return n;var i=e.getCachedToken(r);if(i)return e.info("Token is avaliable for this url "+n.url),n.headers.Authorization="Bearer "+i,n;if(e.loginInProgress())return e.info("login already start."),t.reject("login in progress, cancelling the request");var o=t.defer();return e.acquireToken(r).then(function(t){e.verbose("Token is avaliable"),n.headers.Authorization="Bearer "+t,o.resolve(n)},function(e){o.reject(e)}),o.promise}},responseError:function(r){if(e.info("Getting error in the response"),r){if(401===r.status){var i=e.getResourceForEndpoint(r.config.url);e.clearCacheForResource(i),n.$broadcast("adal:notAuthorized",r,i)}else n.$broadcast("adal:errorResponse",r);return t.reject(r)}}}}])}else console.error("Angular.JS is not included")}(),function(e,t){"use strict";function n(e,n,r){return{restrict:"ECA",terminal:!0,priority:400,transclude:"element",link:function(i,o,a,s,l){function u(){d&&(r.cancel(d),d=null),p&&(p.$destroy(),p=null),h&&(d=r.leave(h),d.then(function(){d=null}),h=null)}function c(){var a=e.current&&e.current.locals;if(t.isDefined(a&&a.$template)){var a=i.$new(),s=e.current;h=l(a,function(e){r.enter(e,null,h||o).then(function(){!t.isDefined(f)||f&&!i.$eval(f)||n()}),u()}),p=s.scope=a,p.$emit("$viewContentLoaded"),p.$eval(g)}else u()}var p,h,d,f=a.autoscroll,g=a.onload||"";i.$on("$routeChangeSuccess",c),c()}}}function r(e,t,n){return{restrict:"ECA",priority:-400,link:function(r,i){var o=n.current,a=o.locals;i.html(a.$template);var s=e(i.contents());if(o.controller){a.$scope=r;var l=t(o.controller,a);o.controllerAs&&(r[o.controllerAs]=l),i.data("$ngControllerController",l),i.children().data("$ngControllerController",l)}r[o.resolveAs||"$resolve"]=a,s(r)}}}var i=t.module("ngRoute",["ng"]).provider("$route",function(){function e(e,n){return t.extend(Object.create(e),n)}function n(e,t){var n=t.caseInsensitiveMatch,r={originalPath:e,regexp:e},i=r.keys=[];return e=e.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)(\*\?|[\?\*])?/g,function(e,t,n,r){return e="?"===r||"*?"===r?"?":null,r="*"===r||"*?"===r?"*":null,i.push({name:n,optional:!!e}),t=t||"",""+(e?"":t)+"(?:"+(e?t:"")+(r&&"(.+?)"||"([^/]+)")+(e||"")+")"+(e||"")}).replace(/([\/$\*])/g,"\\$1"),r.regexp=new RegExp("^"+e+"$",n?"i":""),r}var r={};this.when=function(e,i){var o=t.copy(i);if(t.isUndefined(o.reloadOnSearch)&&(o.reloadOnSearch=!0),t.isUndefined(o.caseInsensitiveMatch)&&(o.caseInsensitiveMatch=this.caseInsensitiveMatch),r[e]=t.extend(o,e&&n(e,o)),e){var a="/"==e[e.length-1]?e.substr(0,e.length-1):e+"/";r[a]=t.extend({redirectTo:e},n(a,o))}return this},this.caseInsensitiveMatch=!1,this.otherwise=function(e){return"string"==typeof e&&(e={redirectTo:e}),this.when(null,e),this},this.$get=["$rootScope","$location","$routeParams","$q","$injector","$templateRequest","$sce",function(n,i,a,s,l,u,c){function p(e){var r=y.current;(m=(g=d())&&r&&g.$$route===r.$$route&&t.equals(g.pathParams,r.pathParams)&&!g.reloadOnSearch&&!v)||!r&&!g||n.$broadcast("$routeChangeStart",g,r).defaultPrevented&&e&&e.preventDefault()}function h(){var e=y.current,r=g;m?(e.params=r.params,t.copy(e.params,a),n.$broadcast("$routeUpdate",e)):(r||e)&&(v=!1,(y.current=r)&&r.redirectTo&&(t.isString(r.redirectTo)?i.path(f(r.redirectTo,r.params)).search(r.params).replace():i.url(r.redirectTo(r.pathParams,i.path(),i.search())).replace()),s.when(r).then(function(){if(r){var e,n,i=t.extend({},r.resolve);return t.forEach(i,function(e,n){i[n]=t.isString(e)?l.get(e):l.invoke(e,null,null,n)}),t.isDefined(e=r.template)?t.isFunction(e)&&(e=e(r.params)):t.isDefined(n=r.templateUrl)&&(t.isFunction(n)&&(n=n(r.params)),t.isDefined(n)&&(r.loadedTemplateUrl=c.valueOf(n),e=u(n))),t.isDefined(e)&&(i.$template=e),s.all(i)}}).then(function(i){r==y.current&&(r&&(r.locals=i,t.copy(r.params,a)),n.$broadcast("$routeChangeSuccess",r,e))},function(t){r==y.current&&n.$broadcast("$routeChangeError",r,e,t)}))}function d(){var n,o;return t.forEach(r,function(r,a){var s;if(s=!o){var l=i.path();s=r.keys;var u={};if(r.regexp)if(l=r.regexp.exec(l)){for(var c=1,p=l.length;p>c;++c){var h=s[c-1],d=l[c];h&&d&&(u[h.name]=d)}s=u}else s=null;else s=null;s=n=s}s&&(o=e(r,{params:t.extend({},i.search(),n),pathParams:n}),o.$$route=r)}),o||r[null]&&e(r[null],{params:{},pathParams:{}})}function f(e,n){var r=[];return t.forEach((e||"").split(":"),function(e,t){if(0===t)r.push(e);else{var i=e.match(/(\w+)(?:[?*])?(.*)/),o=i[1];r.push(n[o]),r.push(i[2]||""),delete n[o]}}),r.join("")}var g,m,v=!1,y={routes:r,reload:function(){v=!0;var e={defaultPrevented:!1,preventDefault:function(){this.defaultPrevented=!0,v=!1}};n.$evalAsync(function(){p(e),e.defaultPrevented||h()})},updateParams:function(e){if(!this.current||!this.current.$$route)throw o("norout");e=t.extend({},this.current.params,e),i.path(f(this.current.$$route.originalPath,e)),i.search(e)}};return n.$on("$locationChangeStart",p),n.$on("$locationChangeSuccess",h),y}]}),o=t.$$minErr("ngRoute");i.provider("$routeParams",function(){this.$get=function(){return{}}}),i.directive("ngView",n),i.directive("ngView",r),n.$inject=["$route","$anchorScroll","$animate"],r.$inject=["$compile","$controller","$route"]}(window,window.angular);var requirejs,require,define;!function(global){function commentReplace(e,t,n,r){return r||""}function isFunction(e){return"[object Function]"===ostring.call(e)}function isArray(e){return"[object Array]"===ostring.call(e)}function each(e,t){if(e){var n;for(n=0;n<e.length&&(!e[n]||!t(e[n],n,e));n+=1);}}function eachReverse(e,t){if(e){var n;for(n=e.length-1;n>-1&&(!e[n]||!t(e[n],n,e));n-=1);}}function hasProp(e,t){return hasOwn.call(e,t)}function getOwn(e,t){return hasProp(e,t)&&e[t]}function eachProp(e,t){var n;for(n in e)if(hasProp(e,n)&&t(e[n],n))break}function mixin(e,t,n,r){return t&&eachProp(t,function(t,i){!n&&hasProp(e,i)||(!r||"object"!=typeof t||!t||isArray(t)||isFunction(t)||t instanceof RegExp?e[i]=t:(e[i]||(e[i]={}),mixin(e[i],t,n,r)))}),e}function bind(e,t){return function(){return t.apply(e,arguments)}}function scripts(){return document.getElementsByTagName("script")}function defaultOnError(e){throw e}function getGlobal(e){if(!e)return e;var t=global;return each(e.split("."),function(e){t=t[e]}),t}function makeError(e,t,n,r){var i=new Error(t+"\nhttp://requirejs.org/docs/errors.html#"+e);return i.requireType=e,i.requireModules=r,n&&(i.originalError=n),i}function newContext(e){function t(e){var t,n;for(t=0;t<e.length;t++)if(n=e[t],"."===n)e.splice(t,1),t-=1;else if(".."===n){if(0===t||1===t&&".."===e[2]||".."===e[t-1])continue;t>0&&(e.splice(t-1,2),t-=2)}}function n(e,n,r){var i,o,a,s,l,u,c,p,h,d,f,g,m=n&&n.split("/"),v=E.map,y=v&&v["*"];if(e&&(e=e.split("/"),c=e.length-1,E.nodeIdCompat&&jsSuffixRegExp.test(e[c])&&(e[c]=e[c].replace(jsSuffixRegExp,"")),"."===e[0].charAt(0)&&m&&(g=m.slice(0,m.length-1),e=g.concat(e)),t(e),e=e.join("/")),r&&v&&(m||y)){a=e.split("/");e:for(s=a.length;s>0;s-=1){if(u=a.slice(0,s).join("/"),m)for(l=m.length;l>0;l-=1)if(o=getOwn(v,m.slice(0,l).join("/")),o&&(o=getOwn(o,u))){p=o,h=s;break e}!d&&y&&getOwn(y,u)&&(d=getOwn(y,u),f=s)}!p&&d&&(p=d,h=f),p&&(a.splice(0,h,p),e=a.join("/"))}return i=getOwn(E.pkgs,e),i?i:e}function r(e){isBrowser&&each(scripts(),function(t){return t.getAttribute("data-requiremodule")===e&&t.getAttribute("data-requirecontext")===b.contextName?(t.parentNode.removeChild(t),!0):void 0})}function i(e){var t=getOwn(E.paths,e);return t&&isArray(t)&&t.length>1?(t.shift(),b.require.undef(e),b.makeRequire(null,{skipMap:!0})([e]),!0):void 0}function o(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function a(e,t,r,i){var a,s,l,u,c=null,p=t?t.name:null,h=e,d=!0,f="";return e||(d=!1,e="_@r"+(I+=1)),u=o(e),c=u[0],e=u[1],c&&(c=n(c,p,i),s=getOwn(N,c)),e&&(c?f=s&&s.normalize?s.normalize(e,function(e){return n(e,p,i)}):-1===e.indexOf("!")?n(e,p,i):e:(f=n(e,p,i),u=o(f),c=u[0],f=u[1],r=!0,a=b.nameToUrl(f))),l=!c||s||r?"":"_unnormalized"+(k+=1),{prefix:c,name:f,parentMap:t,unnormalized:!!l,url:a,originalName:h,isDefine:d,id:(c?c+"!"+f:f)+l}}function s(e){var t=e.id,n=getOwn(C,t);return n||(n=C[t]=new b.Module(e)),n}function l(e,t,n){var r=e.id,i=getOwn(C,r);!hasProp(N,r)||i&&!i.defineEmitComplete?(i=s(e),i.error&&"error"===t?n(i.error):i.on(t,n)):"defined"===t&&n(N[r])}function u(e,t){var n=e.requireModules,r=!1;t?t(e):(each(n,function(t){var n=getOwn(C,t);n&&(n.error=e,n.events.error&&(r=!0,n.emit("error",e)))}),r||req.onError(e))}function c(){globalDefQueue.length&&(each(globalDefQueue,function(e){var t=e[0];"string"==typeof t&&(b.defQueueMap[t]=!0),A.push(e)}),globalDefQueue=[])}function p(e){delete C[e],delete S[e]}function h(e,t,n){var r=e.map.id;e.error?e.emit("error",e.error):(t[r]=!0,each(e.depMaps,function(r,i){var o=r.id,a=getOwn(C,o);!a||e.depMatched[i]||n[o]||(getOwn(t,o)?(e.defineDep(i,N[o]),e.check()):h(a,t,n))}),n[r]=!0)}function d(){var e,t,n=1e3*E.waitSeconds,o=n&&b.startTime+n<(new Date).getTime(),a=[],s=[],l=!1,c=!0;if(!y){if(y=!0,eachProp(S,function(e){var n=e.map,u=n.id;if(e.enabled&&(n.isDefine||s.push(e),!e.error))if(!e.inited&&o)i(u)?(t=!0,l=!0):(a.push(u),r(u));else if(!e.inited&&e.fetched&&n.isDefine&&(l=!0,!n.prefix))return c=!1}),o&&a.length)return e=makeError("timeout","Load timeout for modules: "+a,null,a),e.contextName=b.contextName,u(e);c&&each(s,function(e){h(e,{},{})}),o&&!t||!l||!isBrowser&&!isWebWorker||x||(x=setTimeout(function(){x=0,d()},50)),y=!1}}function f(e){hasProp(N,e[0])||s(a(e[0],null,!0)).init(e[1],e[2])}function g(e,t,n,r){e.detachEvent&&!isOpera?r&&e.detachEvent(r,t):e.removeEventListener(n,t,!1)}function m(e){var t=e.currentTarget||e.srcElement;return g(t,b.onScriptLoad,"load","onreadystatechange"),g(t,b.onScriptError,"error"),{node:t,id:t&&t.getAttribute("data-requiremodule")}}function v(){var e;for(c();A.length;){if(e=A.shift(),null===e[0])return u(makeError("mismatch","Mismatched anonymous define() module: "+e[e.length-1]));f(e)}b.defQueueMap={}}var y,$,b,w,x,E={waitSeconds:7,baseUrl:"./",paths:{},bundles:{},pkgs:{},shim:{},config:{}},C={},S={},T={},A=[],N={},L={},O={},I=1,k=1;return w={require:function(e){return e.require?e.require:e.require=b.makeRequire(e.map)},exports:function(e){return e.usingExports=!0,e.map.isDefine?e.exports?N[e.map.id]=e.exports:e.exports=N[e.map.id]={}:void 0},module:function(e){return e.module?e.module:e.module={id:e.map.id,uri:e.map.url,config:function(){return getOwn(E.config,e.map.id)||{}},exports:e.exports||(e.exports={})}}},$=function(e){this.events=getOwn(T,e.id)||{},this.map=e,this.shim=getOwn(E.shim,e.id),this.depExports=[],this.depMaps=[],this.depMatched=[],this.pluginMaps={},this.depCount=0},$.prototype={init:function(e,t,n,r){r=r||{},this.inited||(this.factory=t,n?this.on("error",n):this.events.error&&(n=bind(this,function(e){this.emit("error",e)})),this.depMaps=e&&e.slice(0),this.errback=n,this.inited=!0,this.ignore=r.ignore,r.enabled||this.enabled?this.enable():this.check())},defineDep:function(e,t){this.depMatched[e]||(this.depMatched[e]=!0,this.depCount-=1,this.depExports[e]=t)},fetch:function(){if(!this.fetched){this.fetched=!0,b.startTime=(new Date).getTime();var e=this.map;return this.shim?void b.makeRequire(this.map,{enableBuildCallback:!0})(this.shim.deps||[],bind(this,function(){return e.prefix?this.callPlugin():this.load()})):e.prefix?this.callPlugin():this.load()}},load:function(){var e=this.map.url;L[e]||(L[e]=!0,b.load(this.map.id,e))},check:function(){if(this.enabled&&!this.enabling){var e,t,n=this.map.id,r=this.depExports,i=this.exports,o=this.factory;if(this.inited){if(this.error)this.emit("error",this.error);else if(!this.defining){if(this.defining=!0,this.depCount<1&&!this.defined){if(isFunction(o)){if(this.events.error&&this.map.isDefine||req.onError!==defaultOnError)try{i=b.execCb(n,o,r,i)}catch(a){e=a}else i=b.execCb(n,o,r,i);if(this.map.isDefine&&void 0===i&&(t=this.module,t?i=t.exports:this.usingExports&&(i=this.exports)),e)return e.requireMap=this.map,e.requireModules=this.map.isDefine?[this.map.id]:null,e.requireType=this.map.isDefine?"define":"require",u(this.error=e)}else i=o;if(this.exports=i,this.map.isDefine&&!this.ignore&&(N[n]=i,req.onResourceLoad)){var s=[];each(this.depMaps,function(e){s.push(e.normalizedMap||e)}),req.onResourceLoad(b,this.map,s)}p(n),this.defined=!0}this.defining=!1,this.defined&&!this.defineEmitted&&(this.defineEmitted=!0,this.emit("defined",this.exports),this.defineEmitComplete=!0)}}else hasProp(b.defQueueMap,n)||this.fetch()}},callPlugin:function(){var e=this.map,t=e.id,r=a(e.prefix);this.depMaps.push(r),l(r,"defined",bind(this,function(r){var i,o,c,h=getOwn(O,this.map.id),d=this.map.name,f=this.map.parentMap?this.map.parentMap.name:null,g=b.makeRequire(e.parentMap,{enableBuildCallback:!0});return this.map.unnormalized?(r.normalize&&(d=r.normalize(d,function(e){return n(e,f,!0)})||""),o=a(e.prefix+"!"+d,this.map.parentMap),l(o,"defined",bind(this,function(e){this.map.normalizedMap=o,this.init([],function(){return e},null,{enabled:!0,ignore:!0})})),c=getOwn(C,o.id),void(c&&(this.depMaps.push(o),this.events.error&&c.on("error",bind(this,function(e){this.emit("error",e)})),c.enable()))):h?(this.map.url=b.nameToUrl(h),void this.load()):(i=bind(this,function(e){this.init([],function(){return e},null,{enabled:!0})}),i.error=bind(this,function(e){this.inited=!0,this.error=e,e.requireModules=[t],eachProp(C,function(e){0===e.map.id.indexOf(t+"_unnormalized")&&p(e.map.id)}),u(e)}),i.fromText=bind(this,function(n,r){var o=e.name,l=a(o),c=useInteractive;r&&(n=r),c&&(useInteractive=!1),s(l),hasProp(E.config,t)&&(E.config[o]=E.config[t]);try{req.exec(n)}catch(p){return u(makeError("fromtexteval","fromText eval for "+t+" failed: "+p,p,[t]))}c&&(useInteractive=!0),this.depMaps.push(l),b.completeLoad(o),g([o],i)}),void r.load(e.name,g,i,E))})),b.enable(r,this),this.pluginMaps[r.id]=r},enable:function(){S[this.map.id]=this,this.enabled=!0,this.enabling=!0,each(this.depMaps,bind(this,function(e,t){var n,r,i;if("string"==typeof e){if(e=a(e,this.map.isDefine?this.map:this.map.parentMap,!1,!this.skipMap),this.depMaps[t]=e,i=getOwn(w,e.id))return void(this.depExports[t]=i(this));this.depCount+=1,l(e,"defined",bind(this,function(e){this.undefed||(this.defineDep(t,e),this.check())})),this.errback?l(e,"error",bind(this,this.errback)):this.events.error&&l(e,"error",bind(this,function(e){this.emit("error",e)}))}n=e.id,r=C[n],hasProp(w,n)||!r||r.enabled||b.enable(e,this)})),eachProp(this.pluginMaps,bind(this,function(e){var t=getOwn(C,e.id);t&&!t.enabled&&b.enable(e,this)})),this.enabling=!1,this.check()},on:function(e,t){var n=this.events[e];n||(n=this.events[e]=[]),n.push(t)},emit:function(e,t){each(this.events[e],function(e){e(t)}),"error"===e&&delete this.events[e]}},b={config:E,contextName:e,registry:C,defined:N,urlFetched:L,defQueue:A,defQueueMap:{},Module:$,makeModuleMap:a,nextTick:req.nextTick,onError:u,configure:function(e){if(e.baseUrl&&"/"!==e.baseUrl.charAt(e.baseUrl.length-1)&&(e.baseUrl+="/"),"string"==typeof e.urlArgs){var t=e.urlArgs;e.urlArgs=function(e,n){return(-1===n.indexOf("?")?"?":"&")+t}}var n=E.shim,r={paths:!0,bundles:!0,config:!0,map:!0};eachProp(e,function(e,t){r[t]?(E[t]||(E[t]={}),mixin(E[t],e,!0,!0)):E[t]=e}),e.bundles&&eachProp(e.bundles,function(e,t){each(e,function(e){e!==t&&(O[e]=t)})}),e.shim&&(eachProp(e.shim,function(e,t){isArray(e)&&(e={deps:e}),!e.exports&&!e.init||e.exportsFn||(e.exportsFn=b.makeShimExports(e)),n[t]=e}),E.shim=n),e.packages&&each(e.packages,function(e){var t,n;e="string"==typeof e?{name:e}:e,n=e.name,t=e.location,t&&(E.paths[n]=e.location),E.pkgs[n]=e.name+"/"+(e.main||"main").replace(currDirRegExp,"").replace(jsSuffixRegExp,"")}),eachProp(C,function(e,t){e.inited||e.map.unnormalized||(e.map=a(t,null,!0))}),(e.deps||e.callback)&&b.require(e.deps||[],e.callback)},makeShimExports:function(e){function t(){var t;return e.init&&(t=e.init.apply(global,arguments)),t||e.exports&&getGlobal(e.exports)}return t},makeRequire:function(t,i){function o(n,r,l){var c,p,h;return i.enableBuildCallback&&r&&isFunction(r)&&(r.__requireJsBuild=!0),"string"==typeof n?isFunction(r)?u(makeError("requireargs","Invalid require call"),l):t&&hasProp(w,n)?w[n](C[t.id]):req.get?req.get(b,n,t,o):(p=a(n,t,!1,!0),c=p.id,hasProp(N,c)?N[c]:u(makeError("notloaded",'Module name "'+c+'" has not been loaded yet for context: '+e+(t?"":". Use require([])")))):(v(),b.nextTick(function(){v(),h=s(a(null,t)),h.skipMap=i.skipMap,h.init(n,r,l,{enabled:!0}),d()}),o)}return i=i||{},mixin(o,{isBrowser:isBrowser,toUrl:function(e){var r,i=e.lastIndexOf("."),o=e.split("/")[0],a="."===o||".."===o;return-1!==i&&(!a||i>1)&&(r=e.substring(i,e.length),e=e.substring(0,i)),b.nameToUrl(n(e,t&&t.id,!0),r,!0)},defined:function(e){return hasProp(N,a(e,t,!1,!0).id)},specified:function(e){return e=a(e,t,!1,!0).id,hasProp(N,e)||hasProp(C,e)}}),t||(o.undef=function(e){c();var n=a(e,t,!0),i=getOwn(C,e);i.undefed=!0,r(e),delete N[e],delete L[n.url],delete T[e],eachReverse(A,function(t,n){t[0]===e&&A.splice(n,1)}),delete b.defQueueMap[e],i&&(i.events.defined&&(T[e]=i.events),p(e))}),o},enable:function(e){var t=getOwn(C,e.id);t&&s(e).enable()},completeLoad:function(e){var t,n,r,o=getOwn(E.shim,e)||{},a=o.exports;for(c();A.length;){if(n=A.shift(),null===n[0]){if(n[0]=e,t)break;t=!0}else n[0]===e&&(t=!0);f(n)}if(b.defQueueMap={},r=getOwn(C,e),!t&&!hasProp(N,e)&&r&&!r.inited){if(!(!E.enforceDefine||a&&getGlobal(a)))return i(e)?void 0:u(makeError("nodefine","No define call for "+e,null,[e]));f([e,o.deps||[],o.exportsFn])}d()},nameToUrl:function(e,t,n){var r,i,o,a,s,l,u,c=getOwn(E.pkgs,e);if(c&&(e=c),u=getOwn(O,e))return b.nameToUrl(u,t,n);if(req.jsExtRegExp.test(e))s=e+(t||"");else{for(r=E.paths,i=e.split("/"),o=i.length;o>0;o-=1)if(a=i.slice(0,o).join("/"),l=getOwn(r,a)){isArray(l)&&(l=l[0]),i.splice(0,o,l);break}s=i.join("/"),s+=t||(/^data\:|^blob\:|\?/.test(s)||n?"":".js"),s=("/"===s.charAt(0)||s.match(/^[\w\+\.\-]+:/)?"":E.baseUrl)+s}return E.urlArgs&&!/^blob\:/.test(s)?s+E.urlArgs(e,s):s},load:function(e,t){req.load(b,e,t)},execCb:function(e,t,n,r){return t.apply(r,n)},onScriptLoad:function(e){if("load"===e.type||readyRegExp.test((e.currentTarget||e.srcElement).readyState)){interactiveScript=null;var t=m(e);b.completeLoad(t.id)}},onScriptError:function(e){var t=m(e);if(!i(t.id)){var n=[];return eachProp(C,function(e,r){0!==r.indexOf("_@r")&&each(e.depMaps,function(e){return e.id===t.id?(n.push(r),!0):void 0})}),u(makeError("scripterror",'Script error for "'+t.id+(n.length?'", needed by: '+n.join(", "):'"'),e,[t.id]))}}},b.require=b.makeRequire(),b}function getInteractiveScript(){return interactiveScript&&"interactive"===interactiveScript.readyState?interactiveScript:(eachReverse(scripts(),function(e){return"interactive"===e.readyState?interactiveScript=e:void 0}),interactiveScript)}var req,s,head,baseElement,dataMain,src,interactiveScript,currentlyAddingScript,mainScript,subPath,version="2.2.0",commentRegExp=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,cjsRequireRegExp=/[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,jsSuffixRegExp=/\.js$/,currDirRegExp=/^\.\//,op=Object.prototype,ostring=op.toString,hasOwn=op.hasOwnProperty,isBrowser=!("undefined"==typeof window||"undefined"==typeof navigator||!window.document),isWebWorker=!isBrowser&&"undefined"!=typeof importScripts,readyRegExp=isBrowser&&"PLAYSTATION 3"===navigator.platform?/^complete$/:/^(complete|loaded)$/,defContextName="_",isOpera="undefined"!=typeof opera&&"[object Opera]"===opera.toString(),contexts={},cfg={},globalDefQueue=[],useInteractive=!1;if("undefined"==typeof define){if("undefined"!=typeof requirejs){if(isFunction(requirejs))return;cfg=requirejs,requirejs=void 0}"undefined"==typeof require||isFunction(require)||(cfg=require,require=void 0),req=requirejs=function(e,t,n,r){var i,o,a=defContextName;return isArray(e)||"string"==typeof e||(o=e,isArray(t)?(e=t,t=n,n=r):e=[]),o&&o.context&&(a=o.context),i=getOwn(contexts,a),i||(i=contexts[a]=req.s.newContext(a)),o&&i.configure(o),i.require(e,t,n)},req.config=function(e){return req(e)},req.nextTick="undefined"!=typeof setTimeout?function(e){setTimeout(e,4)}:function(e){e()},require||(require=req),req.version=version,req.jsExtRegExp=/^\/|:|\?|\.js$/,req.isBrowser=isBrowser,s=req.s={contexts:contexts,newContext:newContext},req({}),
each(["toUrl","undef","defined","specified"],function(e){req[e]=function(){var t=contexts[defContextName];return t.require[e].apply(t,arguments)}}),isBrowser&&(head=s.head=document.getElementsByTagName("head")[0],baseElement=document.getElementsByTagName("base")[0],baseElement&&(head=s.head=baseElement.parentNode)),req.onError=defaultOnError,req.createNode=function(e,t,n){var r=e.xhtml?document.createElementNS("http://www.w3.org/1999/xhtml","html:script"):document.createElement("script");return r.type=e.scriptType||"text/javascript",r.charset="utf-8",r.async=!0,r},req.load=function(e,t,n){var r,i=e&&e.config||{};if(isBrowser)return r=req.createNode(i,t,n),r.setAttribute("data-requirecontext",e.contextName),r.setAttribute("data-requiremodule",t),!r.attachEvent||r.attachEvent.toString&&r.attachEvent.toString().indexOf("[native code")<0||isOpera?(r.addEventListener("load",e.onScriptLoad,!1),r.addEventListener("error",e.onScriptError,!1)):(useInteractive=!0,r.attachEvent("onreadystatechange",e.onScriptLoad)),r.src=n,i.onNodeCreated&&i.onNodeCreated(r,i,t,n),currentlyAddingScript=r,baseElement?head.insertBefore(r,baseElement):head.appendChild(r),currentlyAddingScript=null,r;if(isWebWorker)try{setTimeout(function(){},0),importScripts(n),e.completeLoad(t)}catch(o){e.onError(makeError("importscripts","importScripts failed for "+t+" at "+n,o,[t]))}},isBrowser&&!cfg.skipDataMain&&eachReverse(scripts(),function(e){return head||(head=e.parentNode),dataMain=e.getAttribute("data-main"),dataMain?(mainScript=dataMain,cfg.baseUrl||-1!==mainScript.indexOf("!")||(src=mainScript.split("/"),mainScript=src.pop(),subPath=src.length?src.join("/")+"/":"./",cfg.baseUrl=subPath),mainScript=mainScript.replace(jsSuffixRegExp,""),req.jsExtRegExp.test(mainScript)&&(mainScript=dataMain),cfg.deps=cfg.deps?cfg.deps.concat(mainScript):[mainScript],!0):void 0}),define=function(e,t,n){var r,i;"string"!=typeof e&&(n=t,t=e,e=null),isArray(t)||(n=t,t=null),!t&&isFunction(n)&&(t=[],n.length&&(n.toString().replace(commentRegExp,commentReplace).replace(cjsRequireRegExp,function(e,n){t.push(n)}),t=(1===n.length?["require"]:["require","exports","module"]).concat(t))),useInteractive&&(r=currentlyAddingScript||getInteractiveScript(),r&&(e||(e=r.getAttribute("data-requiremodule")),i=contexts[r.getAttribute("data-requirecontext")])),i?(i.defQueue.push([e,t,n]),i.defQueueMap[e]=!0):globalDefQueue.push([e,t,n])},define.amd={jQuery:!0},req.exec=function(text){return eval(text)},req(cfg)}}(this),define(function(){"use strict";function e(e){var t;for(t=0;t<e.length;t+=1)e[t](u)}function t(){var t=c;l&&t.length&&(c=[],e(t))}function n(){l||(l=!0,a&&clearInterval(a),t())}function r(e){return l?e(u):c.push(e),r}var i,o,a,s="undefined"!=typeof window&&window.document,l=!s,u=s?document:null,c=[];if(s){if(document.addEventListener)document.addEventListener("DOMContentLoaded",n,!1),window.addEventListener("load",n,!1);else if(window.attachEvent){window.attachEvent("onload",n),o=document.createElement("div");try{i=null===window.frameElement}catch(p){}o.doScroll&&i&&window.external&&(a=setInterval(function(){try{o.doScroll(),n()}catch(e){}},30))}"complete"===document.readyState&&n()}return r.version="2.0.1",r.load=function(e,t,n,i){i.isBuild?n(null):r(n)},r}),define(function(){if("undefined"==typeof window)return{load:function(e,t,n){n()}};var e=document.getElementsByTagName("head")[0],t=window.navigator.userAgent.match(/Trident\/([^ ;]*)|AppleWebKit\/([^ ;]*)|Opera\/([^ ;]*)|rv\:([^ ;]*)(.*?)Gecko\/([^ ;]*)|MSIE\s([^ ;]*)|AndroidWebKit\/([^ ;]*)/)||0,n=!1,r=!0;t[1]||t[7]?n=parseInt(t[1])<6||parseInt(t[7])<=9:t[2]||t[8]?r=!1:t[4]&&(n=parseInt(t[4])<18);var i={};i.pluginBuilder="./css-builder";var o,a,s,l=function(){o=document.createElement("style"),e.appendChild(o),a=o.styleSheet||o.sheet},u=0,c=[],p=function(e){a.addImport(e),o.onload=function(){h()},u++,31==u&&(l(),u=0)},h=function(){s();var e=c.shift();return e?(s=e[1],void p(e[0])):void(s=null)},d=function(e,t){if(a&&a.addImport||l(),a&&a.addImport)s?c.push([e,t]):(p(e),s=t);else{o.textContent='@import "'+e+'";';var n=setInterval(function(){try{o.sheet.cssRules,clearInterval(n),t()}catch(e){}},10)}},f=function(t,n){var i=document.createElement("link");if(i.type="text/css",i.rel="stylesheet",r)i.onload=function(){i.onload=function(){},setTimeout(n,7)};else var o=setInterval(function(){for(var e=0;e<document.styleSheets.length;e++){var t=document.styleSheets[e];if(t.href==i.href)return clearInterval(o),n()}},10);i.href=t,e.appendChild(i)};return i.normalize=function(e,t){return".css"==e.substr(e.length-4,4)&&(e=e.substr(0,e.length-4)),t(e)},i.load=function(e,t,r,i){(n?d:f)(t.toUrl(e+".css"),r)},i}),define(["require","./normalize"],function(e,t){function n(e){if("none"==h.optimizeCss)return e;if("undefined"!=typeof process&&process.versions&&process.versions.node&&require.nodeRequire){try{var t=require.nodeRequire("csso")}catch(n){return console.log('Compression module not installed. Use "npm install csso -g" to enable.'),e}var r=e.length;try{e=t.justDoIt(e)}catch(n){return console.log("Compression failed due to a CSS syntax error."),e}return console.log("Compressed CSS output to "+Math.round(e.length/r*100)+"%."),e}return console.log("Compression not supported outside of nodejs environments."),e}function r(e){if("undefined"!=typeof process&&process.versions&&process.versions.node&&require.nodeRequire){var t=require.nodeRequire("fs"),n=t.readFileSync(e,"utf8");return 0===n.indexOf("\ufeff")?n.substring(1):n}var r,i,n=new java.io.File(e),o=java.lang.System.getProperty("line.separator"),a=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(n),"utf-8"));try{for(r=new java.lang.StringBuffer,i=a.readLine(),i&&i.length()&&65279===i.charAt(0)&&(i=i.substring(1)),r.append(i);null!==(i=a.readLine());)r.append(o).append(i);return String(r.toString())}finally{a.close()}}function i(e,t){if("undefined"!=typeof process&&process.versions&&process.versions.node&&require.nodeRequire){var n=require.nodeRequire("fs");n.writeFileSync(e,t,"utf8")}else{var r=new java.lang.String(t),i=new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(e),"utf-8"));try{i.write(r,0,r.length()),i.flush()}finally{i.close()}}}function o(e){return e.replace(/(["'\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r")}var a,s={},l=!!process.platform.match(/^win/),u=/^([^\:\/]+:\/)?\//,c="define('@writecss', function() {return function writeCss(c) {var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));};});",p=e.toUrl("base_url").split("/");p[p.length-1]="";var h,d=p.join("/"),f=!0,g=[],m={};return s.load=function(e,n,i,o){if(h=h||o,a||(a=path.resolve(h.dir||path.dirname(h.out),h.siteRoot||".")+"/",l&&(a=a.replace(/\\/g,"/"))),e.match(u))return i();var s=n.toUrl(e+".css");l&&(s=s.replace(/\\/g,"/"));var c=s;if(c.indexOf(d)<0){var p=n.toUrl(h.appDir);l&&(p=p.replace(/\\/g,"/")),0==c.indexOf(p)&&(c=a+c.substring(p.length))}m[e]=t(r(s),c,a),i()},s.normalize=function(e,t){return".css"==e.substr(e.length-4,4)&&(e=e.substr(0,e.length-4)),t(e)},s.write=function(e,t,r,i){var a;if(!t.match(u)&&(g.push(m[t]),global._requirejsCssData?global._requirejsCssData.usedBy.css=!0:global._requirejsCssData={usedBy:{css:!0},css:""},0!=h.buildCSS)){var s=m[t];h.writeCSSModule&&s?(f&&(f=!1,r(c)),a='define(["@writecss"], function(writeCss){\n writeCss("'+o(n(s))+'");\n})'):a="define(function(){})",r.asModule(e+"!"+t,a)}},s.onLayerEnd=function(e,t){if(h.separateCSS&&h.IESelectorLimit)throw"RequireCSS: separateCSS option is not compatible with ensuring the IE selector limit";if(h.separateCSS){var r=t.path.replace(/(\.js)?$/,".css");console.log("Writing CSS! file: "+r+"\n");var a=g.join("");process.nextTick(function(){global._requirejsCssData&&(a=global._requirejsCssData.css=a+global._requirejsCssData.css,delete global._requirejsCssData.usedBy.css,0===Object.keys(global._requirejsCssData.usedBy).length&&delete global._requirejsCssData),i(r,n(a))})}else if(0!=h.buildCSS&&1!=h.writeCSSModule)for(var s=h.IESelectorLimit?g:[g.join("")],l=0;l<s.length;l++){if(""==s[l])return;e("(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('"+o(n(s[l]))+"');\n")}g=[],f=!0},s}),define(function(){function e(e,r,i){if(e.match(s)||e.match(a))return e;e=o(e);var l=i.match(a),u=r.match(a);return!u||l&&l[1]==u[1]&&l[2]==u[2]?n(t(e,r),i):t(e,r)}function t(e,t){if("./"==e.substr(0,2)&&(e=e.substr(2)),e.match(s)||e.match(a))return e;var n=t.split("/"),r=e.split("/");for(n.pop();curPart=r.shift();)".."==curPart?n.pop():n.push(curPart);return n.join("/")}function n(e,t){var n=t.split("/");for(n.pop(),t=n.join("/")+"/",i=0;t.substr(i,1)==e.substr(i,1);)i++;for(;"/"!=t.substr(i,1);)i--;t=t.substr(i+1),e=e.substr(i+1),n=t.split("/");var r=e.split("/");for(out="";n.shift();)out+="../";for(;curPart=r.shift();)out+=curPart+"/";return out.substr(0,out.length-1)}var r=/([^:])\/+/g,o=function(e){return e.replace(r,"$1/")},a=/[^\:\/]*:\/\/([^\/])*/,s=/^(\/|data:)/,l=function(t,n,r){n=o(n),r=o(r);for(var i,a,t,s=/@import\s*("([^"]*)"|'([^']*)')|url\s*\((?!#)\s*(\s*"([^"]*)"|'([^']*)'|[^\)]*\s*)\s*\)/gi;i=s.exec(t);){a=i[3]||i[2]||i[5]||i[6]||i[4];var l;l=e(a,n,r);var u=i[5]||i[6]?1:0;t=t.substr(0,s.lastIndex-a.length-u-1)+l+t.substr(s.lastIndex-u-1),s.lastIndex=s.lastIndex+(l.length-a.length)}return t};return l.convertURIBase=e,l.absoluteURI=t,l.relativeURI=n,l}),!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function n(e){var t=!!e&&"length"in e&&e.length,n=oe.type(e);return"function"===n||oe.isWindow(e)?!1:"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e}function r(e,t,n){if(oe.isFunction(t))return oe.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return oe.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(ge.test(t))return oe.filter(t,e,n);t=oe.filter(t,e)}return oe.grep(e,function(e){return Z.call(t,e)>-1!==n})}function i(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function o(e){var t={};return oe.each(e.match(we)||[],function(e,n){t[n]=!0}),t}function a(){Y.removeEventListener("DOMContentLoaded",a),e.removeEventListener("load",a),oe.ready()}function s(){this.expando=oe.expando+s.uid++}function l(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(Ne,"-$&").toLowerCase(),n=e.getAttribute(r),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:Ae.test(n)?oe.parseJSON(n):n}catch(i){}Te.set(e,t,n)}else n=void 0;return n}function u(e,t,n,r){var i,o=1,a=20,s=r?function(){return r.cur()}:function(){return oe.css(e,t,"")},l=s(),u=n&&n[3]||(oe.cssNumber[t]?"":"px"),c=(oe.cssNumber[t]||"px"!==u&&+l)&&Oe.exec(oe.css(e,t));if(c&&c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do o=o||".5",c/=o,oe.style(e,t,c+u);while(o!==(o=s()/l)&&1!==o&&--a)}return n&&(c=+c||+l||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=u,r.start=c,r.end=i)),i}function c(e,t){var n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&oe.nodeName(e,t)?oe.merge([e],n):n}function p(e,t){for(var n=0,r=e.length;r>n;n++)Se.set(e[n],"globalEval",!t||Se.get(t[n],"globalEval"))}function h(e,t,n,r,i){for(var o,a,s,l,u,h,d=t.createDocumentFragment(),f=[],g=0,m=e.length;m>g;g++)if(o=e[g],o||0===o)if("object"===oe.type(o))oe.merge(f,o.nodeType?[o]:o);else if(je.test(o)){for(a=a||d.appendChild(t.createElement("div")),s=(Me.exec(o)||["",""])[1].toLowerCase(),l=_e[s]||_e._default,a.innerHTML=l[1]+oe.htmlPrefilter(o)+l[2],h=l[0];h--;)a=a.lastChild;oe.merge(f,a.childNodes),a=d.firstChild,a.textContent=""}else f.push(t.createTextNode(o));for(d.textContent="",g=0;o=f[g++];)if(r&&oe.inArray(o,r)>-1)i&&i.push(o);else if(u=oe.contains(o.ownerDocument,o),a=c(d.appendChild(o),"script"),u&&p(a),n)for(h=0;o=a[h++];)De.test(o.type||"")&&n.push(o);return d}function d(){return!0}function f(){return!1}function g(){try{return Y.activeElement}catch(e){}}function m(e,t,n,r,i,o){var a,s;if("object"==typeof t){"string"!=typeof n&&(r=r||n,n=void 0);for(s in t)m(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),i===!1)i=f;else if(!i)return e;return 1===o&&(a=i,i=function(e){return oe().off(e),a.apply(this,arguments)},i.guid=a.guid||(a.guid=oe.guid++)),e.each(function(){oe.event.add(this,t,i,r,n)})}function v(e,t){return oe.nodeName(e,"table")&&oe.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function y(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function $(e){var t=Ve.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function b(e,t){var n,r,i,o,a,s,l,u;if(1===t.nodeType){if(Se.hasData(e)&&(o=Se.access(e),a=Se.set(t,o),u=o.events)){delete a.handle,a.events={};for(i in u)for(n=0,r=u[i].length;r>n;n++)oe.event.add(t,i,u[i][n])}Te.hasData(e)&&(s=Te.access(e),l=oe.extend({},s),Te.set(t,l))}}function w(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Re.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function x(e,t,n,r){t=Q.apply([],t);var i,o,a,s,l,u,p=0,d=e.length,f=d-1,g=t[0],m=oe.isFunction(g);if(m||d>1&&"string"==typeof g&&!re.checkClone&&He.test(g))return e.each(function(i){var o=e.eq(i);m&&(t[0]=g.call(this,i,o.html())),x(o,t,n,r)});if(d&&(i=h(t,e[0].ownerDocument,!1,e,r),o=i.firstChild,1===i.childNodes.length&&(i=o),o||r)){for(a=oe.map(c(i,"script"),y),s=a.length;d>p;p++)l=i,p!==f&&(l=oe.clone(l,!0,!0),s&&oe.merge(a,c(l,"script"))),n.call(e[p],l,p);if(s)for(u=a[a.length-1].ownerDocument,oe.map(a,$),p=0;s>p;p++)l=a[p],De.test(l.type||"")&&!Se.access(l,"globalEval")&&oe.contains(u,l)&&(l.src?oe._evalUrl&&oe._evalUrl(l.src):oe.globalEval(l.textContent.replace(Ge,"")))}return e}function E(e,t,n){for(var r,i=t?oe.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||oe.cleanData(c(r)),r.parentNode&&(n&&oe.contains(r.ownerDocument,r)&&p(c(r,"script")),r.parentNode.removeChild(r));return e}function C(e,t){var n=oe(t.createElement(e)).appendTo(t.body),r=oe.css(n[0],"display");return n.detach(),r}function S(e){var t=Y,n=ze[e];return n||(n=C(e,t),"none"!==n&&n||(We=(We||oe("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=We[0].contentDocument,t.write(),t.close(),n=C(e,t),We.detach()),ze[e]=n),n}function T(e,t,n){var r,i,o,a,s=e.style;return n=n||Xe(e),a=n?n.getPropertyValue(t)||n[t]:void 0,""!==a&&void 0!==a||oe.contains(e.ownerDocument,e)||(a=oe.style(e,t)),n&&!re.pixelMarginRight()&&Ye.test(a)&&Ke.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o),void 0!==a?a+"":a}function A(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function N(e){if(e in rt)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=nt.length;n--;)if(e=nt[n]+t,e in rt)return e}function L(e,t,n){var r=Oe.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function O(e,t,n,r,i){for(var o=n===(r?"border":"content")?4:"width"===t?1:0,a=0;4>o;o+=2)"margin"===n&&(a+=oe.css(e,n+Ie[o],!0,i)),r?("content"===n&&(a-=oe.css(e,"padding"+Ie[o],!0,i)),"margin"!==n&&(a-=oe.css(e,"border"+Ie[o]+"Width",!0,i))):(a+=oe.css(e,"padding"+Ie[o],!0,i),"padding"!==n&&(a+=oe.css(e,"border"+Ie[o]+"Width",!0,i)));return a}function I(t,n,r){var i=!0,o="width"===n?t.offsetWidth:t.offsetHeight,a=Xe(t),s="border-box"===oe.css(t,"boxSizing",!1,a);if(Y.msFullscreenElement&&e.top!==e&&t.getClientRects().length&&(o=Math.round(100*t.getBoundingClientRect()[n])),0>=o||null==o){if(o=T(t,n,a),(0>o||null==o)&&(o=t.style[n]),Ye.test(o))return o;i=s&&(re.boxSizingReliable()||o===t.style[n]),o=parseFloat(o)||0}return o+O(t,n,r||(s?"border":"content"),i,a)+"px"}function k(e,t){for(var n,r,i,o=[],a=0,s=e.length;s>a;a++)r=e[a],r.style&&(o[a]=Se.get(r,"olddisplay"),n=r.style.display,t?(o[a]||"none"!==n||(r.style.display=""),""===r.style.display&&ke(r)&&(o[a]=Se.access(r,"olddisplay",S(r.nodeName)))):(i=ke(r),"none"===n&&i||Se.set(r,"olddisplay",i?n:oe.css(r,"display"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[a]||"":"none"));return e}function R(e,t,n,r,i){return new R.prototype.init(e,t,n,r,i)}function M(){return e.setTimeout(function(){it=void 0}),it=oe.now()}function D(e,t){var n,r=0,i={height:e};for(t=t?1:0;4>r;r+=2-t)n=Ie[r],i["margin"+n]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function _(e,t,n){for(var r,i=(F.tweeners[t]||[]).concat(F.tweeners["*"]),o=0,a=i.length;a>o;o++)if(r=i[o].call(n,t,e))return r}function j(e,t,n){var r,i,o,a,s,l,u,c,p=this,h={},d=e.style,f=e.nodeType&&ke(e),g=Se.get(e,"fxshow");n.queue||(s=oe._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,oe.queue(e,"fx").length||s.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],u=oe.css(e,"display"),c="none"===u?Se.get(e,"olddisplay")||S(e.nodeName):u,"inline"===c&&"none"===oe.css(e,"float")&&(d.display="inline-block")),n.overflow&&(d.overflow="hidden",p.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],at.exec(i)){if(delete t[r],o=o||"toggle"===i,i===(f?"hide":"show")){if("show"!==i||!g||void 0===g[r])continue;f=!0}h[r]=g&&g[r]||oe.style(e,r)}else u=void 0;if(oe.isEmptyObject(h))"inline"===("none"===u?S(e.nodeName):u)&&(d.display=u);else{g?"hidden"in g&&(f=g.hidden):g=Se.access(e,"fxshow",{}),o&&(g.hidden=!f),f?oe(e).show():p.done(function(){oe(e).hide()}),p.done(function(){var t;Se.remove(e,"fxshow");for(t in h)oe.style(e,t,h[t])});for(r in h)a=_(f?g[r]:0,r,p),r in g||(g[r]=a.start,f&&(a.end=a.start,a.start="width"===r||"height"===r?1:0))}}function P(e,t){var n,r,i,o,a;for(n in e)if(r=oe.camelCase(n),i=t[r],o=e[n],oe.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),a=oe.cssHooks[r],a&&"expand"in a){o=a.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}function F(e,t,n){var r,i,o=0,a=F.prefilters.length,s=oe.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;for(var t=it||M(),n=Math.max(0,u.startTime+u.duration-t),r=n/u.duration||0,o=1-r,a=0,l=u.tweens.length;l>a;a++)u.tweens[a].run(o);return s.notifyWith(e,[u,o,n]),1>o&&l?n:(s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:oe.extend({},t),opts:oe.extend(!0,{specialEasing:{},easing:oe.easing._default},n),originalProperties:t,originalOptions:n,startTime:it||M(),duration:n.duration,tweens:[],createTween:function(t,n){var r=oe.Tween(e,u.opts,t,n,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(r),r},stop:function(t){var n=0,r=t?u.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)u.tweens[n].run(1);return t?(s.notifyWith(e,[u,1,0]),s.resolveWith(e,[u,t])):s.rejectWith(e,[u,t]),this}}),c=u.props;for(P(c,u.opts.specialEasing);a>o;o++)if(r=F.prefilters[o].call(u,e,c,u.opts))return oe.isFunction(r.stop)&&(oe._queueHooks(u.elem,u.opts.queue).stop=oe.proxy(r.stop,r)),r;return oe.map(c,_,u),oe.isFunction(u.opts.start)&&u.opts.start.call(e,u),oe.fx.timer(oe.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function q(e){return e.getAttribute&&e.getAttribute("class")||""}function U(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,o=t.toLowerCase().match(we)||[];if(oe.isFunction(n))for(;r=o[i++];)"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function B(e,t,n,r){function i(s){var l;return o[s]=!0,oe.each(e[s]||[],function(e,s){var u=s(t,n,r);return"string"!=typeof u||a||o[u]?a?!(l=u):void 0:(t.dataTypes.unshift(u),i(u),!1)}),l}var o={},a=e===Tt;return i(t.dataTypes[0])||!o["*"]&&i("*")}function H(e,t){var n,r,i=oe.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&oe.extend(!0,e,r),e}function V(e,t,n){for(var r,i,o,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){l.unshift(i);break}if(l[0]in n)o=l[0];else{for(i in n){if(!l[0]||e.converters[i+" "+l[0]]){o=i;break}a||(a=i)}o=o||a}return o?(o!==l[0]&&l.unshift(o),n[o]):void 0}function G(e,t,n,r){var i,o,a,s,l,u={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)u[a.toLowerCase()]=e.converters[a];for(o=c.shift();o;)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!l&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(i in u)if(s=i.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[i]:u[i]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(p){return{state:"parsererror",error:a?p:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}function W(e,t,n,r){var i;if(oe.isArray(t))oe.each(t,function(t,i){n||Ot.test(e)?r(e,i):W(e+"["+("object"==typeof i&&null!=i?t:"")+"]",i,n,r)});else if(n||"object"!==oe.type(t))r(e,t);else for(i in t)W(e+"["+i+"]",t[i],n,r)}function z(e){return oe.isWindow(e)?e:9===e.nodeType&&e.defaultView}var K=[],Y=e.document,X=K.slice,Q=K.concat,J=K.push,Z=K.indexOf,ee={},te=ee.toString,ne=ee.hasOwnProperty,re={},ie="2.2.3",oe=function(e,t){return new oe.fn.init(e,t)},ae=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,se=/^-ms-/,le=/-([\da-z])/gi,ue=function(e,t){return t.toUpperCase()};oe.fn=oe.prototype={jquery:ie,constructor:oe,selector:"",length:0,toArray:function(){return X.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:X.call(this)},pushStack:function(e){var t=oe.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return oe.each(this,e)},map:function(e){return this.pushStack(oe.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(X.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:J,sort:K.sort,splice:K.splice},oe.extend=oe.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof a&&(u=a,a=arguments[s]||{},s++),"object"==typeof a||oe.isFunction(a)||(a={}),s===l&&(a=this,s--);l>s;s++)if(null!=(e=arguments[s]))for(t in e)n=a[t],r=e[t],a!==r&&(u&&r&&(oe.isPlainObject(r)||(i=oe.isArray(r)))?(i?(i=!1,o=n&&oe.isArray(n)?n:[]):o=n&&oe.isPlainObject(n)?n:{},a[t]=oe.extend(u,o,r)):void 0!==r&&(a[t]=r));return a},oe.extend({expando:"jQuery"+(ie+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===oe.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=e&&e.toString();return!oe.isArray(e)&&t-parseFloat(t)+1>=0},isPlainObject:function(e){var t;if("object"!==oe.type(e)||e.nodeType||oe.isWindow(e))return!1;if(e.constructor&&!ne.call(e,"constructor")&&!ne.call(e.constructor.prototype||{},"isPrototypeOf"))return!1;for(t in e);return void 0===t||ne.call(e,t)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?ee[te.call(e)]||"object":typeof e},globalEval:function(e){var t,n=eval;e=oe.trim(e),e&&(1===e.indexOf("use strict")?(t=Y.createElement("script"),t.text=e,Y.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(se,"ms-").replace(le,ue)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var r,i=0;if(n(e))for(r=e.length;r>i&&t.call(e[i],i,e[i])!==!1;i++);else for(i in e)if(t.call(e[i],i,e[i])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(ae,"")},makeArray:function(e,t){var r=t||[];return null!=e&&(n(Object(e))?oe.merge(r,"string"==typeof e?[e]:e):J.call(r,e)),r},inArray:function(e,t,n){return null==t?-1:Z.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;n>r;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r,i=[],o=0,a=e.length,s=!n;a>o;o++)r=!t(e[o],o),r!==s&&i.push(e[o]);return i},map:function(e,t,r){var i,o,a=0,s=[];if(n(e))for(i=e.length;i>a;a++)o=t(e[a],a,r),null!=o&&s.push(o);else for(a in e)o=t(e[a],a,r),null!=o&&s.push(o);return Q.apply([],s)},guid:1,proxy:function(e,t){var n,r,i;return"string"==typeof t&&(n=e[t],t=e,e=n),oe.isFunction(e)?(r=X.call(arguments,2),i=function(){return e.apply(t||this,r.concat(X.call(arguments)))},i.guid=e.guid=e.guid||oe.guid++,i):void 0},now:Date.now,support:re}),"function"==typeof Symbol&&(oe.fn[Symbol.iterator]=K[Symbol.iterator]),oe.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){ee["[object "+t+"]"]=t.toLowerCase()});var ce=function(e){function t(e,t,n,r){var i,o,a,s,l,u,p,d,f=t&&t.ownerDocument,g=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==g&&9!==g&&11!==g)return n;if(!r&&((t?t.ownerDocument||t:q)!==k&&I(t),t=t||k,M)){if(11!==g&&(u=ve.exec(e)))if(i=u[1]){if(9===g){if(!(a=t.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&P(t,a)&&a.id===i)return n.push(a),n}else{if(u[2])return J.apply(n,t.getElementsByTagName(e)),n;if((i=u[3])&&w.getElementsByClassName&&t.getElementsByClassName)return J.apply(n,t.getElementsByClassName(i)),n}if(w.qsa&&!G[e+" "]&&(!D||!D.test(e))){if(1!==g)f=t,d=e;else if("object"!==t.nodeName.toLowerCase()){for((s=t.getAttribute("id"))?s=s.replace($e,"\\$&"):t.setAttribute("id",s=F),p=S(e),o=p.length,l=he.test(s)?"#"+s:"[id='"+s+"']";o--;)p[o]=l+" "+h(p[o]);d=p.join(","),f=ye.test(e)&&c(t.parentNode)||t}if(d)try{return J.apply(n,f.querySelectorAll(d)),n}catch(m){}finally{s===F&&t.removeAttribute("id")}}}return A(e.replace(se,"$1"),t,n,r)}function n(){function e(n,r){return t.push(n+" ")>x.cacheLength&&delete e[t.shift()],e[n+" "]=r}var t=[];return e}function r(e){return e[F]=!0,e}function i(e){var t=k.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),r=n.length;r--;)x.attrHandle[n[r]]=t}function a(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||z)-(~e.sourceIndex||z);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function u(e){return r(function(t){return t=+t,r(function(n,r){for(var i,o=e([],n.length,t),a=o.length;a--;)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}function c(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function p(){}function h(e){for(var t=0,n=e.length,r="";n>t;t++)r+=e[t].value;return r}function d(e,t,n){var r=t.dir,i=n&&"parentNode"===r,o=B++;return t.first?function(t,n,o){for(;t=t[r];)if(1===t.nodeType||i)return e(t,n,o)}:function(t,n,a){var s,l,u,c=[U,o];if(a){for(;t=t[r];)if((1===t.nodeType||i)&&e(t,n,a))return!0}else for(;t=t[r];)if(1===t.nodeType||i){if(u=t[F]||(t[F]={}),l=u[t.uniqueID]||(u[t.uniqueID]={}),(s=l[r])&&s[0]===U&&s[1]===o)return c[2]=s[2];if(l[r]=c,c[2]=e(t,n,a))return!0}}}function f(e){return e.length>1?function(t,n,r){for(var i=e.length;i--;)if(!e[i](t,n,r))return!1;return!0}:e[0]}function g(e,n,r){for(var i=0,o=n.length;o>i;i++)t(e,n[i],r);return r}function m(e,t,n,r,i){for(var o,a=[],s=0,l=e.length,u=null!=t;l>s;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),u&&t.push(s)));return a}function v(e,t,n,i,o,a){return i&&!i[F]&&(i=v(i)),o&&!o[F]&&(o=v(o,a)),r(function(r,a,s,l){var u,c,p,h=[],d=[],f=a.length,v=r||g(t||"*",s.nodeType?[s]:s,[]),y=!e||!r&&t?v:m(v,h,e,s,l),$=n?o||(r?e:f||i)?[]:a:y;if(n&&n(y,$,s,l),i)for(u=m($,d),i(u,[],s,l),c=u.length;c--;)(p=u[c])&&($[d[c]]=!(y[d[c]]=p));if(r){if(o||e){if(o){for(u=[],c=$.length;c--;)(p=$[c])&&u.push(y[c]=p);o(null,$=[],u,l)}for(c=$.length;c--;)(p=$[c])&&(u=o?ee(r,p):h[c])>-1&&(r[u]=!(a[u]=p))}}else $=m($===a?$.splice(f,$.length):$),o?o(null,a,$,l):J.apply(a,$)})}function y(e){for(var t,n,r,i=e.length,o=x.relative[e[0].type],a=o||x.relative[" "],s=o?1:0,l=d(function(e){return e===t},a,!0),u=d(function(e){return ee(t,e)>-1},a,!0),c=[function(e,n,r){var i=!o&&(r||n!==N)||((t=n).nodeType?l(e,n,r):u(e,n,r));return t=null,i}];i>s;s++)if(n=x.relative[e[s].type])c=[d(f(c),n)];else{if(n=x.filter[e[s].type].apply(null,e[s].matches),n[F]){for(r=++s;i>r&&!x.relative[e[r].type];r++);return v(s>1&&f(c),s>1&&h(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(se,"$1"),n,r>s&&y(e.slice(s,r)),i>r&&y(e=e.slice(r)),i>r&&h(e))}c.push(n)}return f(c)}function $(e,n){var i=n.length>0,o=e.length>0,a=function(r,a,s,l,u){var c,p,h,d=0,f="0",g=r&&[],v=[],y=N,$=r||o&&x.find.TAG("*",u),b=U+=null==y?1:Math.random()||.1,w=$.length;for(u&&(N=a===k||a||u);f!==w&&null!=(c=$[f]);f++){if(o&&c){for(p=0,a||c.ownerDocument===k||(I(c),s=!M);h=e[p++];)if(h(c,a||k,s)){l.push(c);break}u&&(U=b)}i&&((c=!h&&c)&&d--,r&&g.push(c))}if(d+=f,i&&f!==d){for(p=0;h=n[p++];)h(g,v,a,s);if(r){if(d>0)for(;f--;)g[f]||v[f]||(v[f]=X.call(l));v=m(v)}J.apply(l,v),u&&!r&&v.length>0&&d+n.length>1&&t.uniqueSort(l)}return u&&(U=b,N=y),g};return i?r(a):a}var b,w,x,E,C,S,T,A,N,L,O,I,k,R,M,D,_,j,P,F="sizzle"+1*new Date,q=e.document,U=0,B=0,H=n(),V=n(),G=n(),W=function(e,t){return e===t&&(O=!0),0},z=1<<31,K={}.hasOwnProperty,Y=[],X=Y.pop,Q=Y.push,J=Y.push,Z=Y.slice,ee=function(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",ie="\\["+ne+"*("+re+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+re+"))|)"+ne+"*\\]",oe=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ie+")*)|.*)\\)|)",ae=new RegExp(ne+"+","g"),se=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),ue=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ce=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),pe=new RegExp(oe),he=new RegExp("^"+re+"$"),de={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re+"|[*])"),ATTR:new RegExp("^"+ie),PSEUDO:new RegExp("^"+oe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},fe=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,me=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,$e=/'|\\/g,be=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),we=function(e,t,n){var r="0x"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320);
},xe=function(){I()};try{J.apply(Y=Z.call(q.childNodes),q.childNodes),Y[q.childNodes.length].nodeType}catch(Ee){J={apply:Y.length?function(e,t){Q.apply(e,Z.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}w=t.support={},C=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},I=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:q;return r!==k&&9===r.nodeType&&r.documentElement?(k=r,R=k.documentElement,M=!C(k),(n=k.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",xe,!1):n.attachEvent&&n.attachEvent("onunload",xe)),w.attributes=i(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=i(function(e){return e.appendChild(k.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=me.test(k.getElementsByClassName),w.getById=i(function(e){return R.appendChild(e).id=F,!k.getElementsByName||!k.getElementsByName(F).length}),w.getById?(x.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&M){var n=t.getElementById(e);return n?[n]:[]}},x.filter.ID=function(e){var t=e.replace(be,we);return function(e){return e.getAttribute("id")===t}}):(delete x.find.ID,x.filter.ID=function(e){var t=e.replace(be,we);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),x.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){for(;n=o[i++];)1===n.nodeType&&r.push(n);return r}return o},x.find.CLASS=w.getElementsByClassName&&function(e,t){return"undefined"!=typeof t.getElementsByClassName&&M?t.getElementsByClassName(e):void 0},_=[],D=[],(w.qsa=me.test(k.querySelectorAll))&&(i(function(e){R.appendChild(e).innerHTML="<a id='"+F+"'></a><select id='"+F+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&D.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||D.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+F+"-]").length||D.push("~="),e.querySelectorAll(":checked").length||D.push(":checked"),e.querySelectorAll("a#"+F+"+*").length||D.push(".#.+[+~]")}),i(function(e){var t=k.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&D.push("name"+ne+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||D.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),D.push(",.*:")})),(w.matchesSelector=me.test(j=R.matches||R.webkitMatchesSelector||R.mozMatchesSelector||R.oMatchesSelector||R.msMatchesSelector))&&i(function(e){w.disconnectedMatch=j.call(e,"div"),j.call(e,"[s!='']:x"),_.push("!=",oe)}),D=D.length&&new RegExp(D.join("|")),_=_.length&&new RegExp(_.join("|")),t=me.test(R.compareDocumentPosition),P=t||me.test(R.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},W=t?function(e,t){if(e===t)return O=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!w.sortDetached&&t.compareDocumentPosition(e)===n?e===k||e.ownerDocument===q&&P(q,e)?-1:t===k||t.ownerDocument===q&&P(q,t)?1:L?ee(L,e)-ee(L,t):0:4&n?-1:1)}:function(e,t){if(e===t)return O=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,s=[e],l=[t];if(!i||!o)return e===k?-1:t===k?1:i?-1:o?1:L?ee(L,e)-ee(L,t):0;if(i===o)return a(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;s[r]===l[r];)r++;return r?a(s[r],l[r]):s[r]===q?-1:l[r]===q?1:0},k):k},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==k&&I(e),n=n.replace(ce,"='$1']"),w.matchesSelector&&M&&!G[n+" "]&&(!_||!_.test(n))&&(!D||!D.test(n)))try{var r=j.call(e,n);if(r||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(i){}return t(n,k,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==k&&I(e),P(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==k&&I(e);var n=x.attrHandle[t.toLowerCase()],r=n&&K.call(x.attrHandle,t.toLowerCase())?n(e,t,!M):void 0;return void 0!==r?r:w.attributes||!M?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],r=0,i=0;if(O=!w.detectDuplicates,L=!w.sortStable&&e.slice(0),e.sort(W),O){for(;t=e[i++];)t===e[i]&&(r=n.push(i));for(;r--;)e.splice(n[r],1)}return L=null,e},E=t.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=E(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r++];)n+=E(t);return n},x=t.selectors={cacheLength:50,createPseudo:r,match:de,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(be,we),e[3]=(e[3]||e[4]||e[5]||"").replace(be,we),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return de.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&pe.test(n)&&(t=S(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(be,we).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=H[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&H(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,r){return function(i){var o=t.attr(i,e);return null==o?"!="===n:n?(o+="","="===n?o===r:"!="===n?o!==r:"^="===n?r&&0===o.indexOf(r):"*="===n?r&&o.indexOf(r)>-1:"$="===n?r&&o.slice(-r.length)===r:"~="===n?(" "+o.replace(ae," ")+" ").indexOf(r)>-1:"|="===n?o===r||o.slice(0,r.length+1)===r+"-":!1):!0}},CHILD:function(e,t,n,r,i){var o="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,l){var u,c,p,h,d,f,g=o!==a?"nextSibling":"previousSibling",m=t.parentNode,v=s&&t.nodeName.toLowerCase(),y=!l&&!s,$=!1;if(m){if(o){for(;g;){for(h=t;h=h[g];)if(s?h.nodeName.toLowerCase()===v:1===h.nodeType)return!1;f=g="only"===e&&!f&&"nextSibling"}return!0}if(f=[a?m.firstChild:m.lastChild],a&&y){for(h=m,p=h[F]||(h[F]={}),c=p[h.uniqueID]||(p[h.uniqueID]={}),u=c[e]||[],d=u[0]===U&&u[1],$=d&&u[2],h=d&&m.childNodes[d];h=++d&&h&&h[g]||($=d=0)||f.pop();)if(1===h.nodeType&&++$&&h===t){c[e]=[U,d,$];break}}else if(y&&(h=t,p=h[F]||(h[F]={}),c=p[h.uniqueID]||(p[h.uniqueID]={}),u=c[e]||[],d=u[0]===U&&u[1],$=d),$===!1)for(;(h=++d&&h&&h[g]||($=d=0)||f.pop())&&((s?h.nodeName.toLowerCase()!==v:1!==h.nodeType)||!++$||(y&&(p=h[F]||(h[F]={}),c=p[h.uniqueID]||(p[h.uniqueID]={}),c[e]=[U,$]),h!==t)););return $-=i,$===r||$%r===0&&$/r>=0}}},PSEUDO:function(e,n){var i,o=x.pseudos[e]||x.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[F]?o(n):o.length>1?(i=[e,e,"",n],x.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,i=o(e,n),a=i.length;a--;)r=ee(e,i[a]),e[r]=!(t[r]=i[a])}):function(e){return o(e,0,i)}):o}},pseudos:{not:r(function(e){var t=[],n=[],i=T(e.replace(se,"$1"));return i[F]?r(function(e,t,n,r){for(var o,a=i(e,null,r,[]),s=e.length;s--;)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,r,o){return t[0]=e,i(t,null,o,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){return t(e,n).length>0}}),contains:r(function(e){return e=e.replace(be,we),function(t){return(t.textContent||t.innerText||E(t)).indexOf(e)>-1}}),lang:r(function(e){return he.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(be,we).toLowerCase(),function(t){var n;do if(n=M?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===R},focus:function(e){return e===k.activeElement&&(!k.hasFocus||k.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return fe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:u(function(){return[0]}),last:u(function(e,t){return[t-1]}),eq:u(function(e,t,n){return[0>n?n+t:n]}),even:u(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:u(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:u(function(e,t,n){for(var r=0>n?n+t:n;--r>=0;)e.push(r);return e}),gt:u(function(e,t,n){for(var r=0>n?n+t:n;++r<t;)e.push(r);return e})}},x.pseudos.nth=x.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[b]=s(b);for(b in{submit:!0,reset:!0})x.pseudos[b]=l(b);return p.prototype=x.filters=x.pseudos,x.setFilters=new p,S=t.tokenize=function(e,n){var r,i,o,a,s,l,u,c=V[e+" "];if(c)return n?0:c.slice(0);for(s=e,l=[],u=x.preFilter;s;){r&&!(i=le.exec(s))||(i&&(s=s.slice(i[0].length)||s),l.push(o=[])),r=!1,(i=ue.exec(s))&&(r=i.shift(),o.push({value:r,type:i[0].replace(se," ")}),s=s.slice(r.length));for(a in x.filter)!(i=de[a].exec(s))||u[a]&&!(i=u[a](i))||(r=i.shift(),o.push({value:r,type:a,matches:i}),s=s.slice(r.length));if(!r)break}return n?s.length:s?t.error(e):V(e,l).slice(0)},T=t.compile=function(e,t){var n,r=[],i=[],o=G[e+" "];if(!o){for(t||(t=S(e)),n=t.length;n--;)o=y(t[n]),o[F]?r.push(o):i.push(o);o=G(e,$(i,r)),o.selector=e}return o},A=t.select=function(e,t,n,r){var i,o,a,s,l,u="function"==typeof e&&e,p=!r&&S(e=u.selector||e);if(n=n||[],1===p.length){if(o=p[0]=p[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&w.getById&&9===t.nodeType&&M&&x.relative[o[1].type]){if(t=(x.find.ID(a.matches[0].replace(be,we),t)||[])[0],!t)return n;u&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(i=de.needsContext.test(e)?0:o.length;i--&&(a=o[i],!x.relative[s=a.type]);)if((l=x.find[s])&&(r=l(a.matches[0].replace(be,we),ye.test(o[0].type)&&c(t.parentNode)||t))){if(o.splice(i,1),e=r.length&&h(o),!e)return J.apply(n,r),n;break}}return(u||T(e,p))(r,t,!M,n,!t||ye.test(e)&&c(t.parentNode)||t),n},w.sortStable=F.split("").sort(W).join("")===F,w.detectDuplicates=!!O,I(),w.sortDetached=i(function(e){return 1&e.compareDocumentPosition(k.createElement("div"))}),i(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&i(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute("disabled")})||o(te,function(e,t,n){var r;return n?void 0:e[t]===!0?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),t}(e);oe.find=ce,oe.expr=ce.selectors,oe.expr[":"]=oe.expr.pseudos,oe.uniqueSort=oe.unique=ce.uniqueSort,oe.text=ce.getText,oe.isXMLDoc=ce.isXML,oe.contains=ce.contains;var pe=function(e,t,n){for(var r=[],i=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&oe(e).is(n))break;r.push(e)}return r},he=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},de=oe.expr.match.needsContext,fe=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,ge=/^.[^:#\[\.,]*$/;oe.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?oe.find.matchesSelector(r,e)?[r]:[]:oe.find.matches(e,oe.grep(t,function(e){return 1===e.nodeType}))},oe.fn.extend({find:function(e){var t,n=this.length,r=[],i=this;if("string"!=typeof e)return this.pushStack(oe(e).filter(function(){for(t=0;n>t;t++)if(oe.contains(i[t],this))return!0}));for(t=0;n>t;t++)oe.find(e,i[t],r);return r=this.pushStack(n>1?oe.unique(r):r),r.selector=this.selector?this.selector+" "+e:e,r},filter:function(e){return this.pushStack(r(this,e||[],!1))},not:function(e){return this.pushStack(r(this,e||[],!0))},is:function(e){return!!r(this,"string"==typeof e&&de.test(e)?oe(e):e||[],!1).length}});var me,ve=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ye=oe.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||me,"string"==typeof e){if(r="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:ve.exec(e),!r||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof oe?t[0]:t,oe.merge(this,oe.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:Y,!0)),fe.test(r[1])&&oe.isPlainObject(t))for(r in t)oe.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return i=Y.getElementById(r[2]),i&&i.parentNode&&(this.length=1,this[0]=i),this.context=Y,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):oe.isFunction(e)?void 0!==n.ready?n.ready(e):e(oe):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),oe.makeArray(e,this))};ye.prototype=oe.fn,me=oe(Y);var $e=/^(?:parents|prev(?:Until|All))/,be={children:!0,contents:!0,next:!0,prev:!0};oe.fn.extend({has:function(e){var t=oe(e,this),n=t.length;return this.filter(function(){for(var e=0;n>e;e++)if(oe.contains(this,t[e]))return!0})},closest:function(e,t){for(var n,r=0,i=this.length,o=[],a=de.test(e)||"string"!=typeof e?oe(e,t||this.context):0;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&oe.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(o.length>1?oe.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?Z.call(oe(e),this[0]):Z.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(oe.uniqueSort(oe.merge(this.get(),oe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),oe.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return pe(e,"parentNode")},parentsUntil:function(e,t,n){return pe(e,"parentNode",n)},next:function(e){return i(e,"nextSibling")},prev:function(e){return i(e,"previousSibling")},nextAll:function(e){return pe(e,"nextSibling")},prevAll:function(e){return pe(e,"previousSibling")},nextUntil:function(e,t,n){return pe(e,"nextSibling",n)},prevUntil:function(e,t,n){return pe(e,"previousSibling",n)},siblings:function(e){return he((e.parentNode||{}).firstChild,e)},children:function(e){return he(e.firstChild)},contents:function(e){return e.contentDocument||oe.merge([],e.childNodes)}},function(e,t){oe.fn[e]=function(n,r){var i=oe.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=oe.filter(r,i)),this.length>1&&(be[e]||oe.uniqueSort(i),$e.test(e)&&i.reverse()),this.pushStack(i)}});var we=/\S+/g;oe.Callbacks=function(e){e="string"==typeof e?o(e):oe.extend({},e);var t,n,r,i,a=[],s=[],l=-1,u=function(){for(i=e.once,r=t=!0;s.length;l=-1)for(n=s.shift();++l<a.length;)a[l].apply(n[0],n[1])===!1&&e.stopOnFalse&&(l=a.length,n=!1);e.memory||(n=!1),t=!1,i&&(a=n?[]:"")},c={add:function(){return a&&(n&&!t&&(l=a.length-1,s.push(n)),function r(t){oe.each(t,function(t,n){oe.isFunction(n)?e.unique&&c.has(n)||a.push(n):n&&n.length&&"string"!==oe.type(n)&&r(n)})}(arguments),n&&!t&&u()),this},remove:function(){return oe.each(arguments,function(e,t){for(var n;(n=oe.inArray(t,a,n))>-1;)a.splice(n,1),l>=n&&l--}),this},has:function(e){return e?oe.inArray(e,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return i=s=[],a=n="",this},disabled:function(){return!a},lock:function(){return i=s=[],n||(a=n=""),this},locked:function(){return!!i},fireWith:function(e,n){return i||(n=n||[],n=[e,n.slice?n.slice():n],s.push(n),t||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},oe.extend({Deferred:function(e){var t=[["resolve","done",oe.Callbacks("once memory"),"resolved"],["reject","fail",oe.Callbacks("once memory"),"rejected"],["notify","progress",oe.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return oe.Deferred(function(n){oe.each(t,function(t,o){var a=oe.isFunction(e[t])&&e[t];i[o[1]](function(){var e=a&&a.apply(this,arguments);e&&oe.isFunction(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[o[0]+"With"](this===r?n.promise():this,a?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?oe.extend(e,r):r}},i={};return r.pipe=r.then,oe.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+"With"](this===i?r:this,arguments),this},i[o[0]+"With"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t,n,r,i=0,o=X.call(arguments),a=o.length,s=1!==a||e&&oe.isFunction(e.promise)?a:0,l=1===s?e:oe.Deferred(),u=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length>1?X.call(arguments):i,r===t?l.notifyWith(n,r):--s||l.resolveWith(n,r)}};if(a>1)for(t=new Array(a),n=new Array(a),r=new Array(a);a>i;i++)o[i]&&oe.isFunction(o[i].promise)?o[i].promise().progress(u(i,n,t)).done(u(i,r,o)).fail(l.reject):--s;return s||l.resolveWith(r,o),l.promise()}});var xe;oe.fn.ready=function(e){return oe.ready.promise().done(e),this},oe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?oe.readyWait++:oe.ready(!0)},ready:function(e){(e===!0?--oe.readyWait:oe.isReady)||(oe.isReady=!0,e!==!0&&--oe.readyWait>0||(xe.resolveWith(Y,[oe]),oe.fn.triggerHandler&&(oe(Y).triggerHandler("ready"),oe(Y).off("ready"))))}}),oe.ready.promise=function(t){return xe||(xe=oe.Deferred(),"complete"===Y.readyState||"loading"!==Y.readyState&&!Y.documentElement.doScroll?e.setTimeout(oe.ready):(Y.addEventListener("DOMContentLoaded",a),e.addEventListener("load",a))),xe.promise(t)},oe.ready.promise();var Ee=function(e,t,n,r,i,o,a){var s=0,l=e.length,u=null==n;if("object"===oe.type(n)){i=!0;for(s in n)Ee(e,t,s,n[s],!0,o,a)}else if(void 0!==r&&(i=!0,oe.isFunction(r)||(a=!0),u&&(a?(t.call(e,r),t=null):(u=t,t=function(e,t,n){return u.call(oe(e),n)})),t))for(;l>s;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:u?t.call(e):l?t(e[0],n):o},Ce=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};s.uid=1,s.prototype={register:function(e,t){var n=t||{};return e.nodeType?e[this.expando]=n:Object.defineProperty(e,this.expando,{value:n,writable:!0,configurable:!0}),e[this.expando]},cache:function(e){if(!Ce(e))return{};var t=e[this.expando];return t||(t={},Ce(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[t]=n;else for(r in t)i[r]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][t]},access:function(e,t,n){var r;return void 0===t||t&&"string"==typeof t&&void 0===n?(r=this.get(e,t),void 0!==r?r:this.get(e,oe.camelCase(t))):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r,i,o=e[this.expando];if(void 0!==o){if(void 0===t)this.register(e);else{oe.isArray(t)?r=t.concat(t.map(oe.camelCase)):(i=oe.camelCase(t),t in o?r=[t,i]:(r=i,r=r in o?[r]:r.match(we)||[])),n=r.length;for(;n--;)delete o[r[n]]}(void 0===t||oe.isEmptyObject(o))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!oe.isEmptyObject(t)}};var Se=new s,Te=new s,Ae=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ne=/[A-Z]/g;oe.extend({hasData:function(e){return Te.hasData(e)||Se.hasData(e)},data:function(e,t,n){return Te.access(e,t,n)},removeData:function(e,t){Te.remove(e,t)},_data:function(e,t,n){return Se.access(e,t,n)},_removeData:function(e,t){Se.remove(e,t)}}),oe.fn.extend({data:function(e,t){var n,r,i,o=this[0],a=o&&o.attributes;if(void 0===e){if(this.length&&(i=Te.get(o),1===o.nodeType&&!Se.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&(r=a[n].name,0===r.indexOf("data-")&&(r=oe.camelCase(r.slice(5)),l(o,r,i[r])));Se.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof e?this.each(function(){Te.set(this,e)}):Ee(this,function(t){var n,r;if(o&&void 0===t){if(n=Te.get(o,e)||Te.get(o,e.replace(Ne,"-$&").toLowerCase()),void 0!==n)return n;if(r=oe.camelCase(e),n=Te.get(o,r),void 0!==n)return n;if(n=l(o,r,void 0),void 0!==n)return n}else r=oe.camelCase(e),this.each(function(){var n=Te.get(this,r);Te.set(this,r,t),e.indexOf("-")>-1&&void 0!==n&&Te.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){Te.remove(this,e)})}}),oe.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=Se.get(e,t),n&&(!r||oe.isArray(n)?r=Se.access(e,t,oe.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=oe.queue(e,t),r=n.length,i=n.shift(),o=oe._queueHooks(e,t),a=function(){oe.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Se.get(e,n)||Se.access(e,n,{empty:oe.Callbacks("once memory").add(function(){Se.remove(e,[t+"queue",n])})})}}),oe.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?oe.queue(this[0],e):void 0===t?this:this.each(function(){var n=oe.queue(this,e,t);oe._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&oe.dequeue(this,e)})},dequeue:function(e){return this.each(function(){oe.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=oe.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)n=Se.get(o[a],e+"queueHooks"),n&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var Le=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Oe=new RegExp("^(?:([+-])=|)("+Le+")([a-z%]*)$","i"),Ie=["Top","Right","Bottom","Left"],ke=function(e,t){return e=t||e,"none"===oe.css(e,"display")||!oe.contains(e.ownerDocument,e)},Re=/^(?:checkbox|radio)$/i,Me=/<([\w:-]+)/,De=/^$|\/(?:java|ecma)script/i,_e={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};_e.optgroup=_e.option,_e.tbody=_e.tfoot=_e.colgroup=_e.caption=_e.thead,_e.th=_e.td;var je=/<|&#?\w+;/;!function(){var e=Y.createDocumentFragment(),t=e.appendChild(Y.createElement("div")),n=Y.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),re.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",re.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Pe=/^key/,Fe=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,qe=/^([^.]*)(?:\.(.+)|)/;oe.event={global:{},add:function(e,t,n,r,i){var o,a,s,l,u,c,p,h,d,f,g,m=Se.get(e);if(m)for(n.handler&&(o=n,n=o.handler,i=o.selector),n.guid||(n.guid=oe.guid++),(l=m.events)||(l=m.events={}),(a=m.handle)||(a=m.handle=function(t){return"undefined"!=typeof oe&&oe.event.triggered!==t.type?oe.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(we)||[""],u=t.length;u--;)s=qe.exec(t[u])||[],d=g=s[1],f=(s[2]||"").split(".").sort(),d&&(p=oe.event.special[d]||{},d=(i?p.delegateType:p.bindType)||d,p=oe.event.special[d]||{},c=oe.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&oe.expr.match.needsContext.test(i),namespace:f.join(".")},o),(h=l[d])||(h=l[d]=[],h.delegateCount=0,p.setup&&p.setup.call(e,r,f,a)!==!1||e.addEventListener&&e.addEventListener(d,a)),p.add&&(p.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),i?h.splice(h.delegateCount++,0,c):h.push(c),oe.event.global[d]=!0)},remove:function(e,t,n,r,i){var o,a,s,l,u,c,p,h,d,f,g,m=Se.hasData(e)&&Se.get(e);if(m&&(l=m.events)){for(t=(t||"").match(we)||[""],u=t.length;u--;)if(s=qe.exec(t[u])||[],d=g=s[1],f=(s[2]||"").split(".").sort(),d){for(p=oe.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,h=l[d]||[],s=s[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=h.length;o--;)c=h[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(h.splice(o,1),c.selector&&h.delegateCount--,p.remove&&p.remove.call(e,c));a&&!h.length&&(p.teardown&&p.teardown.call(e,f,m.handle)!==!1||oe.removeEvent(e,d,m.handle),delete l[d])}else for(d in l)oe.event.remove(e,d+t[u],n,r,!0);oe.isEmptyObject(l)&&Se.remove(e,"handle events")}},dispatch:function(e){e=oe.event.fix(e);var t,n,r,i,o,a=[],s=X.call(arguments),l=(Se.get(this,"events")||{})[e.type]||[],u=oe.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,e)!==!1){for(a=oe.event.handlers.call(this,e,l),t=0;(i=a[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!e.isImmediatePropagationStopped();)e.rnamespace&&!e.rnamespace.test(o.namespace)||(e.handleObj=o,e.data=o.data,r=((oe.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s),void 0!==r&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,o,a=[],s=t.delegateCount,l=e.target;if(s&&l.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(r=[],n=0;s>n;n++)o=t[n],i=o.selector+" ",void 0===r[i]&&(r[i]=o.needsContext?oe(i,this).index(l)>-1:oe.find(i,this,null,[l]).length),r[i]&&r.push(o);r.length&&a.push({elem:l,handlers:r})}return s<t.length&&a.push({elem:this,handlers:t.slice(s)}),a},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,r,i,o=t.button;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||Y,r=n.documentElement,i=n.body,e.pageX=t.clientX+(r&&r.scrollLeft||i&&i.scrollLeft||0)-(r&&r.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||i&&i.scrollTop||0)-(r&&r.clientTop||i&&i.clientTop||0)),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},fix:function(e){if(e[oe.expando])return e;var t,n,r,i=e.type,o=e,a=this.fixHooks[i];for(a||(this.fixHooks[i]=a=Fe.test(i)?this.mouseHooks:Pe.test(i)?this.keyHooks:{}),r=a.props?this.props.concat(a.props):this.props,e=new oe.Event(o),t=r.length;t--;)n=r[t],e[n]=o[n];return e.target||(e.target=Y),3===e.target.nodeType&&(e.target=e.target.parentNode),a.filter?a.filter(e,o):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==g()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===g()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&oe.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return oe.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},oe.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},oe.Event=function(e,t){return this instanceof oe.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?d:f):this.type=e,t&&oe.extend(this,t),this.timeStamp=e&&e.timeStamp||oe.now(),void(this[oe.expando]=!0)):new oe.Event(e,t)},oe.Event.prototype={constructor:oe.Event,isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=d,e&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=d,e&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=d,e&&e.stopImmediatePropagation(),this.stopPropagation()}},oe.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){oe.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return i&&(i===r||oe.contains(r,i))||(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),oe.fn.extend({on:function(e,t,n,r){return m(this,e,t,n,r)},one:function(e,t,n,r){return m(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,oe(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return t!==!1&&"function"!=typeof t||(n=t,t=void 0),n===!1&&(n=f),this.each(function(){oe.event.remove(this,e,n,t)})}});var Ue=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,Be=/<script|<style|<link/i,He=/checked\s*(?:[^=]|=\s*.checked.)/i,Ve=/^true\/(.*)/,Ge=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;oe.extend({htmlPrefilter:function(e){return e.replace(Ue,"<$1></$2>")},clone:function(e,t,n){var r,i,o,a,s=e.cloneNode(!0),l=oe.contains(e.ownerDocument,e);if(!(re.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||oe.isXMLDoc(e)))for(a=c(s),o=c(e),r=0,i=o.length;i>r;r++)w(o[r],a[r]);if(t)if(n)for(o=o||c(e),a=a||c(s),r=0,i=o.length;i>r;r++)b(o[r],a[r]);else b(e,s);return a=c(s,"script"),a.length>0&&p(a,!l&&c(e,"script")),s},cleanData:function(e){for(var t,n,r,i=oe.event.special,o=0;void 0!==(n=e[o]);o++)if(Ce(n)){if(t=n[Se.expando]){if(t.events)for(r in t.events)i[r]?oe.event.remove(n,r):oe.removeEvent(n,r,t.handle);n[Se.expando]=void 0}n[Te.expando]&&(n[Te.expando]=void 0)}}}),oe.fn.extend({domManip:x,detach:function(e){return E(this,e,!0)},remove:function(e){return E(this,e)},text:function(e){return Ee(this,function(e){return void 0===e?oe.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return x(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=v(this,e);t.appendChild(e)}})},prepend:function(){return x(this,arguments,function(e){
if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=v(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return x(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return x(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(oe.cleanData(c(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return oe.clone(this,e,t)})},html:function(e){return Ee(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Be.test(e)&&!_e[(Me.exec(e)||["",""])[1].toLowerCase()]){e=oe.htmlPrefilter(e);try{for(;r>n;n++)t=this[n]||{},1===t.nodeType&&(oe.cleanData(c(t,!1)),t.innerHTML=e);t=0}catch(i){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return x(this,arguments,function(t){var n=this.parentNode;oe.inArray(this,e)<0&&(oe.cleanData(c(this)),n&&n.replaceChild(t,this))},e)}}),oe.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){oe.fn[e]=function(e){for(var n,r=[],i=oe(e),o=i.length-1,a=0;o>=a;a++)n=a===o?this:this.clone(!0),oe(i[a])[t](n),J.apply(r,n.get());return this.pushStack(r)}});var We,ze={HTML:"block",BODY:"block"},Ke=/^margin/,Ye=new RegExp("^("+Le+")(?!px)[a-z%]+$","i"),Xe=function(t){var n=t.ownerDocument.defaultView;return n&&n.opener||(n=e),n.getComputedStyle(t)},Qe=function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i},Je=Y.documentElement;!function(){function t(){s.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",s.innerHTML="",Je.appendChild(a);var t=e.getComputedStyle(s);n="1%"!==t.top,o="2px"===t.marginLeft,r="4px"===t.width,s.style.marginRight="50%",i="4px"===t.marginRight,Je.removeChild(a)}var n,r,i,o,a=Y.createElement("div"),s=Y.createElement("div");s.style&&(s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",re.clearCloneStyle="content-box"===s.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(s),oe.extend(re,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return null==r&&t(),r},pixelMarginRight:function(){return null==r&&t(),i},reliableMarginLeft:function(){return null==r&&t(),o},reliableMarginRight:function(){var t,n=s.appendChild(Y.createElement("div"));return n.style.cssText=s.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",n.style.marginRight=n.style.width="0",s.style.width="1px",Je.appendChild(a),t=!parseFloat(e.getComputedStyle(n).marginRight),Je.removeChild(a),s.removeChild(n),t}}))}();var Ze=/^(none|table(?!-c[ea]).+)/,et={position:"absolute",visibility:"hidden",display:"block"},tt={letterSpacing:"0",fontWeight:"400"},nt=["Webkit","O","Moz","ms"],rt=Y.createElement("div").style;oe.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=T(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=oe.camelCase(t),l=e.style;return t=oe.cssProps[s]||(oe.cssProps[s]=N(s)||s),a=oe.cssHooks[t]||oe.cssHooks[s],void 0===n?a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t]:(o=typeof n,"string"===o&&(i=Oe.exec(n))&&i[1]&&(n=u(e,t,i),o="number"),void(null!=n&&n===n&&("number"===o&&(n+=i&&i[3]||(oe.cssNumber[s]?"":"px")),re.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(l[t]=n))))}},css:function(e,t,n,r){var i,o,a,s=oe.camelCase(t);return t=oe.cssProps[s]||(oe.cssProps[s]=N(s)||s),a=oe.cssHooks[t]||oe.cssHooks[s],a&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=T(e,t,r)),"normal"===i&&t in tt&&(i=tt[t]),""===n||n?(o=parseFloat(i),n===!0||isFinite(o)?o||0:i):i}}),oe.each(["height","width"],function(e,t){oe.cssHooks[t]={get:function(e,n,r){return n?Ze.test(oe.css(e,"display"))&&0===e.offsetWidth?Qe(e,et,function(){return I(e,t,r)}):I(e,t,r):void 0},set:function(e,n,r){var i,o=r&&Xe(e),a=r&&O(e,t,r,"border-box"===oe.css(e,"boxSizing",!1,o),o);return a&&(i=Oe.exec(n))&&"px"!==(i[3]||"px")&&(e.style[t]=n,n=oe.css(e,t)),L(e,n,a)}}}),oe.cssHooks.marginLeft=A(re.reliableMarginLeft,function(e,t){return t?(parseFloat(T(e,"marginLeft"))||e.getBoundingClientRect().left-Qe(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px":void 0}),oe.cssHooks.marginRight=A(re.reliableMarginRight,function(e,t){return t?Qe(e,{display:"inline-block"},T,[e,"marginRight"]):void 0}),oe.each({margin:"",padding:"",border:"Width"},function(e,t){oe.cssHooks[e+t]={expand:function(n){for(var r=0,i={},o="string"==typeof n?n.split(" "):[n];4>r;r++)i[e+Ie[r]+t]=o[r]||o[r-2]||o[0];return i}},Ke.test(e)||(oe.cssHooks[e+t].set=L)}),oe.fn.extend({css:function(e,t){return Ee(this,function(e,t,n){var r,i,o={},a=0;if(oe.isArray(t)){for(r=Xe(e),i=t.length;i>a;a++)o[t[a]]=oe.css(e,t[a],!1,r);return o}return void 0!==n?oe.style(e,t,n):oe.css(e,t)},e,t,arguments.length>1)},show:function(){return k(this,!0)},hide:function(){return k(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ke(this)?oe(this).show():oe(this).hide()})}}),oe.Tween=R,R.prototype={constructor:R,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||oe.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(oe.cssNumber[n]?"":"px")},cur:function(){var e=R.propHooks[this.prop];return e&&e.get?e.get(this):R.propHooks._default.get(this)},run:function(e){var t,n=R.propHooks[this.prop];return this.options.duration?this.pos=t=oe.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):R.propHooks._default.set(this),this}},R.prototype.init.prototype=R.prototype,R.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=oe.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){oe.fx.step[e.prop]?oe.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[oe.cssProps[e.prop]]&&!oe.cssHooks[e.prop]?e.elem[e.prop]=e.now:oe.style(e.elem,e.prop,e.now+e.unit)}}},R.propHooks.scrollTop=R.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},oe.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},oe.fx=R.prototype.init,oe.fx.step={};var it,ot,at=/^(?:toggle|show|hide)$/,st=/queueHooks$/;oe.Animation=oe.extend(F,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return u(n.elem,e,Oe.exec(t),n),n}]},tweener:function(e,t){oe.isFunction(e)?(t=e,e=["*"]):e=e.match(we);for(var n,r=0,i=e.length;i>r;r++)n=e[r],F.tweeners[n]=F.tweeners[n]||[],F.tweeners[n].unshift(t)},prefilters:[j],prefilter:function(e,t){t?F.prefilters.unshift(e):F.prefilters.push(e)}}),oe.speed=function(e,t,n){var r=e&&"object"==typeof e?oe.extend({},e):{complete:n||!n&&t||oe.isFunction(e)&&e,duration:e,easing:n&&t||t&&!oe.isFunction(t)&&t};return r.duration=oe.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in oe.fx.speeds?oe.fx.speeds[r.duration]:oe.fx.speeds._default,null!=r.queue&&r.queue!==!0||(r.queue="fx"),r.old=r.complete,r.complete=function(){oe.isFunction(r.old)&&r.old.call(this),r.queue&&oe.dequeue(this,r.queue)},r},oe.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ke).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=oe.isEmptyObject(e),o=oe.speed(t,n,r),a=function(){var t=F(this,oe.extend({},e),o);(i||Se.get(this,"finish"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,i=null!=e&&e+"queueHooks",o=oe.timers,a=Se.get(this);if(i)a[i]&&a[i].stop&&r(a[i]);else for(i in a)a[i]&&a[i].stop&&st.test(i)&&r(a[i]);for(i=o.length;i--;)o[i].elem!==this||null!=e&&o[i].queue!==e||(o[i].anim.stop(n),t=!1,o.splice(i,1));!t&&n||oe.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=Se.get(this),r=n[e+"queue"],i=n[e+"queueHooks"],o=oe.timers,a=r?r.length:0;for(n.finish=!0,oe.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}}),oe.each(["toggle","show","hide"],function(e,t){var n=oe.fn[t];oe.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(D(t,!0),e,r,i)}}),oe.each({slideDown:D("show"),slideUp:D("hide"),slideToggle:D("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){oe.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),oe.timers=[],oe.fx.tick=function(){var e,t=0,n=oe.timers;for(it=oe.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||oe.fx.stop(),it=void 0},oe.fx.timer=function(e){oe.timers.push(e),e()?oe.fx.start():oe.timers.pop()},oe.fx.interval=13,oe.fx.start=function(){ot||(ot=e.setInterval(oe.fx.tick,oe.fx.interval))},oe.fx.stop=function(){e.clearInterval(ot),ot=null},oe.fx.speeds={slow:600,fast:200,_default:400},oe.fn.delay=function(t,n){return t=oe.fx?oe.fx.speeds[t]||t:t,n=n||"fx",this.queue(n,function(n,r){var i=e.setTimeout(n,t);r.stop=function(){e.clearTimeout(i)}})},function(){var e=Y.createElement("input"),t=Y.createElement("select"),n=t.appendChild(Y.createElement("option"));e.type="checkbox",re.checkOn=""!==e.value,re.optSelected=n.selected,t.disabled=!0,re.optDisabled=!n.disabled,e=Y.createElement("input"),e.value="t",e.type="radio",re.radioValue="t"===e.value}();var lt,ut=oe.expr.attrHandle;oe.fn.extend({attr:function(e,t){return Ee(this,oe.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){oe.removeAttr(this,e)})}}),oe.extend({attr:function(e,t,n){var r,i,o=e.nodeType;return 3!==o&&8!==o&&2!==o?"undefined"==typeof e.getAttribute?oe.prop(e,t,n):(1===o&&oe.isXMLDoc(e)||(t=t.toLowerCase(),i=oe.attrHooks[t]||(oe.expr.match.bool.test(t)?lt:void 0)),void 0!==n?null===n?void oe.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:(r=oe.find.attr(e,t),null==r?void 0:r)):void 0},attrHooks:{type:{set:function(e,t){if(!re.radioValue&&"radio"===t&&oe.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(we);if(o&&1===e.nodeType)for(;n=o[i++];)r=oe.propFix[n]||n,oe.expr.match.bool.test(n)&&(e[r]=!1),e.removeAttribute(n)}}),lt={set:function(e,t,n){return t===!1?oe.removeAttr(e,n):e.setAttribute(n,n),n}},oe.each(oe.expr.match.bool.source.match(/\w+/g),function(e,t){var n=ut[t]||oe.find.attr;ut[t]=function(e,t,r){var i,o;return r||(o=ut[t],ut[t]=i,i=null!=n(e,t,r)?t.toLowerCase():null,ut[t]=o),i}});var ct=/^(?:input|select|textarea|button)$/i,pt=/^(?:a|area)$/i;oe.fn.extend({prop:function(e,t){return Ee(this,oe.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[oe.propFix[e]||e]})}}),oe.extend({prop:function(e,t,n){var r,i,o=e.nodeType;return 3!==o&&8!==o&&2!==o?(1===o&&oe.isXMLDoc(e)||(t=oe.propFix[t]||t,i=oe.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]):void 0},propHooks:{tabIndex:{get:function(e){var t=oe.find.attr(e,"tabindex");return t?parseInt(t,10):ct.test(e.nodeName)||pt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),re.optSelected||(oe.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),oe.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){oe.propFix[this.toLowerCase()]=this});var ht=/[\t\r\n\f]/g;oe.fn.extend({addClass:function(e){var t,n,r,i,o,a,s,l=0;if(oe.isFunction(e))return this.each(function(t){oe(this).addClass(e.call(this,t,q(this)))});if("string"==typeof e&&e)for(t=e.match(we)||[];n=this[l++];)if(i=q(n),r=1===n.nodeType&&(" "+i+" ").replace(ht," ")){for(a=0;o=t[a++];)r.indexOf(" "+o+" ")<0&&(r+=o+" ");s=oe.trim(r),i!==s&&n.setAttribute("class",s)}return this},removeClass:function(e){var t,n,r,i,o,a,s,l=0;if(oe.isFunction(e))return this.each(function(t){oe(this).removeClass(e.call(this,t,q(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(we)||[];n=this[l++];)if(i=q(n),r=1===n.nodeType&&(" "+i+" ").replace(ht," ")){for(a=0;o=t[a++];)for(;r.indexOf(" "+o+" ")>-1;)r=r.replace(" "+o+" "," ");s=oe.trim(r),i!==s&&n.setAttribute("class",s)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):oe.isFunction(e)?this.each(function(n){oe(this).toggleClass(e.call(this,n,q(this),t),t)}):this.each(function(){var t,r,i,o;if("string"===n)for(r=0,i=oe(this),o=e.match(we)||[];t=o[r++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else void 0!==e&&"boolean"!==n||(t=q(this),t&&Se.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":Se.get(this,"__className__")||""))})},hasClass:function(e){var t,n,r=0;for(t=" "+e+" ";n=this[r++];)if(1===n.nodeType&&(" "+q(n)+" ").replace(ht," ").indexOf(t)>-1)return!0;return!1}});var dt=/\r/g,ft=/[\x20\t\r\n\f]+/g;oe.fn.extend({val:function(e){var t,n,r,i=this[0];return arguments.length?(r=oe.isFunction(e),this.each(function(n){var i;1===this.nodeType&&(i=r?e.call(this,n,oe(this).val()):e,null==i?i="":"number"==typeof i?i+="":oe.isArray(i)&&(i=oe.map(i,function(e){return null==e?"":e+""})),t=oe.valHooks[this.type]||oe.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,i,"value")||(this.value=i))})):i?(t=oe.valHooks[i.type]||oe.valHooks[i.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(i,"value"))?n:(n=i.value,"string"==typeof n?n.replace(dt,""):null==n?"":n)):void 0}}),oe.extend({valHooks:{option:{get:function(e){var t=oe.find.attr(e,"value");return null!=t?t:oe.trim(oe.text(e)).replace(ft," ")}},select:{get:function(e){for(var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,l=0>i?s:o?i:0;s>l;l++)if(n=r[l],(n.selected||l===i)&&(re.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!oe.nodeName(n.parentNode,"optgroup"))){if(t=oe(n).val(),o)return t;a.push(t)}return a},set:function(e,t){for(var n,r,i=e.options,o=oe.makeArray(t),a=i.length;a--;)r=i[a],(r.selected=oe.inArray(oe.valHooks.option.get(r),o)>-1)&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),oe.each(["radio","checkbox"],function(){oe.valHooks[this]={set:function(e,t){return oe.isArray(t)?e.checked=oe.inArray(oe(e).val(),t)>-1:void 0}},re.checkOn||(oe.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var gt=/^(?:focusinfocus|focusoutblur)$/;oe.extend(oe.event,{trigger:function(t,n,r,i){var o,a,s,l,u,c,p,h=[r||Y],d=ne.call(t,"type")?t.type:t,f=ne.call(t,"namespace")?t.namespace.split("."):[];if(a=s=r=r||Y,3!==r.nodeType&&8!==r.nodeType&&!gt.test(d+oe.event.triggered)&&(d.indexOf(".")>-1&&(f=d.split("."),d=f.shift(),f.sort()),u=d.indexOf(":")<0&&"on"+d,t=t[oe.expando]?t:new oe.Event(d,"object"==typeof t&&t),t.isTrigger=i?2:3,t.namespace=f.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),n=null==n?[t]:oe.makeArray(n,[t]),p=oe.event.special[d]||{},i||!p.trigger||p.trigger.apply(r,n)!==!1)){if(!i&&!p.noBubble&&!oe.isWindow(r)){for(l=p.delegateType||d,gt.test(l+d)||(a=a.parentNode);a;a=a.parentNode)h.push(a),s=a;s===(r.ownerDocument||Y)&&h.push(s.defaultView||s.parentWindow||e)}for(o=0;(a=h[o++])&&!t.isPropagationStopped();)t.type=o>1?l:p.bindType||d,c=(Se.get(a,"events")||{})[t.type]&&Se.get(a,"handle"),c&&c.apply(a,n),c=u&&a[u],c&&c.apply&&Ce(a)&&(t.result=c.apply(a,n),t.result===!1&&t.preventDefault());return t.type=d,i||t.isDefaultPrevented()||p._default&&p._default.apply(h.pop(),n)!==!1||!Ce(r)||u&&oe.isFunction(r[d])&&!oe.isWindow(r)&&(s=r[u],s&&(r[u]=null),oe.event.triggered=d,r[d](),oe.event.triggered=void 0,s&&(r[u]=s)),t.result}},simulate:function(e,t,n){var r=oe.extend(new oe.Event,n,{type:e,isSimulated:!0});oe.event.trigger(r,null,t),r.isDefaultPrevented()&&n.preventDefault()}}),oe.fn.extend({trigger:function(e,t){return this.each(function(){oe.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?oe.event.trigger(e,t,n,!0):void 0}}),oe.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){oe.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),oe.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),re.focusin="onfocusin"in e,re.focusin||oe.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){oe.event.simulate(t,e.target,oe.event.fix(e))};oe.event.special[t]={setup:function(){var r=this.ownerDocument||this,i=Se.access(r,t);i||r.addEventListener(e,n,!0),Se.access(r,t,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this,i=Se.access(r,t)-1;i?Se.access(r,t,i):(r.removeEventListener(e,n,!0),Se.remove(r,t))}}});var mt=e.location,vt=oe.now(),yt=/\?/;oe.parseJSON=function(e){return JSON.parse(e+"")},oe.parseXML=function(t){var n;if(!t||"string"!=typeof t)return null;try{n=(new e.DOMParser).parseFromString(t,"text/xml")}catch(r){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||oe.error("Invalid XML: "+t),n};var $t=/#.*$/,bt=/([?&])_=[^&]*/,wt=/^(.*?):[ \t]*([^\r\n]*)$/gm,xt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Et=/^(?:GET|HEAD)$/,Ct=/^\/\//,St={},Tt={},At="*/".concat("*"),Nt=Y.createElement("a");Nt.href=mt.href,oe.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:mt.href,type:"GET",isLocal:xt.test(mt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":At,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":oe.parseJSON,"text xml":oe.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?H(H(e,oe.ajaxSettings),t):H(oe.ajaxSettings,e)},ajaxPrefilter:U(St),ajaxTransport:U(Tt),ajax:function(t,n){function r(t,n,r,s){var u,p,y,$,w,E=n;2!==b&&(b=2,l&&e.clearTimeout(l),i=void 0,a=s||"",x.readyState=t>0?4:0,u=t>=200&&300>t||304===t,r&&($=V(h,x,r)),$=G(h,$,x,u),u?(h.ifModified&&(w=x.getResponseHeader("Last-Modified"),w&&(oe.lastModified[o]=w),w=x.getResponseHeader("etag"),w&&(oe.etag[o]=w)),204===t||"HEAD"===h.type?E="nocontent":304===t?E="notmodified":(E=$.state,p=$.data,y=$.error,u=!y)):(y=E,!t&&E||(E="error",0>t&&(t=0))),x.status=t,x.statusText=(n||E)+"",u?g.resolveWith(d,[p,E,x]):g.rejectWith(d,[x,E,y]),x.statusCode(v),v=void 0,c&&f.trigger(u?"ajaxSuccess":"ajaxError",[x,h,u?p:y]),m.fireWith(d,[x,E]),c&&(f.trigger("ajaxComplete",[x,h]),--oe.active||oe.event.trigger("ajaxStop")))}"object"==typeof t&&(n=t,t=void 0),n=n||{};var i,o,a,s,l,u,c,p,h=oe.ajaxSetup({},n),d=h.context||h,f=h.context&&(d.nodeType||d.jquery)?oe(d):oe.event,g=oe.Deferred(),m=oe.Callbacks("once memory"),v=h.statusCode||{},y={},$={},b=0,w="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!s)for(s={};t=wt.exec(a);)s[t[1].toLowerCase()]=t[2];t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=$[n]=$[n]||e,y[e]=t),this},overrideMimeType:function(e){return b||(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)v[t]=[v[t],e[t]];else x.always(e[x.status]);return this},abort:function(e){var t=e||w;return i&&i.abort(t),r(0,t),this}};if(g.promise(x).complete=m.add,x.success=x.done,x.error=x.fail,h.url=((t||h.url||mt.href)+"").replace($t,"").replace(Ct,mt.protocol+"//"),h.type=n.method||n.type||h.method||h.type,h.dataTypes=oe.trim(h.dataType||"*").toLowerCase().match(we)||[""],null==h.crossDomain){u=Y.createElement("a");try{u.href=h.url,u.href=u.href,h.crossDomain=Nt.protocol+"//"+Nt.host!=u.protocol+"//"+u.host}catch(E){h.crossDomain=!0}}if(h.data&&h.processData&&"string"!=typeof h.data&&(h.data=oe.param(h.data,h.traditional)),B(St,h,n,x),2===b)return x;c=oe.event&&h.global,c&&0===oe.active++&&oe.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!Et.test(h.type),o=h.url,h.hasContent||(h.data&&(o=h.url+=(yt.test(o)?"&":"?")+h.data,delete h.data),h.cache===!1&&(h.url=bt.test(o)?o.replace(bt,"$1_="+vt++):o+(yt.test(o)?"&":"?")+"_="+vt++)),h.ifModified&&(oe.lastModified[o]&&x.setRequestHeader("If-Modified-Since",oe.lastModified[o]),oe.etag[o]&&x.setRequestHeader("If-None-Match",oe.etag[o])),(h.data&&h.hasContent&&h.contentType!==!1||n.contentType)&&x.setRequestHeader("Content-Type",h.contentType),x.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+At+"; q=0.01":""):h.accepts["*"]);for(p in h.headers)x.setRequestHeader(p,h.headers[p]);if(h.beforeSend&&(h.beforeSend.call(d,x,h)===!1||2===b))return x.abort();w="abort";for(p in{success:1,error:1,complete:1})x[p](h[p]);if(i=B(Tt,h,n,x)){if(x.readyState=1,c&&f.trigger("ajaxSend",[x,h]),2===b)return x;h.async&&h.timeout>0&&(l=e.setTimeout(function(){x.abort("timeout")},h.timeout));try{b=1,i.send(y,r)}catch(E){if(!(2>b))throw E;r(-1,E)}}else r(-1,"No Transport");return x},getJSON:function(e,t,n){return oe.get(e,t,n,"json")},getScript:function(e,t){return oe.get(e,void 0,t,"script")}}),oe.each(["get","post"],function(e,t){oe[t]=function(e,n,r,i){return oe.isFunction(n)&&(i=i||r,r=n,n=void 0),oe.ajax(oe.extend({url:e,type:t,dataType:i,data:n,success:r},oe.isPlainObject(e)&&e))}}),oe._evalUrl=function(e){return oe.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},oe.fn.extend({wrapAll:function(e){var t;return oe.isFunction(e)?this.each(function(t){oe(this).wrapAll(e.call(this,t))}):(this[0]&&(t=oe(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return oe.isFunction(e)?this.each(function(t){oe(this).wrapInner(e.call(this,t))}):this.each(function(){var t=oe(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=oe.isFunction(e);return this.each(function(n){oe(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){oe.nodeName(this,"body")||oe(this).replaceWith(this.childNodes)}).end()}}),oe.expr.filters.hidden=function(e){return!oe.expr.filters.visible(e)},oe.expr.filters.visible=function(e){return e.offsetWidth>0||e.offsetHeight>0||e.getClientRects().length>0};var Lt=/%20/g,Ot=/\[\]$/,It=/\r?\n/g,kt=/^(?:submit|button|image|reset|file)$/i,Rt=/^(?:input|select|textarea|keygen)/i;oe.param=function(e,t){var n,r=[],i=function(e,t){t=oe.isFunction(t)?t():null==t?"":t,r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=oe.ajaxSettings&&oe.ajaxSettings.traditional),oe.isArray(e)||e.jquery&&!oe.isPlainObject(e))oe.each(e,function(){i(this.name,this.value)});else for(n in e)W(n,e[n],t,i);return r.join("&").replace(Lt,"+")},oe.fn.extend({serialize:function(){return oe.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=oe.prop(this,"elements");return e?oe.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!oe(this).is(":disabled")&&Rt.test(this.nodeName)&&!kt.test(e)&&(this.checked||!Re.test(e))}).map(function(e,t){var n=oe(this).val();return null==n?null:oe.isArray(n)?oe.map(n,function(e){return{name:t.name,value:e.replace(It,"\r\n")}}):{name:t.name,value:n.replace(It,"\r\n")}}).get()}}),oe.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(t){}};var Mt={0:200,1223:204},Dt=oe.ajaxSettings.xhr();re.cors=!!Dt&&"withCredentials"in Dt,re.ajax=Dt=!!Dt,oe.ajaxTransport(function(t){var n,r;return re.cors||Dt&&!t.crossDomain?{send:function(i,o){var a,s=t.xhr();if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)s[a]=t.xhrFields[a];t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");for(a in i)s.setRequestHeader(a,i[a]);n=function(e){return function(){n&&(n=r=s.onload=s.onerror=s.onabort=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Mt[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),r=s.onerror=n("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&e.setTimeout(function(){n&&r()})},n=n("abort");try{s.send(t.hasContent&&t.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}:void 0}),oe.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return oe.globalEval(e),e}}}),oe.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),oe.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(r,i){t=oe("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&i("error"===e.type?404:200,e.type)}),Y.head.appendChild(t[0])},abort:function(){n&&n()}}}});var _t=[],jt=/(=)\?(?=&|$)|\?\?/;oe.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=_t.pop()||oe.expando+"_"+vt++;return this[e]=!0,e}}),oe.ajaxPrefilter("json jsonp",function(t,n,r){var i,o,a,s=t.jsonp!==!1&&(jt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&jt.test(t.data)&&"data");return s||"jsonp"===t.dataTypes[0]?(i=t.jsonpCallback=oe.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(jt,"$1"+i):t.jsonp!==!1&&(t.url+=(yt.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return a||oe.error(i+" was not called"),a[0]},t.dataTypes[0]="json",o=e[i],e[i]=function(){a=arguments},r.always(function(){void 0===o?oe(e).removeProp(i):e[i]=o,t[i]&&(t.jsonpCallback=n.jsonpCallback,_t.push(i)),a&&oe.isFunction(o)&&o(a[0]),a=o=void 0}),"script"):void 0}),oe.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||Y;var r=fe.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=h([e],t,i),i&&i.length&&oe(i).remove(),oe.merge([],r.childNodes))};var Pt=oe.fn.load;oe.fn.load=function(e,t,n){if("string"!=typeof e&&Pt)return Pt.apply(this,arguments);var r,i,o,a=this,s=e.indexOf(" ");return s>-1&&(r=oe.trim(e.slice(s)),e=e.slice(0,s)),oe.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),a.length>0&&oe.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?oe("<div>").append(oe.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},oe.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){oe.fn[t]=function(e){return this.on(t,e)}}),oe.expr.filters.animated=function(e){return oe.grep(oe.timers,function(t){return e===t.elem}).length},oe.offset={setOffset:function(e,t,n){var r,i,o,a,s,l,u,c=oe.css(e,"position"),p=oe(e),h={};"static"===c&&(e.style.position="relative"),s=p.offset(),o=oe.css(e,"top"),l=oe.css(e,"left"),u=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,u?(r=p.position(),a=r.top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(l)||0),oe.isFunction(t)&&(t=t.call(e,n,oe.extend({},s))),null!=t.top&&(h.top=t.top-s.top+a),null!=t.left&&(h.left=t.left-s.left+i),"using"in t?t.using.call(e,h):p.css(h)}},oe.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){oe.offset.setOffset(this,e,t)});var t,n,r=this[0],i={top:0,left:0},o=r&&r.ownerDocument;return o?(t=o.documentElement,oe.contains(t,r)?(i=r.getBoundingClientRect(),n=z(o),{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i):void 0},position:function(){if(this[0]){var e,t,n=this[0],r={top:0,left:0};return"fixed"===oe.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),oe.nodeName(e[0],"html")||(r=e.offset()),r.top+=oe.css(e[0],"borderTopWidth",!0),r.left+=oe.css(e[0],"borderLeftWidth",!0)),{top:t.top-r.top-oe.css(n,"marginTop",!0),left:t.left-r.left-oe.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===oe.css(e,"position");)e=e.offsetParent;return e||Je})}}),oe.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var n="pageYOffset"===t;oe.fn[e]=function(r){return Ee(this,function(e,r,i){var o=z(e);return void 0===i?o?o[t]:e[r]:void(o?o.scrollTo(n?o.pageXOffset:i,n?i:o.pageYOffset):e[r]=i)},e,r,arguments.length)}}),oe.each(["top","left"],function(e,t){oe.cssHooks[t]=A(re.pixelPosition,function(e,n){return n?(n=T(e,t),Ye.test(n)?oe(e).position()[t]+"px":n):void 0})}),oe.each({Height:"height",Width:"width"},function(e,t){oe.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,r){oe.fn[r]=function(r,i){var o=arguments.length&&(n||"boolean"!=typeof r),a=n||(r===!0||i===!0?"margin":"border");return Ee(this,function(t,n,r){var i;return oe.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+e],i["scroll"+e],t.body["offset"+e],i["offset"+e],i["client"+e])):void 0===r?oe.css(t,n,a):oe.style(t,n,r,a)},t,o?r:void 0,o,null)}})}),oe.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},size:function(){return this.length}}),oe.fn.andSelf=oe.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return oe});var Ft=e.jQuery,qt=e.$;return oe.noConflict=function(t){return e.$===oe&&(e.$=qt),t&&e.jQuery===oe&&(e.jQuery=Ft),oe},t||(e.jQuery=e.$=oe),oe});
//# sourceMappingURL=data:application/json;base64,
